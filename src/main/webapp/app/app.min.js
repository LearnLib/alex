/*! ALEX 2015-04-15 */
!function(){"use strict";angular.module("ALEX",["ngAnimate","ui.sortable","ui.bootstrap","ui.ace","ui.router","ngToast","n3-line-chart","selectionModel","templates-all","ALEX.controller","ALEX.resources","ALEX.directives","ALEX.services","ALEX.filters","ALEX.routes","ALEX.constants","ALEX.models"]),angular.module("ALEX.controller",[]),angular.module("ALEX.resources",[]),angular.module("ALEX.directives",[]),angular.module("ALEX.services",[]),angular.module("ALEX.filters",[]),angular.module("ALEX.routes",["ALEX.constants","templates-all","ui.router"]),angular.module("ALEX.constants",[]),angular.module("ALEX.models",[]),angular.module("ALEX").config(["ngToastProvider",function(a){a.configure({verticalPosition:"top",horizontalPosition:"center",maxNumber:1})}]).run(["$rootScope","$state","_","paths",function(a,b,c,d){a._=c,a.paths=d,a.$on("$stateChangeSuccess",function(a,c,d,e){b.previous=e})}])}(),angular.module("templates-all",["app/views/directives/counterexamples-widget.html","app/views/directives/html-element-picker.html","app/views/directives/hypothesis.html","app/views/directives/index-browser.html","app/views/directives/learn-results-panel.html","app/views/directives/learn-results-slideshow-panel.html","app/views/directives/learn-resume-settings-widget.html","app/views/directives/learner-result-chart-multiple-final.html","app/views/directives/load-screen.html","app/views/directives/navigation.html","app/views/directives/observation-table.html","app/views/directives/view-heading.html","app/views/directives/widget.html","app/views/includes/action-forms.html","app/views/modals/action-create-modal.html","app/views/modals/action-edit-modal.html","app/views/modals/confirm-dialog.html","app/views/modals/hypothesis-layout-settings-modal.html","app/views/modals/learn-result-details-modal.html","app/views/modals/learn-setup-settings-modal.html","app/views/modals/prompt-dialog.html","app/views/modals/symbol-create-modal.html","app/views/modals/symbol-edit-modal.html","app/views/modals/symbol-group-create-modal.html","app/views/modals/symbol-group-edit-modal.html","app/views/modals/symbol-move-modal.html","app/views/modals/variables-counters-occurrence-modal.html","app/views/pages/about.html","app/views/pages/counters.html","app/views/pages/help.html","app/views/pages/home.html","app/views/pages/learn-results-compare.html","app/views/pages/learn-results-statistics.html","app/views/pages/learn-results.html","app/views/pages/learn-setup.html","app/views/pages/learn-start.html","app/views/pages/project-create.html","app/views/pages/project-settings.html","app/views/pages/project.html","app/views/pages/symbols-actions.html","app/views/pages/symbols-export.html","app/views/pages/symbols-history.html","app/views/pages/symbols-import.html","app/views/pages/symbols-trash.html","app/views/pages/symbols.html"]),angular.module("app/views/directives/counterexamples-widget.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/counterexamples-widget.html",'<form class="form form-condensed" ng-submit="addCounterExample()">\n    <p class="text-muted">\n        <em>Click on the labels of the hypothesis to create a counterexample. Click on an output to toggle it.</em>\n    </p>\n\n    <div class="list-group list-group-condensed" as-sortable ng-model="counterExample">\n        <div class="list-group-item" ng-repeat="io in counterExample" as-sortable-item>\n\n            <i class="fa fa-fw fa-close pull-right" ng-click="removeInputOutputAt($index)"></i>\n            <i class="fa fa-fw fa-sort pull-right" as-sortable-item-handle></i>\n\n            <span class="label label-primary">{{io.input}}</span>\n            <span class="label" ng-class="io.output === outputAlphabet.OK ? \'label-success\' : \'label-danger\'"\n                  ng-click="toggleOutputAt($index)">{{io.output}}</span>\n        </div>\n    </div>\n\n    <div class="form-group" ng-show="counterExample.length > 0">\n        <button class="btn btn-primary btn-xs">Add</button>\n        <a href class="btn btn-default btn-xs" ng-click="testCounterExample()">Test</a>\n        <hr>\n    </div>\n</form>\n\n<ul class="list-group">\n    <li class="list-group-item" ng-repeat="ce in tmpCounterExamples" ng-click="selectCounterExampleAt($index)">\n        <span class="btn btn-icon pull-right" ng-click="removeCounterExampleAt($index)">\n            <i class="fa fa-trash"></i>\n        </span>\n        {{ce}}\n    </li>\n</ul>')}]),angular.module("app/views/directives/html-element-picker.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/html-element-picker.html",'<div id="web-element-picker-wrapper"></div>\n\n<div id="web-element-picker">\n\n    <nav class="navbar navbar-default" role="navigation">\n        <div class="container-fluid">\n\n            <form class="navbar-form navbar-left" ng-submit="loadUrl()">\n                <div class="form-group">\n                    <div class="input-group">\n                        <div class="input-group-addon" tooltip-placement="right" tooltip="{{project.baseUrl}}">..</div>\n                        <input type="text" class="form-control" ng-model="url" placeholder="url">\n                    </div>\n                </div>\n                <button type="submit" class="btn btn-default">Load</button>\n            </form>\n\n            <button class="btn btn-default navbar-btn" ng-click="enableSelection()"><i\n                    class="fa fa-magic"></i></button>\n\n            <button class="btn btn-default navbar-btn disabled" ng-show="selector != null" ng-bind="selector"></button>\n            <button class="btn btn-default navbar-btn disabled" ng-show="selector == null">\n                No Selected Element\n            </button>\n\n            <div class="navbar navbar-nav navbar-right">\n                <button class="btn btn-default navbar-btn pull-right" ng-click="close()"><i\n                        class="fa fa-close"></i></button>\n                <button class="btn btn-default navbar-btn pull-right" ng-click="ok()" style="margin-right: 7px">ok\n                </button>\n            </div>\n        </div>\n    </nav>\n\n    <div class="iframe-wrapper">\n        <iframe fit-parent-dimensions bind-resize="true"></iframe>\n    </div>\n\n</div>\n')}]),angular.module("app/views/directives/hypothesis.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/hypothesis.html",'<div style="position: absolute; top: 0; width: 100%; bottom: 0; overflow: hidden; background: #fff;">\n    <svg class="hypothesis"></svg>\n</div>')}]),angular.module("app/views/directives/index-browser.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/index-browser.html",'<div class="page-browser">\n    <div class=" btn-group btn-group-xs">\n        <button class="btn btn-default" ng-click="firstStep()">\n            <i class="fa fa-angle-double-left fa-fw"></i>\n        </button>\n        <button class="btn btn-default" ng-click="previousStep()">\n            <i class="fa fa-angle-left fa-fw"></i>\n        </button>\n        <button class="btn btn-default disabled">\n            <span ng-bind="index + 1"></span>/<span ng-bind="length"></span>\n        </button>\n        <button class="btn btn-default" ng-click="nextStep()">\n            <i class="fa fa-angle-right fa-fw"></i>\n        </button>\n        <button class="btn btn-default" ng-click="lastStep()">\n            <i class="fa fa-angle-double-right fa-fw"></i>\n        </button>\n    </div>\n</div>')}]),angular.module("app/views/directives/learn-results-panel.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/learn-results-panel.html",'<div class="hypothesis-panel-container">\n\n    <!-- BEGIN: Subnavigation -->\n    <div class="sub-nav absolute">\n        <div class="container-fluid">\n            <div class="pull-left" style="margin-right: 16px">\n\n                <div style="display: inline-block;" ng-show="mode === modes.HYPOTHESIS">\n                    <div class="btn-group btn-group-xs" dropdown dropdown-hover>\n                        <button type="button" class="btn btn-default dropdown-toggle" dropdown-toggle>\n                            <i class="fa fa-bars"></i>\n                        </button>\n                        <ul class="dropdown-menu pull-left" role="menu">\n                            <li>\n                                <a href learn-result-details-modal-handle result="results[pointer]">\n                                    <i class="fa fa-info fa-fw"></i> Details\n                                </a>\n                            </li>\n                            <li class="divider"></li>\n                            <li>\n                                <a href download-svg ancestor-or-element="#hypothesis-panel-{{index}}">\n                                    <i class="fa fa-save fa-fw"></i>&nbsp; Save as *.svg\n                                </a>\n                                <a href download-as-json data="results[pointer].hypothesis">\n                                    <i class="fa fa-save fa-fw"></i>&nbsp; Save as *.json\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <button class="btn btn-default btn-xs" hypothesis-layout-settings-modal-handle\n                            layout-settings="layoutSettings">\n                        <i class="fa fa-sliders fa-fw"></i> Layout\n                    </button>\n                </div>\n\n                <div style="display: inline-block;" ng-if="hasInternalDataStructure()">\n                    <button class="btn btn-default btn-xs"\n                            ng-show="mode === modes.INTERNAL"\n                            ng-click="showHypothesis()">\n                        Hypothesis\n                    </button>\n                    <button class="btn btn-default btn-xs"\n                            ng-show="mode === modes.INTERNAL && results[pointer].configuration.algorithm === learnAlgorithms.EXTENSIBLE_LSTAR"\n                            download-table-as-csv ancestor-or-element="#hypothesis-panel-{{index}}">\n                        Download CSV\n                    </button>\n                    <button class="btn btn-default btn-xs"\n                            ng-show="mode === modes.INTERNAL && results[pointer].configuration.algorithm === learnAlgorithms.DISCRIMINATION_TREE"\n                            download-svg ancestor-or-element="#hypothesis-panel-{{index}}">\n                        Download SVG\n                    </button>\n                    <button class="btn btn-default btn-xs"\n                            ng-show="mode === modes.HYPOTHESIS && (results[pointer].configuration.algorithm === learnAlgorithms.DISCRIMINATION_TREE || results[pointer].configuration.algorithm === learnAlgorithms.EXTENSIBLE_LSTAR)"\n                            ng-click="showInternalDataStructure()">\n                        Internal\n                    </button>\n                </div>\n\n            </div>\n\n            <div class="pull-right" ng-transclude></div>\n\n            <div class="pull-right">\n                <index-browser index="pointer" length="{{results.length}}"></index-browser>\n            </div>\n\n        </div>\n    </div>\n    <!-- END: Subnavigation -->\n\n    <div class="hypothesis-panel" id="hypothesis-panel-{{index}}">\n\n        <hypothesis id="hypothesis" test="results[pointer]" layout-settings="layoutSettings"\n                    ng-if="mode === modes.HYPOTHESIS && pointer === results.length - 1"\n                    is-selectable="true"></hypothesis>\n\n        <hypothesis id="hypothesis" test="results[pointer]" layout-settings="layoutSettings"\n                    ng-if="mode === modes.HYPOTHESIS && pointer !== results.length - 1"></hypothesis>\n\n        <observation-table data="results[pointer].algorithmInformation"\n                           ng-if="mode === modes.INTERNAL && results[pointer].configuration.algorithm === learnAlgorithms.EXTENSIBLE_LSTAR">\n        </observation-table>\n\n        <discrimination-tree data="results[pointer].algorithmInformation"\n                             ng-if="mode === modes.INTERNAL && results[pointer].configuration.algorithm === learnAlgorithms.DISCRIMINATION_TREE">\n        </discrimination-tree>\n\n    </div>\n\n</div>\n\n</div>')}]),angular.module("app/views/directives/learn-results-slideshow-panel.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/learn-results-slideshow-panel.html",'<learn-results-panel results="results" index="{{index}}">\n    <button class="btn btn-xs btn-danger" ng-click="close()" style="margin-left: 5px">\n        <i class="fa fa-close"></i>\n    </button>\n</learn-results-panel>')}]),angular.module("app/views/directives/learn-resume-settings-widget.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/learn-resume-settings-widget.html",'<form class="form form-condensed">\n\n    <div class="form-group">\n        <label class="control-label">EQ Oracle</label><br>\n        <select class="form-control" ng-model="selectedEqOracle" ng-change="setEqOracle()"\n                ng-options="(v|formatEqOracle) for (k,v) in eqOracles">\n            <option value="" disabled>select a method</option>\n        </select>\n    </div>\n\n    <div class="form-group">\n        <div ng-if="learnConfiguration.eqOracle.type == eqOracles.RANDOM">\n            <p>\n                <input class="form-control" ng-model="learnConfiguration.eqOracle.minLength" type="number"\n                       style="display: inline; width: auto"> min length\n            </p>\n\n            <p>\n                <input class="form-control" ng-model="learnConfiguration.eqOracle.maxLength" type="number"\n                       style="display: inline; width: auto"> max length\n            </p>\n\n            <p>\n                <input class="form-control" ng-model="learnConfiguration.eqOracle.maxNoOfTests" type="number"\n                       style="display: inline; width: auto"> no of random words\n            </p>\n        </div>\n\n        <div ng-if="learnConfiguration.eqOracle.type == eqOracles.COMPLETE">\n            <p>\n                <input class="form-control" ng-model="learnConfiguration.eqOracle.minDepth" type="number"\n                       style="display: inline; width: auto"> min depth\n            </p>\n\n            <p>\n                <input class="form-control" ng-model="learnConfiguration.eqOracle.maxDepth" type="number"\n                       style="display: inline; width: auto"> max depth\n            </p>\n        </div>\n    </div>\n\n    <div class="form-group">\n        <label class="control-label">Steps to Learn (0 := never stop)</label>\n        <input ng-model="learnConfiguration.maxAmountOfStepsToLearn" class="form-control" type="text" placeholder="0">\n    </div>\n\n</form>')}]),angular.module("app/views/directives/learner-result-chart-multiple-final.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/learner-result-chart-multiple-final.html",'<div id="learn-result-chart">\n    <linechart data="dataSets" options="options" mode="" width="" height="500"></linechart>\n    <hr>\n\n    <div class="text-center">\n        <button class="btn btn-xs"\n                ng-class="selectedMode === modes.RESETS ? \'btn-primary\':\'btn-default\'"\n                ng-click="selectedMode = modes.RESETS">\n            #Resets\n        </button>\n        <button class="btn btn-xs"\n                ng-class="selectedMode === modes.SYMBOLS ? \'btn-primary\':\'btn-default\'"\n                ng-click="selectedMode = modes.SYMBOLS">\n            #Symbols\n        </button>\n        <button class="btn btn-xs"\n                ng-class="selectedMode === modes.DURATION ? \'btn-primary\':\'btn-default\'"\n                ng-click="selectedMode = modes.DURATION">\n            Duration\n        </button>\n    </div>\n</div>')}]),angular.module("app/views/directives/load-screen.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/load-screen.html",'<div id="load-screen">\n    <p class="text-center" id="load-screen-indicator">\n        <i class="fa fa-spin fa-3x fa-circle-o-notch"></i>\n    </p>\n</div>')}]),angular.module("app/views/directives/navigation.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/navigation.html",'<nav class="navbar navbar-application navbar-fixed-top" role="navigation">\n\n    <div class="container-fluid">\n\n        <div class="navbar-header">\n            <a class="navbar-brand" ui-sref="home"><strong>ALEX</strong></a>\n        </div>\n\n        <ul class="nav navbar-nav navbar-left navbar-menu-handle">\n            <li>\n                <a href="#">\n                    <i class="fa fa-fw fa-bars"></i> Menu\n                </a>\n            </li>\n        </ul>\n\n        <div class="navbar-offscreen">\n\n            <div class="navbar-offscreen-header">\n                <a href class="pull-right navbar-menu-handle">\n                    <i class="fa fa-close" style="color: #fff"></i>\n                </a>\n            </div>\n\n            <div ng-if="!project">\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li class="dropdown" dropdown dropdown-navigation>\n                        <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                           aria-expanded="false">\n                            <span>Project</span>\n                            <span class="caret"></span>\n                        </a>\n                        <ul class="dropdown-menu" role="menu" ng-if="!project">\n                            <li><a ui-sref="project.create">Create a new project</a></li>\n                        </ul>\n                    </li>\n                </ul>\n\n            </div>\n\n            <div ng-if="project">\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li class="dropdown" dropdown dropdown-navigation>\n                        <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                           aria-expanded="false">\n                            <strong class="project-title" ng-bind="project.name"></strong>\n                            <span class="caret"></span>\n                        </a>\n                        <ul class="dropdown-menu" role="menu" ng-if="project">\n                            <li><a class="disabled" ui-sref="project">Overview</a></li>\n                            <li><a ui-sref="project.settings">Settings</a></li>\n                            <li class="divider"></li>\n                            <li><a href="#" ng-click="closeProject()">Close</a></li>\n                        </ul>\n                    </li>\n                </ul>\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li class="dropdown" dropdown dropdown-navigation>\n                        <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                           aria-expanded="false">Symbols <span class="caret"></span></a>\n                        <ul class="dropdown-menu" role="menu">\n                            <li><a ui-sref="symbols">Manage Symbols</a></li>\n                            <li><a ui-sref="symbols.trash">Trash</a></li>\n                            <li class="divider"></li>\n                            <li><a ui-sref="symbols.import">Import</a></li>\n                            <li><a ui-sref="symbols.export">Export</a></li>\n                        </ul>\n                    </li>\n                </ul>\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li class="dropdown" dropdown dropdown-navigation>\n                        <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                           aria-expanded="false">Learn <span class="caret"></span></a>\n                        <ul class="dropdown-menu" role="menu">\n                            <li><a ui-sref="learn.setup">Setup a Learn Process</a></li>\n                            <li class="divider"></li>\n                            <li><a ui-sref="counters">Manage Counters</a></li>\n                        </ul>\n                    </li>\n                </ul>\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li class="dropdown" dropdown dropdown-navigation>\n                        <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                           aria-expanded="false">Results <span class="caret"></span></a>\n                        <ul class="dropdown-menu" role="menu">\n                            <li><a ui-sref="learn.results">View & Compare</a></li>\n                            <li class="divider"></li>\n                            <li><a ui-sref="learn.results.statistics">Statistics</a></li>\n                        </ul>\n                    </li>\n                </ul>\n\n            </div>\n\n            <ul class="nav navbar-nav navbar-right">\n                <li class="dropdown" dropdown dropdown-navigation>\n                    <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                       aria-expanded="false">App <span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a ui-sref="about">About</a></li>\n                        <li><a ui-sref="help">Help</a></li>\n                    </ul>\n                </li>\n            </ul>\n\n        </div>\n\n    </div>\n\n</nav>\n')}]),angular.module("app/views/directives/observation-table.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/observation-table.html",'<table class="table table-condensed observation-table">\n    <thead>\n        <tr>\n            <th ng-repeat="th in table.header" ng-bind="th"></th>\n        </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat="tr in table.body.s1 track by $index">\n        <td ng-repeat="td in tr track by $index" ng-bind="td"></td>\n    </tr>\n    <tr ng-repeat="tr in table.body.s2 track by $index" ng-class="$index === 0 ? \'line\': \'\'">\n        <td ng-repeat="td in tr track by $index" ng-bind="td"></td>\n    </tr>\n    </tbody>\n</table>')}]),angular.module("app/views/directives/view-heading.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/view-heading.html",'<div class="view-heading">\n    <div class="container">\n        <div class="view-heading-title-pre" ng-transclude></div>\n        <h2 class="view-heading-title" ng-bind="title"></h2>\n\n        <p class="view-heading-sub-title" ng-bind="subTitle"></p>\n    </div>\n</div>')}]),angular.module("app/views/directives/widget.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/widget.html",'<div class="panel panel-default">\n    <div class="panel-heading">\n        <div class="pull-right">\n           <span class="panel-collapse-handle" ng-click="toggleCollapse()">\n               <i class="fa" ng-class="collapsed ? \'fa-plus-square\' : \'fa-minus-square\'"></i>\n            </span>\n        </div>\n        <strong class="text-muted" ng-bind="title"></strong>\n    </div>\n    <div class="panel-body" ng-show="!collapsed" ng-transclude></div>\n</div>')}]),angular.module("app/views/includes/action-forms.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/includes/action-forms.html",'<!-- BEGIN: SEARCH_FOR_TEXT -->\n<div ng-if="action.type === actionTypes.web.SEARCH_FOR_TEXT">\n\n    <h4><strong>Search for Text</strong></h4>\n\n    <p class="text-muted">\n        Search on a page for a piece of text or a regular expression\n    </p>\n    <hr>\n\n    <div class="form-group">\n        <label class="control-label">Value</label>\n        <input class="form-control" type="text" placeholder="value" ng-model="action.value">\n    </div>\n    <div class="checkbox">\n        <label>\n            <input type="checkbox" ng-model="action.regexp"> Use Regular Expression\n        </label>\n    </div>\n    <a class="btn btn-default btn-sm" html-element-picker text="action.value">\n        <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n    </a>\n\n</div>\n<!-- END: SEARCH_FOR_TEXT -->\n\n\n<!-- BEGIN: SEARCH_FOR_NODE -->\n<div ng-if="action.type === actionTypes.web.SEARCH_FOR_NODE">\n\n    <h4><strong>Search for Node</strong></h4>\n\n    <p class="text-muted">\n        Search an HTML element in the DOM tree of a page\n    </p>\n    <hr>\n\n    <div class="form-group">\n        <label class="control-label">CSS selector</label>\n        <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.value">\n    </div>\n\n    <a class="btn btn-default btn-sm" html-element-picker model="action.value">\n        <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n    </a>\n\n</div>\n<!-- END: SEARCH_FOR_NODE -->\n\n\n<!-- BEGIN: CLEAR -->\n<div ng-if="action.type === actionTypes.web.CLEAR">\n\n    <h4><strong>Clear Node</strong></h4>\n\n    <p class="text-muted">\n        Clear an element (eg. input or contenteditable element)\n    </p>\n    <hr>\n\n    <div class="form-group">\n        <label class="control-label">CSS selector</label>\n        <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n    </div>\n\n    <a class="btn btn-default btn-sm" html-element-picker model="action.node">\n        <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n    </a>\n\n</div>\n<!-- END: CLEAR -->\n\n\n<!-- BEGIN: CLICK -->\n<div ng-if="action.type === actionTypes.web.CLICK">\n\n    <h4><strong>Click</strong></h4>\n\n    <p class="text-muted">\n        Click on an element\n    </p>\n    <hr>\n\n    <div class="form-group">\n        <label class="control-label">CSS selector</label>\n        <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n    </div>\n    <a class="btn btn-default btn-sm" html-element-picker model="action.node">\n        <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n    </a>\n\n</div>\n<!-- END: CLICK -->\n\n\n<!-- BEGIN: CLICK_LINK_BY_TEXT -->\n<div ng-if="action.type === actionTypes.web.CLICK_LINK_BY_TEXT">\n\n    <h4><strong>Click Link By Its Text</strong></h4>\n\n    <p class="text-muted">\n        Finds a link element with a given text and clicks on it\n    </p>\n    <hr>\n\n    <div class="form-group">\n        <label class="control-label">Link Text</label>\n        <input class="form-control" type="text" placeholder="The text of the link" ng-model="action.value">\n    </div>\n    <a class="btn btn-default btn-sm" html-element-picker text="action.value">\n        <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n    </a>\n\n</div>\n<!-- END: CLICK_LINK_BY_TEXT -->\n\n\n<!-- BEGIN: FILL -->\n<div ng-if="action.type === actionTypes.web.FILL">\n\n    <h4><strong>Fill Node</strong></h4>\n\n    <p class="text-muted">\n        Fill an element with content (eg. input or contenteditable element)\n    </p>\n    <hr>\n\n    <div class="form-group">\n        <label class="control-label">CSS selector</label>\n        <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n    </div>\n    <div class="form-group">\n        <label class="control-label">The value to fill the element with</label>\n        <input class="form-control" type="text" placeholder="value" ng-model="action.value">\n    </div>\n    <a class="btn btn-default btn-sm" html-element-picker model="action.node" text="action.value">\n        <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n    </a>\n\n</div>\n<!-- END: FILL -->\n\n\n<!-- BEGIN: GO_TO -->\n<div ng-if="action.type === actionTypes.web.GO_TO">\n\n    <h4><strong>Go to URL</strong></h4>\n\n    <p class="text-muted">\n        Go to a url that is <strong>relative</strong> to your projects\' base url\n    </p>\n    <hr>\n\n    <div class="form-group">\n        <label class="control-label">Url</label>\n        <input class="form-control" type="text" placeholder="url" ng-model="action.url">\n    </div>\n\n</div>\n<!-- END: GO_TO -->\n\n\n<!-- BEGIN: SUBMIT -->\n<div ng-if="action.type === actionTypes.web.SUBMIT">\n\n    <h4><strong>Submit Form</strong></h4>\n\n    <p class="text-muted">\n        Submit a form\n    </p>\n    <hr>\n\n    <div class="form-group">\n        <label class="control-label">CSS selector</label>\n        <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n    </div>\n    <a class="btn btn-default btn-sm" html-element-picker model="action.node">\n        <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n    </a>\n\n</div>\n<!-- END: SUBMIT -->\n\n\n<!-- BEGIN: SELECT -->\n<div ng-if="action.type === actionTypes.web.SELECT">\n\n    <h4><strong>Select value</strong></h4>\n\n    <p class="text-muted">\n        Select a value from a select input\n    </p>\n    <hr>\n\n    <div class="form-group">\n        <label class="control-label">CSS selector</label>\n        <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n    </div>\n    <a class="btn btn-default btn-sm" html-element-picker model="action.node">\n        <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n    </a>\n\n    <div class="form-group">\n        <label class="control-label">Value</label>\n        <input class="form-control" type="text" placeholder="Selected value" ng-model="action.value">\n    </div>\n\n</div>\n<!-- END: SELECT -->\n\n\n<!-- BEGIN: CALL_URL -->\n<div ng-if="action.type === actionTypes.rest.CALL_URL">\n\n    <h4><strong>Call Url</strong></h4>\n\n    <p class="text-muted">Make a HTTP request to an URL (relative to your projects base url)</p>\n    <hr>\n\n    <div class="form-group">\n        <input class="form-control" type="text" placeholder="url" ng-model="action.url">\n    </div>\n    <div class="form-group">\n        <select class="form-control" ng-options="m for m in [\'DELETE\', \'GET\', \'POST\', \'PUT\']"\n                ng-model="action.method">\n            <option value="" disabled>Select a Method</option>\n        </select>\n    </div>\n    <div class="form-group">\n        <label>Data</label>\n\n        <div ng-model="action.data"\n             style="border-radius: 4px; width: 100%; height: 150px; border: 1px solid #ccc"\n             ui-ace="{useWrapMode : true, showGutter: true, theme:\'eclipse\', mode: \'json\'}"></div>\n    </div>\n\n</div>\n<!-- END: CALL_URL -->\n\n\n<!-- BEGIN: CHECK_ATTRIBUTE_EXISTS -->\n<div ng-if="action.type === actionTypes.rest.CHECK_ATTRIBUTE_EXISTS">\n\n    <h4><strong>Check Attribute Exists</strong></h4>\n\n    <p class="text-muted">Check if a JSON attribute exists in the response body</p>\n    <hr>\n\n    <div class="form-group">\n        <input class="form-control" type="text" placeholder="json attribute, e.g. myobj.attr[1].obj"\n               ng-model="action.attribute">\n    </div>\n\n</div>\n<!-- END: CHECK_ATTRIBUTE_EXISTS -->\n\n\n<!-- BEGIN: CHECK_ATTRIBUTE_TYPE -->\n<div ng-if="action.type === actionTypes.rest.CHECK_ATTRIBUTE_TYPE">\n\n    <h4><strong>Check Attribute Type</strong></h4>\n\n    <p class="text-muted">Check if a JSON attribute in the response body has a specific type</p>\n    <hr>\n\n    <div class="form-group">\n        <input class="form-control" type="text" placeholder="json attribute, e.g. myobj.attr[1].obj"\n               ng-model="action.attribute">\n    </div>\n    <div class="form-group">\n        <select class="form-control" ng-model="action.jsonType"\n                ng-options="t as t for t in [\'ARRAY\', \'BOOLEAN\', \'INTEGER\', \'OBJECT\', \'NULL\', \'STRING\']">\n            <option value="" disabled>Choose a JavaScript type</option>\n        </select>\n    </div>\n\n</div>\n<!-- END: CHECK_ATTRIBUTE_TYPE -->\n\n\n<!-- BEGIN: CHECK_ATTRIBUTE_VALUE -->\n<div ng-if="action.type === actionTypes.rest.CHECK_ATTRIBUTE_VALUE">\n\n    <h4><strong>Check Attribute Value</strong></h4>\n\n    <p class="text-muted">Check a JSON attribute of the response body to be a specific value</p>\n    <hr>\n\n    <div class="form-group">\n        <input class="form-control" type="text" placeholder="json attribute, e.g. myobj.attr[1].obj"\n               ng-model="action.attribute">\n    </div>\n    <div class="form-group">\n        <input class="form-control" type="text" placeholder="the attribute value"\n               ng-model="action.value">\n    </div>\n    <div class="checkbox">\n        <label>\n            <input type="checkbox" ng-model="action.regexp"> is regular expression\n        </label>\n    </div>\n\n</div>\n<!-- END: CHECK_ATTRIBUTE_VALUE -->\n\n\n<!-- BEGIN: CHECK_HEADER_FIELD -->\n<div ng-if="action.type === actionTypes.rest.CHECK_HEADER_FIELD">\n\n    <h4><strong>Check Header Field</strong></h4>\n\n    <p class="text-muted">Check a HTTP response header field to have a specific value</p>\n    <hr>\n\n    <div class="form-group">\n        <input class="form-control" type="text" placeholder="http header field, e.g. Content-Type"\n               ng-model="action.key">\n    </div>\n    <div class="form-group">\n        <input class="form-control" type="text"\n               placeholder="http header field value, e.g. application/json" ng-model="action.value">\n    </div>\n    <div class="checkbox">\n        <label>\n            <input type="checkbox" ng-model="action.regexp">is regular expression\n        </label>\n    </div>\n\n</div>\n<!-- END: CHECK_HEADER_FIELD -->\n\n\n<!-- BEGIN: CHECK_HTTP_BODY_TEXT -->\n<div ng-if="action.type === actionTypes.rest.CHECK_HTTP_BODY_TEXT">\n\n    <h4><strong>Check HTTP Body Text</strong></h4>\n\n    <p class="text-muted">Search for a string or a regular express in the response body of a request</p>\n    <hr>\n\n    <div class="form-group">\n        <input class="form-control" type="text" placeholder="value to search for"\n               ng-model="action.value">\n    </div>\n    <div class="checkbox">\n        <label>\n            <input type="checkbox" ng-model="action.regexp">\n            is regular expression\n        </label>\n    </div>\n\n</div>\n<!-- END: CHECK_HTTP_BODY_TEXT -->\n\n\n<!-- BEGIN: CHECK_STATUS -->\n<div ng-if="action.type === actionTypes.rest.CHECK_STATUS">\n\n    <h4><strong>Check Status</strong></h4>\n\n    <p class="text-muted">Check the HTTP response to have a specific status</p>\n    <hr>\n\n    <label>HTTP Status</label>\n\n    <div class="form-group">\n        <input class="form-control" type="number" placeholder="e.g. 200, 404 ..."\n               ng-model="action.status">\n    </div>\n\n</div>\n<!-- END: CHECK_STATUS -->\n\n\n<!-- BEGIN: WAIT -->\n<div ng-if="action.type === actionTypes.other.WAIT">\n    <h4><strong>Wait</strong></h4>\n\n    <p class="text-muted">\n        Wait for a specified amount of time in ms.\n    </p>\n    <hr>\n\n    <label>Duration</label>\n\n    <div class="form-group">\n        <input type="number" class="form-control" min="0" ng-model="action.duration" placeholder="0">\n    </div>\n</div>\n<!-- END: WAIT -->\n\n\n<!-- BEGIN: EXECUTE_SYMBOL -->\n<div ng-if="action.type === actionTypes.other.EXECUTE_SYMBOL">\n    <h4><strong>Execute Symbol</strong></h4>\n\n    <p class="text-muted">\n        Execute the actions of another symbol\n    </p>\n    <hr>\n    <div class="row">\n        <div class="col-xs-8">\n            <label>Symbol</label>\n\n            <div class="form-group">\n                <input class="form-control" list="symbols" type="text"\n                       ng-model="action.getSymbol().name" placeholder="The name of the symbol"\n                       ng-change="action.setSymbol(_.find(symbols, {name: action.getSymbol().name}))">\n                <datalist id="symbols">\n                    <option ng-repeat="symbol in symbols" value="{{symbol.name}}"></option>\n                </datalist>\n            </div>\n        </div>\n        <div class="col-xs-4" ng-show="action.getSymbol().revision">\n            <label>Revision</label>\n            <input class="form-control" list="revisions" type="number" min="1"\n                   max="{{action.getSymbol().revision}}" ng-model="action.symbolToExecute.revision">\n        </div>\n    </div>\n</div>\n<!-- END: EXECUTE_SYMBOL -->\n\n\n<!-- BEGIN: INCREMENT_COUNTER -->\n<div ng-if="action.type === actionTypes.other.INCREMENT_COUNTER">\n    <h4><strong>Increment Counter</strong></h4>\n\n    <p class="text-muted">\n        Increment a counter variable\n    </p>\n    <hr>\n    <label>Name</label>\n\n    <div class="form-group">\n        <input type="text" class="form-control" ng-model="action.name"\n               placeholder="The name of the counter">\n    </div>\n</div>\n<!-- END: INCREMENT_COUNTER -->\n\n\n<!-- BEGIN: SET_COUNTER -->\n<div ng-if="action.type === actionTypes.other.SET_COUNTER">\n    <h4><strong>Set Counter</strong></h4>\n\n    <p class="text-muted">\n        Set the value of a counter variable\n    </p>\n    <hr>\n    <label>Name</label>\n\n    <div class="form-group">\n        <input type="text" class="form-control" ng-model="action.name"\n               placeholder="The name of the counter">\n    </div>\n    <label>Value</label>\n\n    <div class="form-group">\n        <input type="number" class="form-control" ng-model="action.value" placeholder="0">\n    </div>\n</div>\n<!-- END: SET_COUNTER -->\n\n\n<!-- BEGIN: SET_VARIABLE -->\n<div ng-if="action.type === actionTypes.other.SET_VARIABLE">\n    <h4><strong>Set Variable</strong></h4>\n\n    <p class="text-muted">\n        Set the value of a variable\n    </p>\n    <hr>\n    <label>Name</label>\n\n    <div class="form-group">\n        <input type="text" class="form-control" ng-model="action.name"\n               placeholder="The name of the variable">\n    </div>\n    <label>Value</label>\n\n    <div class="form-group">\n        <input class="form-control" ng-model="action.value" placeholder="The value of the variable">\n    </div>\n</div>\n<!-- END: SET_VARIABLE -->\n\n\n<!-- BEGIN: SET_VARIABLE_BY_JSON_ATTRIBUTE -->\n<div ng-if="action.type === actionTypes.other.SET_VARIABLE_BY_JSON_ATTRIBUTE">\n    <h4><strong>Set Variable By JSON Attribute</strong></h4>\n\n    <p class="text-muted">\n        Set the value of a variable to the content of a JSON\n        attribute\n    </p>\n    <hr>\n    <label>Name</label>\n\n    <div class="form-group">\n        <input type="text" class="form-control" ng-model="action.name"\n               placeholder="The name of the variable">\n    </div>\n    <label>Attribute</label>\n\n    <div class="form-group">\n        <input class="form-control" ng-model="action.value" placeholder="The JSON attribute">\n    </div>\n</div>\n<!-- END: SET_VARIABLE_BY_JSON_ATTRIBUTE -->\n\n\n<!-- BEGIN: SET_VARIABLE_BY_NODE -->\n<div ng-if="action.type === actionTypes.other.SET_VARIABLE_BY_NODE">\n    <h4><strong>Set Variable By Node Value</strong></h4>\n\n    <p class="text-muted">\n        Set the value of a variable to the content of a HTML element\n    </p>\n    <hr>\n    <label>Name</label>\n\n    <div class="form-group">\n        <input type="text" class="form-control" ng-model="action.name"\n               placeholder="The name of the variable">\n    </div>\n    <label>XPath</label>\n\n    <div class="form-group">\n        <input class="form-control" ng-model="action.value" placeholder="The CSS3 XPath to the element">\n    </div>\n\n    <a class="btn btn-default btn-sm" html-element-picker model="action.value">\n        <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n    </a>\n</div>\n<!-- END: SET_VARIABLE_BY_JSON_ATTRIBUTE -->\n\n\n<div ng-if="action !== null">\n    <hr>\n    <p>\n        <a href ng-click="advancedOptions = !advancedOptions"><i class="fa fa-gear fa-fw"></i> Advanced\n            Options</a>\n    </p>\n\n    <div collapse="!advancedOptions">\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.negated"> Negate\n            </label>\n        </div>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.ignoreFailure"> Ignore Failure\n            </label>\n        </div>\n    </div>\n</div>')
}]),angular.module("app/views/modals/action-create-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/action-create-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Create Action</h3>\n    <span class="text-muted">Create a new action for a symbol</span>\n</div>\n\n<form ng-submit="createAction()" id="action-create-form">\n\n    <div class="modal-body">\n        <div class="row">\n            <div class="col-xs-5">\n\n                <accordion close-others="true" class="action-types-accordion">\n                    <accordion-group is-open="true">\n                        <accordion-heading>\n                            <div><strong>Web</strong></div>\n                        </accordion-heading>\n                        <a href ng-repeat="(k,v) in actionTypes.web" ng-click="selectNewActionType(v)"\n                           ng-bind="::(k|formatEnumKey)"></a>\n                    </accordion-group>\n                    <accordion-group>\n                        <accordion-heading>\n                            <div><strong>Rest</strong></div>\n                        </accordion-heading>\n                        <a href ng-repeat="(k,v) in actionTypes.rest" ng-click="selectNewActionType(v)"\n                           ng-bind="::(k|formatEnumKey)"></a>\n                    </accordion-group>\n                    <accordion-group>\n                        <accordion-heading>\n                            <div><strong>Other</strong></div>\n                        </accordion-heading>\n                        <a href ng-repeat="(k,v) in actionTypes.other" ng-click="selectNewActionType(v)"\n                           ng-bind="::(k|formatEnumKey)"></a>\n                    </accordion-group>\n                </accordion>\n\n            </div>\n            <div class="col-xs-7">\n\n                <div class="alert alert-info alert-condensed" ng-show="action === null">\n                    Please select an action type\n                </div>\n\n                <ng-include src="paths.views.INCLUDES + \'/action-forms.html\'"></ng-include>\n\n            </div>\n        </div>\n    </div>\n\n    <div class="modal-footer">\n        <a href class="btn btn-info btn-sm" ng-click="createActionAndContinue()">Create and Continue</a>\n        <button class="btn btn-primary btn-sm" type="submit">Create</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/action-edit-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/action-edit-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Update Action</h3>\n    <span class="text-muted">Update an existing action for a symbol</span>\n</div>\n\n<form ng-submit="updateAction()" id="action-create-form">\n\n    <div class="modal-body">\n\n        <ng-include src="paths.views.INCLUDES + \'/action-forms.html\'"></ng-include>\n\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-primary btn-sm" type="submit">Update</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/confirm-dialog.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/confirm-dialog.html",'<form ng-submit="ok()">\n\n	<div class="modal-body">\n	    <h4 ng-bind="text"></h4>\n	</div>\n\n    <div class="modal-footer">\n        <button type="submit" class="btn btn-primary btn-sm">Yes</button>\n        <a class="btn btn-default btn-sm" ng-click="close()">No</a>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/hypothesis-layout-settings-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/hypothesis-layout-settings-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="close()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Hypothesis Layout Settings</h3>\n    <span class="text-muted">Edit the settings for the presentation of the hypothesis</span>\n\n</div>\n\n<div class="modal-body">\n	\n	<div class="form-group">\n		<label>Node Separation</label>\n		<input type="number" class="form-control" placeholder="nodesep" ng-model="layoutSettings.nodesep">\n		<p class="help-block">Number of pixels that separate nodes horizontally in the layout.</p>\n	</div>\n	\n	<div class="form-group">\n		<label>Edge Separation</label>\n		<input type="number" class="form-control" placeholder="edgesep" ng-model="layoutSettings.edgesep">\n		<p class="help-block">Number of pixels that separate edges horizontally in the layout.</p>\n	</div>\n	\n	<div class="form-group">\n		<label>Rank Separation</label>\n		<input type="number" class="form-control" placeholder="ranksep" ng-model="layoutSettings.ranksep">\n		<p class="help-block">Number of pixels between each rank in the layout.</p>\n	</div>\n	\n	<div class="checkbox">\n    	<label>\n      		<input type="checkbox" ng-model="layoutSettings.multigraph"> Multigraph\n    	</label>\n  	</div>\n		\n</div>\n\n<div class="modal-footer">\n	<button class="btn btn-default btn-sm" ng-click="defaultLayoutSettings()">Default</button>\n    <button class="btn btn-primary btn-sm" ng-click="update()">Update</button>\n</div>')}]),angular.module("app/views/modals/learn-result-details-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/learn-result-details-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="ok()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Test Details</h3>\n    <span class="text-muted">View some details about this test</span>\n\n</div>\n\n<div class="modal-body">\n\n    <tabset justified="true">\n        <tab ng-repeat="tab in tabs" heading="{{tab.heading}}">\n\n            <table class="table table-condensed">\n\n                <tr class="active">\n                    <td colspan="2"><strong>About This Test</strong></td>\n                </tr>\n                <tr>\n                    <td>nth Test</td>\n                    <td ng-bind="tab.result.testNo"></td>\n                </tr>\n                <tr ng-hide="tab.result.stepNo === 0">\n                    <td>nth Step</td>\n                    <td ng-bind="tab.result.stepNo"></td>\n                </tr>\n                <tr>\n                    <td>Started</td>\n                    <td ng-bind="(tab.result.statistics.startTime | date : \'EEE, dd.MM.yyyy, HH:mm\')"></td>\n                </tr>\n\n                <tr class="active">\n                    <td colspan="2"><strong>Configuration</strong></td>\n                </tr>\n                <tr>\n                    <td>Algorithm</td>\n                    <td ng-bind="(tab.result.configuration.algorithm | formatAlgorithm)"></td>\n                </tr>\n                <tr ng-hide="tab.result.stepNo === 0">\n                    <td>EQ Oracle</td>\n                    <td ng-bind="(tab.result.configuration.eqOracle.type | formatEqOracle)"></td>\n                </tr>\n                <tr ng-hide="tab.result.stepNo === 0">\n                    <td>Steps to Learn</td>\n                    <td ng-bind="tab.result.configuration.maxAmountOfStepsToLearn"></td>\n                </tr>\n\n                <tr class="active">\n                    <td colspan="2"><strong>Numbers</strong></td>\n                </tr>\n                <tr>\n                    <td>Duration</td>\n                    <td><span ng-bind="tab.result.statistics.duration"></span> ms</td>\n                </tr>\n                <tr>\n                    <td>#Membership Queries</td>\n                    <td ng-bind="tab.result.statistics.mqsUsed"></td>\n                </tr>\n                <tr>\n                    <td>#Equivalence Queries</td>\n                    <td ng-bind="tab.result.statistics.eqsUsed"></td>\n                </tr>\n                <tr>\n                    <td>#Symbol Calls</td>\n                    <td ng-bind="tab.result.statistics.symbolsUsed"></td>\n                </tr>\n                <tr>\n                    <td>|Sigma|</td>\n                    <td ng-bind="tab.result.sigma.length"></td>\n                </tr>\n\n            </table>\n\n        </tab>\n    </tabset>\n\n</div>\n\n<div class="modal-footer">\n    <button class="btn btn-sm btn-primary" ng-click="ok()">Ok</button>\n</div>')}]),angular.module("app/views/modals/learn-setup-settings-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/learn-setup-settings-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Test Settings</h3>\n	<span class="text-muted">Manually set some parameters for the\n		Test</span>\n</div>\n\n<form name="learn_config_form" ng-submit="ok()">\n\n	<div class="modal-body">\n\n		<div class="form-group">\n			<label class="control-label">Algorithm</label><br> <span\n				class="text-muted">Select an algorithm that will be used for\n				the learn process (default is L*)</span> <select class="form-control"\n				ng-model="learnConfiguration.algorithm"\n                ng-options="(k|formatAlgorithm) for (k,v) in learnAlgorithms">\n				<option value="" disabled>select an algorithm</option>\n			</select>\n		</div>\n\n		<div class="form-group">\n            <label class="control-label">EQ Oracle</label><br>\n            <span class="text-muted">Select how counter examples should be found</span>\n            <select class="form-control"\n                    ng-model="selectedEqOracle"\n                    ng-change="setEqOracle()"\n                    ng-options="(v|formatEqOracle) for (k,v) in eqOracles">\n                <option value="" disabled>select an EQ-Oracle</option>\n			</select>\n		</div>\n\n		<div class="form-group">\n\n			<!-- BEGIN: EQ Oracle: RANDOM -->\n			<div ng-if="learnConfiguration.eqOracle.type == eqOracles.RANDOM">\n				<p>\n					<input class="form-control" name="eq_oracle_random_min_length"\n						ng-model="learnConfiguration.eqOracle.minLength" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> min length\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_random_min_length.$dirty && learn_config_form.eq_oracle_random_min_length.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_complete_min_depth.$error.required">\n						The field must not be empty. </small>\n				</div>\n\n				<p>\n					<input class="form-control" name="eq_oracle_random_max_length"\n						ng-model="learnConfiguration.eqOracle.maxLength" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> max length\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_random_max_length.$dirty && learn_config_form.eq_oracle_random_max_length.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_random_max_length.$error.required">\n						The field must not be empty. </small>\n				</div>\n\n				<p>\n					<input class="form-control" name="eq_oracle_random_no_words"\n						ng-model="learnConfiguration.eqOracle.maxNoOfTests" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> no of random words to be generated\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_random_no_words.$dirty && learn_config_form.eq_oracle_random_no_words.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_random_no_words.$error.required">\n						The field must not be empty. </small>\n				</div>\n			</div>\n			<!-- END: EQ Oracle: RANDOM -->\n\n			<!-- BEGIN: EQ Oracle: COMPLETE -->\n			<div ng-if="learnConfiguration.eqOracle.type == eqOracles.COMPLETE">\n				<p>\n					<input class="form-control" name="eq_oracle_complete_min_depth"\n						ng-model="learnConfiguration.eqOracle.minDepth" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> min depth\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_complete_min_depth.$dirty && learn_config_form.eq_oracle_complete_min_depth.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_complete_min_depth.$error.required">\n						The field must not be empty. </small>\n				</div>\n\n				<p>\n					<input class="form-control" name="eq_oracle_complete_max_depth"\n						ng-model="learnConfiguration.eqOracle.maxDepth" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> max depth\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_complete_max_depth.$dirty && learn_config_form.eq_oracle_complete_max_depth.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_complete_max_depth.$error.required">\n						The field must not be empty. </small>\n				</div>\n\n			</div>\n			<!-- END: EQ Oracle: COMPLETE -->\n\n		</div>\n\n		<div class="form-group">\n			<label class="control-label">Max Amount of Steps to Learn (0\n				:= never stop)</label> <input name="max_steps" required min="0"\n				ng-model="learnConfiguration.maxAmountOfStepsToLearn"\n				class="form-control" type="number" placeholder="0">\n		</div>\n		<div class="alert alert-danger alert-condensed"\n			ng-show="learn_config_form.max_steps.$dirty && learn_config_form.max_steps.$invalid">\n			<small ng-show="learn_config_form.max_steps.$error.required">\n				The field must not be empty. </small>\n		</div>\n\n	</div>\n\n	<div class="modal-footer">\n        <button class="btn btn-sm btn-primary" type="submit">Ok</button>\n	</div>\n\n</form>')}]),angular.module("app/views/modals/prompt-dialog.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/prompt-dialog.html",'<div class="modal-header">\n    <h4 ng-bind="text"></h4>\n</div>\n\n<form name="prompt_form" ng-submit="ok()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <input name="user_input" type="text" class="form-control" ng-model="userInput" ng-pattern="inputPattern" required>\n        </div>\n\n        <div class="alert alert-danger alert-condensed" ng-show="prompt_form.submitted">\n            <small ng-show="prompt_form.user_input.$error" ng-bind="errorMsg"></small>\n        </div>\n\n    </div>\n\n    <div class="modal-footer">\n        <button type="submit" class="btn btn-primary btn-sm">Ok</button>\n        <a class="btn btn-default btn-sm" ng-click="close()">Cancel</a>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/symbol-create-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-create-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Create a Symbol</h3>\n    <span class="text-muted">Create a new symbol</span>\n\n</div>\n\n<form id="symbol-create-form" name="create_symbol_form" ng-submit="createSymbol()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <label>Symbol Name</label>\n            <input class="form-control" name="name" type="text" placeholder="name" required ng-model="symbol.name">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="create_symbol_form.name.$dirty && create_symbol_form.name.$invalid">\n            <small ng-show="create_symbol_form.name.$error.required"> The field must not be empty.</small>\n        </div>\n\n        <div class="form-group">\n            <label>Symbol Abbreviation</label>\n            <input class="form-control" name="abbreviation" type="text" placeholder="abbreviation" required\n                   ng-model="symbol.abbreviation">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="create_symbol_form.abbreviation.$dirty && create_symbol_form.abbreviation.$invalid">\n            <small ng-show="create_symbol_form.abbreviation.$error.required"> The field must not be empty.</small>\n        </div>\n\n        <div class="form-group">\n            <label>Group</label>\n            <input class="form-control" type="text" list="groupNames" ng-model="selectedGroup" placeholder="Group name">\n            <datalist id="groupNames">\n                <option ng-repeat="group in groups" value="{{group.name}}"></option>\n            </datalist>\n        </div>\n\n        <div class="alert alert-danger alert-condensed" ng-show="errorMsg" ng-bind="errorMsg"></div>\n\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-primary btn-sm" type="submit">Create</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/symbol-edit-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-edit-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Update a Symbol</h3>\n    <span class="text-muted">Update an existing symbol</span>\n\n</div>\n\n<form id="symbol-edit-form" name="symbol_edit_form" ng-submit="updateSymbol()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <label>Symbol Name</label>\n            <input class="form-control" name="name" type="text" placeholder="name" required ng-model="symbol.name">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="symbol_edit_form.name.$dirty && symbol_edit_form.name.$invalid">\n            <small ng-show="symbol_edit_form.name.$error.required"> The field must not be empty.</small>\n        </div>\n\n        <div class="form-group">\n            <label>Symbol Abbreviation</label>\n            <input class="form-control" name="abbreviation" type="text" placeholder="abbreviation" required\n                   ng-model="symbol.abbreviation">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="symbol_edit_form.abbreviation.$dirty && symbol_edit_form.abbreviation.$invalid">\n            <small ng-show="symbol_edit_form.abbreviation.$error.required"> The field must not be empty.</small>\n        </div>\n\n        <div class="alert alert-danger alert-condensed" ng-show="errorMsg" ng-bind="errorMsg"></div>\n\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-primary btn-sm" type="submit">Update</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/symbol-group-create-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-group-create-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Create a Symbol Group</h3>\n    <span class="text-muted">Create a new symbol group</span>\n\n</div>\n\n<form id="symbol-group-create-form" name="create_symbol_group_form" ng-submit="createGroup()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <label>Symbol Group Name</label>\n            <input class="form-control" name="name" type="text" placeholder="name" required ng-model="group.name">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="create_symbol_group_form.name.$dirty && create_symbol_group_form.name.$invalid">\n            <small ng-show="create_symbol_group_form.name.$error.required"> The field must not be empty.</small>\n        </div>\n\n        <div class="alert alert-danger alert-condensed" ng-show="errorMsg" ng-bind="errorMsg"></div>\n\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-sm btn-primary" type="submit">Create Symbol Group</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/symbol-group-edit-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-group-edit-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Update a Symbol Group</h3>\n    <span class="text-muted">Update or delete a symbol group</span>\n\n</div>\n\n<form id="symbol-group-edit-form" name="create_symbol_edit_form" ng-submit="updateGroup()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <label>Symbol Group Name</label>\n            <input class="form-control" name="name" type="text" placeholder="name" required ng-model="group.name">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="create_symbol_group_form.name.$dirty && create_symbol_group_form.name.$invalid">\n            <small ng-show="create_symbol_group_form.name.$error.required"> The field must not be empty.</small>\n        </div>\n\n        <div class="alert alert-danger alert-condensed" ng-show="errorMsg" ng-bind="errorMsg"></div>\n\n    </div>\n\n    <div class="modal-footer">\n        <a href class="btn btn-sm btn-default" ng-if="group.id !== 0" ng-click="deleteGroup()">Delete</a>\n        <button class="btn btn-sm btn-primary" type="submit">Update</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/symbol-move-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-move-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Move Symbols</h3>\n    <span class="text-muted">Move Symbols into another group</span>\n\n</div>\n\n<div class="modal-body">\n\n    <div class="alert alert-info alert-condensed">\n        <span ng-bind="symbols.length"></span> symbols selected\n    </div>\n\n    <ul class="list-group" style="margin-bottom: 0">\n        <li class="list-group-item" ng-repeat="group in groups"\n            ng-class="selectedGroup === group ? \'active\': \'\'"\n            ng-click="selectGroup(group)">\n            <span class="label label-default pull-right" ng-bind="group.symbols.length"></span>\n            <span ng-bind="group.name"></span>\n        </li>\n    </ul>\n\n</div>\n\n<div class="modal-footer">\n    <button class="btn btn-sm btn-primary" ng-click="moveSymbols()">Move</button>\n</div>\n\n')}]),angular.module("app/views/modals/variables-counters-occurrence-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/variables-counters-occurrence-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="close()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Occurrences</h3>\n    <span class="text-muted">A list of all occurrences of used variables and counters</span>\n\n</div>\n\n<div class="modal-body">\n\n    <table class="table table-condensed">\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Group</th>\n                <th>Symbol</th>\n                <th>Action No.</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr class="active">\n                <td colspan="4"><strong>Counters (#)</strong></td>\n            </tr>\n\n            <tr ng-repeat="counter in occurrences.counters">\n                <td><em ng-bind="counter.name"></em></td>\n                <td ng-bind="counter.group"></td>\n                <td ng-bind="counter.symbol"></td>\n                <td ng-bind="counter.action"></td>\n            </tr>\n\n            <tr class="active">\n                <td colspan="4"><strong>Variables ($)</strong></td>\n            </tr>\n\n            <tr ng-repeat="variable in occurrences.variables">\n                <td><em ng-bind="variable.name"></em></td>\n                <td ng-bind="variable.group"></td>\n                <td ng-bind="variable.symbol"></td>\n                <td ng-bind="variable.action"></td>\n            </tr>\n        </tbody>\n    </table>\n\n</div>\n\n<div class="modal-footer">\n    <button class="btn btn-sm btn-primary" ng-click="close()">Ok</button>\n</div>')}]),angular.module("app/views/pages/about.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/about.html",'<div view-heading\n     title="About"\n     sub-title="Information about this application">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <h3>Authors</h3>\n\n        <p>\n            <strong>Alexander Bainczyk</strong><br>\n            <a href="mailto:alexander.bainczyk@tu-dortmund.de">\n                <i class="fa fa-envelope-o fa-fw"></i>&nbsp;\n                alexander.bainczyk@tu-dortmund.de\n            </a>\n        </p>\n\n        <p>\n            <strong>Alexander Schieweck</strong><br>\n            <a href="mailto:alexander.schieweck@tu-dortmund.de">\n                <i class="fa fa-envelope-o fa-fw"></i>&nbsp;\n                alexander.schieweck@tu-dortmund.de\n            </a>\n        </p>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/counters.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/counters.html",'<div view-heading\n     title="Counters"\n     sub-title="Manage counters for learning processes">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:115,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" selection-checkbox-all items="counters">\n        </div>\n\n        <div class="pull-left">\n            <button class="btn btn-xs btn-primary" ng-click="deleteSelectedCounters()">\n                Delete\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container" selectable items="results">\n\n        <div class="alert alert-info alert-condensed" ng-show="counters.length > 0">\n            <i class="fa fa-info fa-fw"></i>\n            Deleted counters will be created as soon as they are used in a learning process, starting with value 0.\n        </div>\n\n        <div class="selectable-list"\n             ng-if="counters.length > 0">\n\n            <div ng-repeat="counter in counters"\n                 selection-model\n                 selection-model-type="checkbox"\n                 selection-model-selected-attribute="_selected"\n                 selection-model-mode="multiple"\n                 selection-model-selected-items="selectedCounters"\n                 selection-model-cleanup-strategy="deselect">\n\n                <div selectable-list-item>\n                    <button class="btn btn-xs btn-default btn-icon pull-right"\n                            ng-click="deleteCounter(counter)">\n                        <i class="fa fa-trash fa-fw"></i>\n                    </button>\n\n                    <strong ng-bind="counter.name"></strong><br>\n                    <span class="text-muted">Value: <span ng-bind="counter.value"></span></span>\n                </div>\n            </div>\n        </div>\n\n        <div class="alert alert-info" ng-if="counters.length === 0">\n            There aren\'t any counters yet\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/help.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/help.html",'<div view-heading\n     title="Help"\n     sub-title="If you need help using this application, maybe there is some information for you here">\n</div>')}]),angular.module("app/views/pages/home.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/home.html",'<div view-heading\n     title="Home"\n     sub-title="Hello! Choose a project or create one and start learning.">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <div class="list-group project-list-group">\n\n            <div class="list-group-item" ng-if="projects.length > 0" ng-repeat="project in projects"\n                 ng-click="openProject(project)">\n                <h3 class="list-group-item-heading" ng-bind="project.name"></h3>\n\n                <p class="list-group-item-text">\n                    <span ng-bind="project.baseUrl"></span> <br>\n                    <span class="text-muted"\n                          ng-if="!project.description">There is no description for this project</span>\n                    <span class="text-muted" ng-if="project.description" ng-bind="project.description"></span>\n                </p>\n            </div>\n\n            <div class="alert alert-info" ng-if="projects.length == 0">\n                You haven\'t created a project yet. You can create a new one <a href="#/project/create">here</a> and\n                start\n                testing it.\n            </div>\n\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/learn-results-compare.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-results-compare.html",'<div style="position: absolute; width: 100%; top: 42px; bottom: 0; overflow: auto;">\n    <div panel-manager="panels">\n\n        <div panel panel-index="$index" ng-repeat="result in panels track by $index">\n\n            <div ng-if="result">\n                <learn-results-slideshow-panel index="{{$index}}" results="result"></learn-results-slideshow-panel>\n            </div>\n\n            <div ng-if="!result" style="padding: 30px">\n\n                <ul class="list-group">\n                    <li class="list-group-item" ng-repeat="result in results"\n                        ng-click="fillPanel(result, $parent.$index)">\n\n                        <strong>Test No\n                            <span ng-bind="result.testNo"></span>\n                        </strong>,\n                        [<span ng-bind="(result.configuration.algorithm|formatAlgorithm)"></span>]\n\n                        <br>\n\n                        <p class="text-muted">\n                            Started: <span\n                                ng-bind="(result.statistics.startTime | date : \'EEE, dd.MM.yyyy, HH:mm\')"></span>\n                        </p>\n\n                    </li>\n                </ul>\n\n            </div>\n\n        </div>\n\n        <div ng-if="panels.length == 0" style="padding-top: 30px">\n            <div class="container">\n                <div class="alert alert-info">\n                    Add a panel by clicking on the grey area on the right and select a test.\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/learn-results-statistics.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-results-statistics.html",'<div view-heading\n     title="Statistics"\n     sub-title="Have a look at some numbers we gathered for your tests">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:124,class:\'fixed\'}">\n    <div class="container">\n\n        <div ng-show="selectedChartMode === null">\n\n            <div class="pull-left" style="margin-right: 16px">\n                <input type="checkbox" selection-checkbox-all items="results">\n            </div>\n\n            <div class="btn-group btn-group-xs pull-left" dropdown dropdown-hover>\n                <button class="btn btn-primary" ng-class="selectedResults.length > 0 ? \'\' : \'disabled\'">\n                    Create Chart\n                </button>\n                <ul class="dropdown-menu" role="menu" ng-show="selectedResults.length > 0">\n                    <li>\n                        <a href ng-click="createChartFromFinalResults()">\n                            <i class="fa fa-fw fa-bar-chart"></i> Final Results\n                        </a>\n                    </li>\n                    <li>\n                        <a href ng-click="createChartFromCompleteResults()">\n                            <i class="fa fa-fw fa-area-chart"></i> Complete Results\n                        </a>\n                    </li>\n                </ul>\n            </div>\n\n            <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                <button class="btn btn-default" ng-class="selectedResults.length > 0 ? \'\' : \'disabled\'">\n                    <i class="fa fa-fw fa-download"></i> Download as *.csv\n                </button>\n                <ul class="dropdown-menu" role="menu" ng-show="selectedResults.length > 0">\n                    <li>\n                        <a href download-learner-results-as-csv results="selectedResults">\n                            Selected Final Results\n                        </a>\n                    </li>\n                    <li ng-show="selectedResults.length === 1">\n                        <a href download-learner-results-as-csv results="selectedResults" complete>\n                            Selected Complete Result\n                        </a>\n                    </li>\n                </ul>\n            </div>\n\n        </div>\n\n        <div ng-show="selectedChartMode !== null">\n\n            <div class="pull-left">\n                <button class="btn btn-default btn-xs" ng-click="back()">\n                    <i class="fa fa-reply fa-fw"></i> Back\n                </button>\n            </div>\n\n            <div class="pull-right">\n                <button class="btn btn-default btn-xs" download-svg ancestor-or-element="#learn-result-chart">\n                    <i class="fa fa-download fa-fw"></i> Download as *.svg\n                </button>\n                <button class="btn btn-default btn-xs" ng-click="fullWidth = !fullWidth" dispatch-resize="20">\n                    <i class="fa fa-fw" ng-class="fullWidth ? \'fa-compress\' : \'fa-expand\'"></i>\n                </button>\n            </div>\n\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container" ng-style="fullWidth ? {\'width\':\'100%\'} : {}">\n\n        <div class="selectable-list" ng-show="selectedChartMode === null">\n            <div ng-repeat="result in results"\n                 selection-model\n                 selection-model-type="checkbox"\n                 selection-model-selected-attribute="_selected"\n                 selection-model-mode="multiple"\n                 selection-model-selected-items="selectedResults"\n                 selection-model-cleanup-strategy="deselect">\n\n                <div selectable-list-item>\n\n                    <strong>Test No\n                        <span ng-bind="result.testNo"></span>\n                    </strong>,\n                    [<span ng-bind="(result.configuration.algorithm|formatAlgorithm)"></span>]\n\n                    <div class="text-muted">\n                        Started: <span ng-bind="(result.statistics.startTime | date : \'EEE, dd.MM.yyyy, HH:mm\')"></span>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <div ng-if="selectedChartMode !== null && chartData.data !== null && chartData.options !== null"\n             id="learn-result-chart">\n\n            <linechart data="chartData.data" options="chartData.options" mode="" width="" height="500"></linechart>\n            <hr>\n\n            <div class="text-center">\n                <button class="btn btn-xs"\n                        ng-class="selectedChartProperty === chartProperties.MQS ? \'btn-primary\':\'btn-default\'"\n                        ng-click="selectChartProperty(chartProperties.MQS)">\n                    #MQs\n                </button>\n                <button class="btn btn-xs"\n                        ng-class="selectedChartProperty === chartProperties.EQS ? \'btn-primary\':\'btn-default\'"\n                        ng-click="selectChartProperty(chartProperties.EQS)">\n                    #EQs\n                </button>\n                <button class="btn btn-xs"\n                        ng-class="selectedChartProperty === chartProperties.SYMBOL_CALLS ? \'btn-primary\':\'btn-default\'"\n                        ng-click="selectChartProperty(chartProperties.SYMBOL_CALLS)">\n                    #Called Symbols\n                </button>\n                <button class="btn btn-xs"\n                        ng-class="selectedChartProperty === chartProperties.SIGMA ? \'btn-primary\':\'btn-default\'"\n                        ng-click="selectChartProperty(chartProperties.SIGMA)">\n                    |Sigma|\n                </button>\n                <button class="btn btn-xs"\n                        ng-class="selectedChartProperty === chartProperties.DURATION ? \'btn-primary\':\'btn-default\'"\n                        ng-click="selectChartProperty(chartProperties.DURATION)">\n                    Duration\n                </button>\n            </div>\n            <hr>\n\n            <div ng-repeat="result in selectedResults | orderBy:\'-testNo\'">\n                <strong>Test <span ng-bind="result.testNo"></span></strong>:\n                [<span ng-bind="(result.configuration.algorithm|formatAlgorithm)"></span>],\n                {{result.configuration.eqOracle}}\n            </div>\n\n        </div>\n\n        <div class="alert alert-info" ng-show="results.length === 0">\n            You have not run any tests yet.\n        </div>\n\n    </div>\n</div>')
}]),angular.module("app/views/pages/learn-results.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-results.html",'<div view-heading\n     title="Test Results"\n     sub-title="Have a look at all the tests you ran for this project">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:115,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" selection-checkbox-all items="results">\n        </div>\n\n        <div class="pull-left">\n            <button class="btn btn-xs btn-primary"\n                    ng-click="deleteResults()"\n                    ng-class="selectedResults.length === 0 ? \'disabled\' : \'\'">\n                Delete\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container" selectable items="results">\n\n        <div class="selectable-list">\n            <div ng-repeat="result in results"\n                 selection-model\n                 selection-model-type="checkbox"\n                 selection-model-selected-attribute="_selected"\n                 selection-model-mode="multiple"\n                 selection-model-selected-items="selectedResults"\n                 selection-model-cleanup-strategy="deselect">\n\n                <div selectable-list-item>\n                    <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                        <button type="button" class="btn btn-default btn-icon dropdown-toggle" dropdown-toggle>\n                            <i class="fa fa-bars"></i>\n                        </button>\n                        <ul class="dropdown-menu pull-left" role="menu">\n                            <li>\n                                <a href learn-result-details-modal-handle result="result">\n                                    <i class="fa fa-info fa-fw"></i> Details\n                                </a>\n                            </li>\n                            <li>\n                                <a ui-sref="learn.results.compare({testNos: [result.testNo]})">\n                                    <i class="fa fa-code-fork fa-fw"></i> Hypotheses\n                                </a>\n                            </li>\n                            <li>\n                                <a href="" ng-click="deleteResult(result)">\n                                    <i class="fa fa-trash fa-fw"></i> Delete\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <strong>Test No\n                        <span ng-bind="result.testNo"></span>\n                    </strong>,\n                    [<span ng-bind="(result.configuration.algorithm | formatAlgorithm)"></span>]\n\n                    <div class="text-muted">\n                        Started: <span ng-bind="(result.statistics.startTime | date : \'EEE, dd.MM.yyyy, HH:mm\')"></span>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <div class="alert alert-info" ng-if="results.length === 0">\n            You have not run any tests yet or the active one is not finished.\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/learn-setup.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-setup.html",'<div view-heading\n     title="Learn Setup"\n     sub-title="Include or exclude symbols & groups you want to use for the following test">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:115,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" selection-checkbox-all items="getAllSymbols">\n        </div>\n\n        <div class="pull-right">\n            <button class="btn btn-xs btn-default" learn-setup-settings-modal-handle\n                    learn-configuration="learnConfiguration" on-ok="updateLearnConfiguration">\n                <i class="fa fa-gear"></i>\n            </button>\n            <button class="btn btn-xs btn-primary" ng-click="startLearning()">\n                Start Learning\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container symbol-group-list">\n\n        <div class="alert alert-info alert-condensed clearfix">\n            <button class="btn btn-xs btn-info pull-right" learn-setup-settings-modal-handle\n                    learn-configuration="learnConfiguration" on-ok="updateLearnConfiguration">\n                <i class="fa fa-gear"></i>\n            </button>\n\n            <p>\n                Using algorithm <strong ng-bind="(learnConfiguration.algorithm | formatAlgorithm)"></strong>\n                with EQ-Oracle <strong ng-bind="(learnConfiguration.eqOracle.type | formatEqOracle)"></strong>\n                <span ng-if="learnConfiguration.eqOracle.type === \'complete\'">\n                    (min-depth: <span ng-bind="learnConfiguration.eqOracle.minDepth"></span>, max-depth: <span\n                        ng-bind="learnConfiguration.eqOracle.maxDepth"></span>)\n                </span>\n                <span ng-if="learnConfiguration.eqOracle.type === \'random_word\'">\n                    (\n                    min-length: <span ng-bind="learnConfiguration.eqOracle.minLength"></span>,\n                    max-length: <span ng-bind="learnConfiguration.eqOracle.maxLength"></span>,\n                    #words: <span ng-bind="learnConfiguration.eqOracle.maxNoOfTests"></span>\n                    )\n                </span>\n            </p>\n\n            <p ng-show="resetSymbol === null">\n                <em>Please select a reset symbol by clicking on the blue circle</em>\n            </p>\n\n            <p ng-show="resetSymbol !== null">\n                Reset symbol is <strong ng-bind="resetSymbol.name"></strong>\n            </p>\n\n        </div>\n        <hr>\n\n        <div ng-repeat="group in groups" class="symbol-group"\n             ng-class="group._isCollapsed ? \'collapsed\' :\'\'">\n\n            <div class="selectable-list symbol-group-header">\n                <div class="selectable-list-heading">\n                    <div class="selectable-list-control">\n                        <input type="checkbox" selection-checkbox-all items="group.symbols">\n                    </div>\n                    <div class="selectable-list-content">\n\n                        <span class="pull-right" ng-click="group._isCollapsed = !group._isCollapsed">\n                        <i class="fa fa-fw"\n                           ng-class="group._isCollapsed ? \'fa-chevron-down\' : \'fa-chevron-right\'"></i>\n                        </span>\n\n                        <h3 class="symbol-group-title" ng-bind="group.name"\n                            ng-click="group._isCollapsed = !group._isCollapsed"></h3>\n\n                        <p class="text-muted">\n                            <span ng-bind="group.symbols.length"></span> Symbols\n                        </p>\n\n                    </div>\n                </div>\n            </div>\n\n            <div class="symbol-group-body" collapse="group._isCollapsed">\n                <div class="selectable-list">\n                    <div ng-repeat="symbol in group.symbols | orderBy:\'-name\':true"\n                         selection-model\n                         selection-model-type="checkbox"\n                         selection-model-selected-attribute="_selected"\n                         selection-model-mode="multiple"\n                         selection-model-selected-items="selectedSymbols"\n                         selection-model-cleanup-strategy="deselect"\n                         ng-if="!symbol.hidden">\n\n                        <div selectable-list-item>\n                            <a class="pull-right" ng-click="setResetSymbol(symbol)" selection-model-ignore>\n                                <i class="fa" ng-class="resetSymbol == symbol ? \'fa-circle\' : \'fa-circle-thin\'"></i>\n                            </a>\n\n                            <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]<br>\n\n                            <p class="text-muted">\n                                <a href ng-click="symbol._collapsed = !symbol._collapsed" selection-model-ignore>\n                                    <span ng-bind="symbol.actions.length"></span>\n                                    Actions\n                                    <i class="fa fa-fw"\n                                       ng-class="symbol._collapsed ? \'fa-chevron-down\': \'fa-chevron-right\'"></i>\n                                </a>\n\n                            <ol collapse="!symbol._collapsed">\n                                <li ng-repeat="action in symbol.actions">\n                                    {{action.toString()}}\n                                </li>\n                            </ol>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/learn-start.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-start.html",'<div style="position: absolute; width: 100%; top: 42px; bottom: 0; overflow: hidden">\n\n    <div ng-if="active == true" class="container" style="margin-top: 54px">\n        <div class="alert alert-info">\n            <i class="fa fa-circle-o-notch fa-spin"></i>&nbsp; Application is learning ... <br>\n        </div>\n        <hr>\n        <button class="btn btn-default btn-xs pull-right" ng-click="abort()">\n            <i class="fa fa-close fa-fw"></i> Abort\n        </button>\n    </div>\n\n    <div ng-if="!active && results.length > 0">\n\n        <div class="panel-sidebar" ng-class="showSidebar === true ? \'show\' : \'\'">\n            <div widget widget-title="Configuration" collapsed="false">\n                <div learn-resume-settings-widget learn-configuration="_.last(results).configuration"></div>\n            </div>\n\n            <div widget widget-title="Counter Examples" collapsed="false"\n                 ng-if="_.last(results).configuration.eqOracle.type === \'sample\'">\n                <div counterexamples-widget\n                     counterexamples="_.last(results).configuration.eqOracle.counterExamples"></div>\n            </div>\n        </div>\n\n        <div learn-results-panel results="results">\n            <div class="btn-group btn-group-xs" style="margin-left: 7px">\n                <button class="btn btn-success" ng-click="resumeLearning()">Resume</button>\n                <button class="btn btn-success" ng-click="toggleSidebar()">\n                    <i class="fa fa-fw" ng-class="showSidebar ? \'fa-close\' : \'fa-gear\'"></i>\n                </button>\n            </div>\n        </div>\n\n    </div>\n\n</div>\n')}]),angular.module("app/views/pages/project-create.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/project-create.html",'<div view-heading\n     title="Create Project"\n     sub-title="Create a new project">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <form id="project-create-form" name="create_form" role="form" ng-submit="createProject()">\n\n            <!-- Name -->\n            <div class="form-group">\n                <label class="control-label">Name*</label>\n\n                <p class="text-muted">The name of your project</p>\n                <input name="name" type="text" class="form-control"\n                       placeholder="Enter a name for the project" ng-model="project.name" ng-required="true">\n            </div>\n            <div class="alert alert-danger alert-condensed"\n                 ng-show="create_form.name.$dirty && create_form.name.$invalid">\n                <small ng-show="create_form.name.$error.required">Name must not be empty.</small>\n            </div>\n            <!-- Name -->\n\n            <!-- Base Url -->\n            <div class="form-group">\n                <label class="control-label">Url*</label>\n\n                <p class="text-muted">The url of your website</p>\n                <input name="url" class="form-control" type="text"\n                       placeholder="Enter the url of the project" ng-model="project.baseUrl" ng-required="true"\n                       ng-pattern="/^(http://|https://).{1,}/">\n            </div>\n            <div class="alert alert-danger alert-condensed"\n                 ng-show="create_form.url.$dirty && create_form.url.$invalid">\n                <small ng-show="create_form.url.$error.required">\n                    Url must not be empty.\n                </small>\n                <small ng-show="create_form.url.$error.pattern">\n                    The url has to start with http(s):// and have a host name\n                </small>\n            </div>\n            <!-- /Base Url -->\n\n            <!-- Description -->\n            <div class="form-group">\n                <label class="control-label">Description</label>\n\n                <p class="text-muted">\n                    If you want you can describe your new project with a few words\n                </p>\n            <textarea name="description" ng-model="project.description"\n                      placeholder="Enter the description for the project"\n                      class="form-control" rows="3"></textarea>\n            </div>\n            <!-- /Description -->\n\n            <div class="form-group">\n                <button type="submit" class="btn btn-sm btn-primary">Create Project</button>\n            </div>\n\n        </form>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/project-settings.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/project-settings.html",'<div view-heading\n     title="Project Settings"\n     sub-title="Update your project and change settings">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <form id="project-edit-form" name="update_form" role="form" ng-submit="updateProject()">\n\n            <!-- Name -->\n            <div class="form-group">\n                <label class="control-label">Name*</label>\n\n                <p class="text-muted">The name of your project</p>\n                <input name="name" type="text" class="form-control"\n                       placeholder="Enter a name for the project" ng-model="project.name" ng-required="true">\n            </div>\n            <div class="alert alert-danger alert-condensed"\n                 ng-show="create_form.name.$dirty && create_form.name.$invalid">\n                <small ng-show="update_form.name.$error.required">Name must not be empty.</small>\n            </div>\n            <!-- Name -->\n\n            <!-- Base Url -->\n            <div class="form-group">\n                <label class="control-label">Url*</label>\n\n                <p class="text-muted">The url of your website</p>\n                <input name="url" class="form-control" type="text"\n                       placeholder="Enter the url of the project" ng-model="project.baseUrl" ng-required="true"\n                       ng-pattern="/^(http://|https://).{1,}/">\n            </div>\n            <div class="alert alert-danger alert-condensed"\n                 ng-show="create_form.url.$dirty && create_form.url.$invalid">\n                <small ng-show="update_form.url.$error.required">\n                    Url must not be empty.\n                </small>\n                <small ng-show="update_form.url.$error.pattern">\n                    The url has to start with http(s):// and have a host name\n                </small>\n            </div>\n            <!-- /Base Url -->\n\n            <!-- Description -->\n            <div class="form-group">\n                <label class="control-label">Description</label>\n\n                <p class="text-muted">\n                    If you want you can describe your new project with a few words\n                </p>\n            <textarea name="description" ng-model="project.description"\n                      placeholder="Enter the description for the project"\n                      class="form-control" rows="3"></textarea>\n            </div>\n            <!-- /Description -->\n\n            <div class="form-group">\n                <button type="submit" class="btn btn-sm btn-primary">Update</button>\n                <a class="btn btn-sm btn-default" ng-click="resetForm()">Reset</a>\n                <a class="btn btn-sm btn-default" ng-click="deleteProject()">Delete</a>\n            </div>\n\n        </form>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/project.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/project.html",'<div view-heading\n     title="Dashboard"\n     sub-title="sub-title">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        Dashboard will soon appear at this place\n\n    </div>\n</div>\n')}]),angular.module("app/views/pages/symbols-actions.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-actions.html",'<div view-heading\n     title="Actions"\n     sub-title="Create and manage the actions for symbol: {{symbol.name}}">\n    <a class="back-button btn btn-default btn-xs" ui-sref="symbols">\n        <i class="fa fa-fw fa-arrow-left"></i>\n    </a>\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:115,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" selection-checkbox-all items="symbol.actions">\n        </div>\n\n        <div class="pull-left">\n            <button class="btn btn-xs btn-primary" action-create-modal-handle on-created="addAction">\n                Create\n            </button>\n            <button class="btn btn-xs btn-default" action-edit-modal-handle action="selectedActions[0]"\n                    on-updated="updateAction"\n                    ng-class="selectedActions.length !== 1 ? \'disabled\': \'\'">\n                Edit\n            </button>\n            <button class="btn btn-xs btn-default" ng-click="deleteSelectedActions()"\n                    ng-class="selectedActions.length === 0 ? \'disabled\': \'\'">\n                Delete\n            </button>\n        </div>\n\n        <div class="pull-right">\n            <button class="btn btn-default btn-xs"\n                    variables-counters-occurrence-modal-handle>Occurrences\n            </button>\n            <button class="btn btn-default btn-xs" ng-click="revertChanges()">Reset</button>\n            <button class="btn btn-success btn-xs" ng-click="saveChanges()">Save</button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <div class="alert alert-info alert-condensed" ng-show="hasUnsavedChanges">\n            <i class="fa fa-fw fa-info"></i> There are unsaved changes made to the symbol\n        </div>\n\n        <div ng-if="symbol.actions" as-sortable ng-model="symbol.actions">\n            <div class="selectable-list">\n                <div ng-repeat="action in symbol.actions"\n                     selection-model\n                     selection-model-type="checkbox"\n                     selection-model-selected-attribute="_selected"\n                     selection-model-mode="multiple"\n                     selection-model-selected-items="selectedActions"\n                     selection-model-cleanup-strategy="deselect"\n                     as-sortable-item>\n\n                    <div selectable-list-item>\n\n                        <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                            <button type="button" class="btn btn-default btn-icon dropdown-toggle" dropdown-toggle>\n                                <i class="fa fa-bars"></i>\n                            </button>\n                            <ul class="dropdown-menu pull-left" role="menu">\n                                <li>\n                                    <a href action-edit-modal-handle action="action" on-updated="updateAction">\n                                        <i class="fa fa-edit fa-fw"></i> Edit\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href ng-click="deleteAction(action)">\n                                        <i class="fa fa-trash fa-fw"></i> Delete\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n\n                        <span class="text-muted pull-right" as-sortable-item-handle\n                              style="margin-right: 15px; padding: 2px;">\n                            <i class="fa fa-sort fa-fw"></i>\n                        </span>\n\n                        <span ng-bind="action.toString()"></span>\n\n                        <div>\n                            <label class="label label-info" ng-show="action.negated">Negate</label>\n                            <label class="label label-danger" ng-show="action.ignoreFailure">Ignore Failure</label>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n        <div class="alert alert-info" ng-show="symbol.actions.length == 0">\n            You haven\'t created any actions for this symbol yet.\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/symbols-export.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-export.html",'<div view-heading\n     title="Export Symbols"\n     sub-title="Select symbols you want to download as *.json">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:120,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" selection-checkbox-all items="allSymbols">\n        </div>\n\n        <div class="pull-left">\n            <button class="btn btn-xs btn-primary" download-as-json data="getDownloadableSymbols">\n                <i class="fa fa-download fa-fw"></i> Download\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container symbol-group-list">\n\n        <div ng-repeat="group in groups track by $index" class="symbol-group"\n             ng-class="group._collapsed ? \'collapsed\' :\'\'">\n\n            <div class="selectable-list symbol-group-header">\n                <div class="selectable-list-heading">\n                    <div class="selectable-list-control">\n                        <input type="checkbox" selection-checkbox-all items="group.symbols">\n                    </div>\n                    <div class="selectable-list-content">\n\n                        <span class="pull-right" ng-click="group._collapsed = !group._collapsed">\n                            <i class="fa fa-fw"\n                               ng-class="group._collapsed ? \'fa-chevron-down\' : \'fa-chevron-right\'"></i>\n                        </span>\n\n                        <h3 class="symbol-group-title" ng-bind="group.name"\n                            ng-click="group._collapsed = !group._collapsed"></h3>\n\n                        <p class="text-muted">\n                            <span ng-bind="group.symbols.length"></span> Symbols\n                        </p>\n\n                    </div>\n                </div>\n            </div>\n\n            <div class="symbol-group-body" collapse="group._collapsed">\n                <div class="selectable-list">\n                    <div ng-repeat="symbol in group.symbols | orderBy:\'-name\':true"\n                         selection-model\n                         selection-model-type="checkbox"\n                         selection-model-selected-attribute="_selected"\n                         selection-model-mode="multiple"\n                         selection-model-selected-items="selectedSymbols"\n                         selection-model-cleanup-strategy="deselect"\n                         ng-if="!symbol.hidden">\n\n                        <div selectable-list-item>\n\n                            <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]<br>\n\n                            <a ui-sref="symbols.actions({symbolId:symbol.id})">\n                                <span ng-bind="symbol.actions.length"></span> Actions <i class="fa fa-edit"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/symbols-history.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-history.html",'<div view-heading\n     title="Symbols History"\n     sub-title="Restore and older version of a symbol">\n    <a class="back-button btn btn-default btn-xs" ui-sref="symbols">\n        <i class="fa fa-fw fa-arrow-left"></i>\n    </a>\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <div class="selectable-list">\n            <div class="selectable-list-item" ng-repeat="revision in revisions | orderBy:\'-revision\':false ">\n                <div class="selectable-list-content" style="margin-left: 5px">\n\n                    <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover ng-if="$index !== 0">\n                        <button type="button" class="btn btn-default btn-icon dropdown-toggle" dropdown-toggle>\n                            <i class="fa fa-bars"></i>\n                        </button>\n                        <ul class="dropdown-menu pull-left" role="menu">\n                            <li>\n                                <a href ng-click="restoreRevision(revision)">\n                                    <i class="fa fa-history fa-fw"></i> Restore\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <span class="label label-primary pull-right" ng-show="$index === 0">Latest</span>\n\n                    <strong ng-bind="revision.name"></strong> [<span ng-bind="revision.abbreviation"></span>], Rev. {{revision.revision}}\n\n                    <p class="text-muted">\n                        <a href ng-click="revision._collapsed = !revision._collapsed">\n                            <span ng-bind="revision.actions.length"></span>\n                            Actions\n                            <i class="fa fa-fw" ng-class="revision._collapsed ? \'fa-chevron-down\': \'fa-chevron-right\'"></i>\n                        </a>\n\n                        <ol collapse="!revision._collapsed">\n                            <li ng-repeat="action in revision.actions">\n                                {{action.toString()}}\n                            </li>\n                        </ol>\n                    </p>\n\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/symbols-import.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-import.html",'<div view-heading\n     title="Symbols Upload"\n     sub-title="If you already have a *.json file with symbols, you can import them here to this project">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:120,class:\'fixed\'}" ng-if="symbols.length > 0">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" selection-checkbox-all items="symbols">\n        </div>\n\n        <div class="pull-left">\n            <button class="btn btn-xs btn-primary" ng-click="uploadSelectedSymbols()">\n                <i class="fa fa-upload fa-fw"></i> Upload\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <div ng-if="symbols.length === 0">\n            <div file-dropzone on-loaded="fileLoaded" class="alert alert-info">\n                Drag and drop *.json file here\n                <button class="btn btn-xs btn-primary pull-right" file-upload-button on-loaded="fileLoaded">Choose File</button>\n            </div>\n            <hr>\n        </div>\n\n        <div class="alert alert-info alert-condensed" ng-show="symbols.length > 0">\n            <i class="fa fa-fw fa-info"></i>\n            For symbols with actions that invoke other symbols, please make sure you adjust the references after\n            uploading them\n        </div>\n\n        <div class="selectable-list">\n            <div ng-repeat="symbol in symbols"\n                 selectable-list-item\n                 selection-model\n                 selection-model-type="checkbox"\n                 selection-model-selected-attribute="_selected"\n                 selection-model-mode="multiple"\n                 selection-model-selected-items="selectedSymbols"\n                 selection-model-cleanup-strategy="deselect">\n\n                <button class="btn btn-xs btn-default btn-icon pull-right"\n                        symbol-edit-modal-handle symbol="symbol" on-updated="updateSymbol" update-on-server="false">\n                    <i class="fa fa-edit"></i>\n                </button>\n\n                <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]\n\n                <p class="text-muted">\n                    <a href ng-click="symbol._collapsed = !symbol._collapsed">\n                        <span ng-bind="symbol.actions.length"></span>\n                        Actions\n                        <i class="fa fa-fw"\n                           ng-class="symbol._collapsed ? \'fa-chevron-down\': \'fa-chevron-right\'"></i>\n                    </a>\n\n                <ol collapse="!symbol._collapsed">\n                    <li ng-repeat="action in symbol.actions">\n                        {{action.toString()}}\n                    </li>\n                </ol>\n                </p>\n\n            </div>\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/symbols-trash.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-trash.html",'<div view-heading\n     title="Symbol Trash"\n     sub-title="Restore deleted symbols">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:120,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" selection-checkbox-all items="symbols">\n        </div>\n\n        <div class="pull-right">\n            <button class="btn btn-xs btn-primary" ng-click="recoverSelectedSymbols()">\n                <i class="fa fa-rotate-left fa-fw"></i> Recover\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <div class="alert alert-info" ng-show="symbols.length === 0">\n            There aren\'t any deleted symbols.\n        </div>\n\n        <div class="selectable-list" ng-if="symbols.length > 0">\n            <div ng-repeat="symbol in symbols | orderBy:\'-name\':true"\n                 selection-model\n                 selection-model-type="checkbox"\n                 selection-model-selected-attribute="_selected"\n                 selection-model-mode="multiple"\n                 selection-model-selected-items="selectedSymbols"\n                 selection-model-cleanup-strategy="deselect">\n\n                <div selectable-list-item>\n                    <a class="btn btn-default btn-icon pull-right" ng-click="recoverSymbol(symbol)">\n                        <i class="fa fa-rotate-left fa-fw"></i>\n                    </a>\n\n                    <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]\n\n                    <div class="text-muted">\n                        <span ng-bind="symbol.actions.length"></span> Actions\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n</div>')
}]),angular.module("app/views/pages/symbols.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols.html",'<div view-heading\n     title="Symbols"\n     sub-title="Manage all symbols of the project">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:120,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" selection-checkbox-all items="getAllSymbols">\n        </div>\n\n        <div class="pull-left">\n\n            <div class="btn-group btn-group-xs" dropdown dropdown-hover>\n                <button class="btn btn-primary">\n                    Create\n                </button>\n                <ul class="dropdown-menu" role="menu">\n                    <li>\n                        <a href symbol-create-modal-handle project-id="{{project.id}}" on-created="addSymbol">\n                            Symbol\n                        </a>\n                    </li>\n                    <li>\n                        <a href symbol-group-create-modal-handle project-id="{{project.id}}" on-created="addGroup">\n                            Group\n                        </a>\n                    </li>\n                </ul>\n            </div>\n\n            <button class="btn btn-xs btn-default" ng-class="selectedSymbols.length === 1 ? \'\' : \'disabled\'"\n                    symbol-edit-modal-handle symbol="selectedSymbols[0]" on-updated="updateSymbol">\n                Edit\n            </button>\n            <button class="btn btn-xs btn-default" symbol-move-modal-handle groups="groups" symbols="selectedSymbols"\n                    on-moved="moveSymbolsToGroup" ng-class="selectedSymbols.length > 0 ? \'\' : \'disabled\'">\n                Move\n            </button>\n            <button class="btn btn-xs btn-default" ng-class="selectedSymbols.length > 0 ? \'\' : \'disabled\'"\n                    ng-click="deleteSelectedSymbols()">\n                Delete\n            </button>\n\n        </div>\n\n        <div class="pull-right">\n            <button class="btn btn-xs btn-default" ng-click="toggleCollapseAllGroups()">\n                <i class="fa fa-fw" ng-class="groupsCollapsed ? \'fa-chevron-down\': \'fa-chevron-right\'"></i>\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container symbol-group-list">\n\n        <div ng-repeat="group in groups track by $index" class="symbol-group"\n             ng-class="group._collapsed ? \'collapsed\' :\'\'">\n\n            <div class="selectable-list symbol-group-header">\n                <div class="selectable-list-heading">\n                    <div class="selectable-list-control">\n                        <input type="checkbox" selection-checkbox-all items="group.symbols">\n                    </div>\n                    <div class="selectable-list-content">\n\n                        <span class="pull-right" ng-click="group._collapsed = !group._collapsed">\n                            <i class="fa fa-fw"\n                               ng-class="group._collapsed ? \'fa-chevron-down\' : \'fa-chevron-right\'"></i>\n                        </span>\n\n                        <a href class="pull-right" style="margin-right: 15px" symbol-group-edit-modal-handle\n                           group="group" on-updated="updateGroup" on-deleted="deleteGroup">\n                            <i class="fa fa-fw fa-gear"></i>\n                        </a>\n\n                        <h3 class="symbol-group-title" ng-bind="group.name"\n                            ng-click="group._collapsed = !group._collapsed"></h3>\n\n                        <p class="text-muted">\n                            <span ng-bind="group.symbols.length"></span> Symbols\n                        </p>\n\n                    </div>\n                </div>\n            </div>\n\n            <div class="symbol-group-body" collapse="group._collapsed">\n                <div class="selectable-list">\n                    <div ng-repeat="symbol in group.symbols | orderBy:\'-name\':true"\n                         selection-model\n                         selection-model-type="checkbox"\n                         selection-model-selected-attribute="_selected"\n                         selection-model-mode="multiple"\n                         selection-model-selected-items="selectedSymbols"\n                         selection-model-cleanup-strategy="deselect"\n                         ng-if="!symbol.hidden">\n\n                        <div selectable-list-item>\n                            <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                                <button type="button" class="btn btn-default btn-icon dropdown-toggle" dropdown-toggle>\n                                    <i class="fa fa-bars"></i>\n                                </button>\n                                <ul class="dropdown-menu pull-left" role="menu">\n                                    <li>\n                                        <a href symbol-edit-modal-handle symbol="symbol" on-updated="updateSymbol">\n                                            <i class="fa fa-edit fa-fw"></i> Edit\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a href symbol-move-modal-handle groups="groups" symbols="[symbol]"\n                                           on-moved="moveSymbolsToGroup">\n                                            <i class="fa fa-exchange fa-fw"></i> Move\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a href ng-click="deleteSymbol(symbol)">\n                                            <i class="fa fa-trash fa-fw"></i> Delete\n                                        </a>\n                                    </li>\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a ui-sref="symbols.actions({symbolId:symbol.id})">\n                                            <i class="fa fa-list-ol fa-fw"></i> Actions\n                                        </a>\n                                    </li>\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a ui-sref="symbols.history({symbolId:symbol.id})">\n                                            <i class="fa fa-history fa-fw"></i> Restore\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n\n                            <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]<br>\n\n                            <a ui-sref="symbols.actions({symbolId:symbol.id})">\n                                <span ng-bind="symbol.actions.length"></span> Actions &nbsp;<i class="fa fa-edit"></i>\n                            </a>\n\n                            <a href ng-click="symbol._collapsed = !symbol._collapsed" selection-model-ignore>\n                                <i class="fa fa-fw"\n                                   ng-class="symbol._collapsed ? \'fa-chevron-down\': \'fa-chevron-right\'"></i>\n                            </a>\n\n                            <ol collapse="!symbol._collapsed">\n                                <li ng-repeat="action in symbol.actions">\n                                    {{action.toString()}}\n                                </li>\n                            </ol>\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>')}]),function(){"use strict";function a(a,b,c){b.otherwise("/home"),a.state("home",{url:"/home",controller:"HomeController",templateUrl:c.views.PAGES+"/home.html"}).state("project",{url:"/project",views:{"@":{controller:"ProjectController",templateUrl:c.views.PAGES+"/project.html"}},data:{requiresProject:!0}}).state("project.create",{url:"/create",views:{"@":{controller:"ProjectCreateController",templateUrl:c.views.PAGES+"/project-create.html"}},data:{requiresProject:!1}}).state("project.settings",{url:"/settings",views:{"@":{templateUrl:c.views.PAGES+"/project-settings.html",controller:"ProjectSettingsController"}}}).state("counters",{url:"/counters",views:{"@":{templateUrl:c.views.PAGES+"/counters.html",controller:"CountersController"}},data:{requiresProject:!1}}).state("symbols",{url:"/symbols",views:{"@":{controller:"SymbolsController",templateUrl:c.views.PAGES+"/symbols.html"}},data:{requiresProject:!0}}).state("symbols.trash",{url:"/trash",views:{"@":{controller:"SymbolsTrashController",templateUrl:c.views.PAGES+"/symbols-trash.html"}}}).state("symbols.history",{url:"/{symbolId:int}/history",views:{"@":{controller:"SymbolsHistoryController",templateUrl:c.views.PAGES+"/symbols-history.html"}}}).state("symbols.actions",{url:"/{symbolId:int}/actions",views:{"@":{controller:"SymbolsActionsController",templateUrl:c.views.PAGES+"/symbols-actions.html"}}}).state("symbols.import",{url:"/import",views:{"@":{controller:"SymbolsImportController",templateUrl:c.views.PAGES+"/symbols-import.html"}}}).state("symbols.export",{url:"/export",views:{"@":{controller:"SymbolsExportController",templateUrl:c.views.PAGES+"/symbols-export.html"}}}).state("learn",{"abstract":!0,url:"/learn",data:{requiresProject:!0}}).state("learn.setup",{url:"/setup",views:{"@":{controller:"LearnSetupController",templateUrl:c.views.PAGES+"/learn-setup.html"}}}).state("learn.start",{url:"/start",views:{"@":{controller:"LearnStartController",templateUrl:c.views.PAGES+"/learn-start.html"}}}).state("learn.results",{url:"/results",views:{"@":{controller:"LearnResultsController",templateUrl:c.views.PAGES+"/learn-results.html"}}}).state("learn.results.statistics",{url:"/statistics",views:{"@":{controller:"LearnResultsStatisticsController",templateUrl:c.views.PAGES+"/learn-results-statistics.html"}}}).state("learn.results.compare",{url:"/compare/:testNos",views:{"@":{controller:"LearnResultsCompareController",templateUrl:c.views.PAGES+"/learn-results-compare.html"}}}).state("about",{url:"/about",templateUrl:c.views.PAGES+"/about.html",data:{requiresProject:!1}}).state("help",{url:"/help",templateUrl:c.views.PAGES+"/help.html",data:{requiresProject:!1}})}function b(a,b,c){function d(a,d){d.data&&d.data.requiresProject&&null==c.project.get()&&(b.go("home"),a.preventDefault())}a.$on("$stateChangeStart",d)}angular.module("ALEX.routes").config(["$stateProvider","$urlRouterProvider","paths",a]).run(["$rootScope","$state","SessionService",b])}(),function(){"use strict";angular.module("ALEX.constants").constant("_",window._).constant("dagreD3",window.dagreD3).constant("d3",window.d3).constant("graphlib",window.graphlib).constant("paths",{views:{BASE:"app/views",DIRECTIVES:"app/views/directives",MODALS:"app/views/modals",PAGES:"app/views/pages",INCLUDES:"app/views/includes"},api:{URL:"/rest",PROXY_URL:"/rest/proxy?url="}}).constant("outputAlphabet",{OK:"OK",FAILED:"FAILED"}).constant("actionTypes",{web:{SEARCH_FOR_TEXT:"web_checkForText",SEARCH_FOR_NODE:"web_checkForNode",CLEAR:"web_clear",CLICK:"web_click",CLICK_LINK_BY_TEXT:"web_clickLinkByText",FILL:"web_fill",GO_TO:"web_goto",SUBMIT:"web_submit",SELECT:"web_select"},rest:{CALL_URL:"rest_call",CHECK_STATUS:"rest_checkStatus",CHECK_HEADER_FIELD:"rest_checkHeaderField",CHECK_HTTP_BODY_TEXT:"rest_checkForText",CHECK_ATTRIBUTE_EXISTS:"rest_checkAttributeExists",CHECK_ATTRIBUTE_VALUE:"rest_checkAttributeValue",CHECK_ATTRIBUTE_TYPE:"rest_checkAttributeType"},other:{EXECUTE_SYMBOL:"executeSymbol",INCREMENT_COUNTER:"incrementCounter",SET_COUNTER:"setCounter",SET_VARIABLE:"setVariable",SET_VARIABLE_BY_JSON_ATTRIBUTE:"setVariableByJSON",SET_VARIABLE_BY_NODE:"setVariableByHTML",WAIT:"wait"}}).constant("eqOracles",{RANDOM:"random_word",COMPLETE:"complete",SAMPLE:"sample"}).constant("learnAlgorithms",{EXTENSIBLE_LSTAR:"EXTENSIBLE_LSTAR",DHC:"DHC",DISCRIMINATION_TREE:"DISCRIMINATION_TREE",TTT:"TTT"})}(),function(){"use strict";function a(a,b,c,d,e,f,g){var h=g.project.get();a.actionTypes=d,a.action=null,a.symbols=[],function(){f.Resource.getAll(h.id).then(function(b){a.symbols=b})}(),a.selectNewActionType=function(b){a.action=e.createByType(b)},a.createAction=function(){b.close(a.action)},a.createActionAndContinue=function(){c.addAction(a.action),a.action=null},a.closeModal=function(){b.dismiss()}}angular.module("ALEX.controller").controller("ActionCreateModalController",a),a.$inject=["$scope","$modalInstance","modalData","actionTypes","Action","Symbol","SessionService"]}(),function(){"use strict";function a(a,b,c,d,e,f,g){var h=g.project.get();a.actionTypes=d,a.action=angular.copy(c.action),a.symbols=[],function(){f.Resource.getAll(h.id).then(function(b){a.symbols=b})}(),a.updateAction=function(){var c=a.action._id;a.action=e.build(a.action),a.action._id=c,b.close(a.action)},a.closeModal=function(){b.dismiss()}}angular.module("ALEX.controller").controller("ActionEditModalController",a),a.$inject=["$scope","$modalInstance","modalData","actionTypes","Action","Symbol","SessionService"]}(),function(){"use strict";function a(a,b,c){a.text=c.text,a.regexp=c.regexp,a.errorMsg=c.errorMsg,a.ok=function(){b.close()},a.close=function(){b.dismiss()}}angular.module("ALEX.controller").controller("ConfirmDialogController",a),a.$inject=["$scope","$modalInstance","modalData"]}(),function(){"use strict";function a(a,b,c){var d={nodesep:50,edgesep:25,ranksep:50,multigraph:!1};a.layoutSettings={},a.layoutSettings=angular.copy(angular.isDefined(c.layoutSettings)?c.layoutSettings:d),a.update=function(){b.close(a.layoutSettings)},a.close=function(){b.dismiss()},a.defaultLayoutSettings=function(){a.layoutSettings=angular.copy(d)}}angular.module("ALEX.controller").controller("HypothesisLayoutSettingsController",["$scope","$modalInstance","modalData",a])}(),function(){"use strict";function a(a,b,c,d){a.tabs=[{heading:"Current",result:c.result}],c.result.stepNo>0?d.Resource.getFinal(c.result.project,c.result.testNo).then(function(b){a.tabs.push({heading:"Cumulated",result:b})}):a.tabs[0].heading="Cumulated",a.ok=function(){b.dismiss()}}angular.module("ALEX.controller").controller("LearnResultDetailsModalController",a),a.$inject=["$scope","$modalInstance","modalData","LearnResult"]}(),function(){"use strict";function a(a,b,c,d,e,f){a.eqOracles=d,a.selectedEqOracle=c.learnConfiguration.eqOracle.type,a.learnAlgorithms=e,a.learnConfiguration=c.learnConfiguration.copy(),a.setEqOracle=function(){a.learnConfiguration.eqOracle=f.createFromType(a.selectedEqOracle)},a.ok=function(){b.close(a.learnConfiguration)},a.closeModal=function(){b.dismiss()}}angular.module("ALEX.controller").controller("LearnSetupSettingsModalController",a),a.$inject=["$scope","$modalInstance","modalData","eqOracles","learnAlgorithms","EqOracle"]}(),function(){"use strict";function a(a,b,c){a.userInput,a.text=c.text,a.inputPattern=c.regexp||"",a.errorMsg=c.errorMsg||"Unknown validation error",a.ok=function(){a.prompt_form.$valid?b.close(a.userInput):a.prompt_form.submitted=!0},a.close=function(){b.dismiss()}}angular.module("ALEX.controller").controller("PromptDialogController",a),a.$inject=["$scope","$modalInstance","modalData"]}(),function(){"use strict";function a(a,b,c,d,e,f){var g=null;a.symbol=new d,a.errorMsg=null,a.groups=[],a.selectedGroup=null,function(){if(angular.isUndefined(c.projectId))throw new Error("required parameter projectId not defined");g=c.projectId,e.Resource.getAll(g).then(function(b){a.groups=b})}(),a.createSymbol=function(){a.errorMsg=null;var c=_.find(a.groups,{name:a.selectedGroup});a.symbol.group=angular.isDefined(c)?c.id:0,d.Resource.create(g,a.symbol).then(function(a){f.success("Created symbol <strong>"+a.name+"</strong>"),b.close(a)})["catch"](function(b){a.errorMsg=b.data.message})},a.closeModal=function(){b.dismiss()}}angular.module("ALEX.controller").controller("SymbolCreateModalController",a),a.$inject=["$scope","$modalInstance","modalData","Symbol","SymbolGroup","ToastService"]}(),function(){"use strict";function a(a,b,c,d,e,f){a.symbol=c.symbol,a.errorMsg=null;var g=a.symbol.copy();a.updateSymbol=function(){return a.errorMsg=null,e.removeSelection(a.symbol),angular.isDefined(c.updateOnServer)&&!c.updateOnServer?void b.close({"new":a.symbol,old:g}):void d.Resource.update(a.symbol.project,a.symbol).then(function(a){f.success("Symbol updated"),b.close({"new":a,old:g})})["catch"](function(b){a.errorMsg=b.data.message})},a.closeModal=function(){b.dismiss()}}angular.module("ALEX.controller").controller("SymbolEditModalController",a),a.$inject=["$scope","$modalInstance","modalData","Symbol","SelectionService","ToastService"]}(),function(){"use strict";function a(a,b,c,d,e,f){var g=c.projectId;a.group=new d,a.groups=[],a.errorMsg=null,function(){d.Resource.getAll(g).then(function(b){a.groups=b})}(),a.createGroup=function(){a.errorMsg=null;var c=e.findIndex(a.groups,{name:a.group.name});-1===c?d.Resource.create(g,a.group).then(function(a){f.success("Symbol group <strong>"+a.name+"</strong> created"),b.close(a)})["catch"](function(b){a.errorMsg=b.data.message}):a.errorMsg="The group name is already in use in this project"},a.closeModal=function(){b.dismiss()}}angular.module("ALEX.controller").controller("SymbolGroupCreateModalController",a),a.$inject=["$scope","$modalInstance","modalData","SymbolGroup","_","ToastService"]}(),function(){"use strict";function a(a,b,c,d,e){a.group=null,a.errorMsg=null,function(){if(!(angular.isDefined(c.group)&&c.group instanceof d))throw new Error("Wrong parameter type");a.group=c.group.copy()}(),a.updateGroup=function(){a.errorMsg=null,d.Resource.update(a.group.project,a.group).then(function(a){e.success("Group updated"),b.close({status:"updated",newGroup:a,oldGroup:c.group})})["catch"](function(b){a.errorMsg=b.data.message})},a.deleteGroup=function(){a.errorMsg=null,d.Resource["delete"](a.group.project,a.group).then(function(){e.success("Group <strong>"+a.group.name+"</strong> deleted"),b.close({status:"deleted",group:a.group})})["catch"](function(b){a.errorMsg=b.data.message})},a.closeModal=function(){b.dismiss()}}angular.module("ALEX.controller").controller("SymbolGroupEditModalController",a),a.$inject=["$scope","$modalInstance","modalData","SymbolGroup","ToastService"]}(),function(){"use strict";function a(a,b,c,d,e,f){a.symbols=[],a.groups=[],a.selectedGroup=null,function(){if(!angular.isDefined(c.groups)||!angular.isDefined(c.symbols))throw new Error("Missing data");a.symbols=angular.copy(c.symbols),a.groups=angular.copy(c.groups)}(),a.moveSymbols=function(){null!==a.selectedGroup&&(_.forEach(a.symbols,function(b){e.removeSelection(b),b.group=a.selectedGroup.id}),d.Resource.moveSome(a.selectedGroup.project,a.symbols,a.selectedGroup.id).then(function(){f.success("Symbols move to group <strong>"+a.selectedGroup.name+"</strong>"),b.close({symbols:c.symbols,group:a.selectedGroup})})["catch"](function(a){f.danger("<p><strong>Moving symbols failed</strong></p>"+a.data.message)}))},a.selectGroup=function(b){a.selectedGroup=a.selectedGroup===b?null:b},a.closeModal=function(){b.dismiss()}}angular.module("ALEX.controller").controller("SymbolMoveModalController",a),a.$inject=["$scope","$modalInstance","modalData","Symbol","SelectionService","ToastService"]}(),function(){"use strict";function a(a,b,c,d){function e(a){function b(a,b,c,d){return{group:a.name,symbol:b.name,action:c,name:d.substring(3,d.length-2)}}var c,d,e={counters:[],variables:[]};return _.forEach(a,function(a){_.forEach(a.symbols,function(f){f.hidden||_.forEach(f.actions,function(g,h){for(var i in g)g.hasOwnProperty(i)&&angular.isString(g[i])&&(c=g[i].match(/{{#(.*?)}}/g),d=g[i].match(/{{\$(.*?)}}/g),null!==c&&_.forEach(c,function(c){e.counters.push(b(a,f,h,c))}),null!==d&&_.forEach(d,function(c){e.variables.push(b(a,f,h,c))}))})})}),e}var f=c.project.get();a.occurrences=null,d.Resource.getAll(f.id,{embedSymbols:!0}).then(function(b){a.occurrences=e(b)}),a.close=function(){b.dismiss()}}angular.module("ALEX.controller").controller("VariablesCountersOccurrenceModalController",a),a.$inject=["$scope","$modalInstance","SessionService","SymbolGroup"]}(),function(){"use strict";function a(a,b,c,d,e){var f=b.project.get();a.counters=[],a.selectedCounters=[],function(){c.getAll(f.id).then(function(b){a.counters=b})}(),a.deleteCounter=function(b){c["delete"](f.id,b.name).then(function(){d.success('Counter "'+b.name+'" deleted'),e.remove(a.counters,{name:b.name})})["catch"](function(a){d.danger('<p><strong>Deleting counter "'+b.name+'" failed</strong></p>'+a.data.message)})},a.deleteSelectedCounters=function(){a.selectedCounters.length>0&&c.deleteSome(f.id,e.pluck(a.counters,"name")).then(function(){d.success("Counters deleted"),e.forEach(a.selectedCounters,function(b){e.remove(a.counters,{name:b.name})})})["catch"](function(a){d.danger("<p><strong>Deleting counters failed</strong></p>"+a.data.message)})}}angular.module("ALEX.controller").controller("CountersController",a),a.$inject=["$scope","SessionService","CountersService","ToastService","_"]}(),function(){"use strict";function a(a,b,c,d){a.projects=[],function(){null!==d.project.get()&&b.go("project"),c.Resource.all().then(function(b){a.projects=b})}(),a.openProject=function(a){d.project.save(a),b.go("project")}}angular.module("ALEX.controller").controller("HomeController",a),a.$inject=["$scope","$state","Project","SessionService"]}(),function(){"use strict";function a(a,b,c,d,e){function f(b,c){var f=b.split(",");e.forEach(f,function(b){d.Resource.getComplete(g.id,b).then(function(b){angular.isUndefined(c)?a.panels.push(b):a.panels[c]=b})})}var g=c.project.get();a.results=[],a.panels=[],a.layoutSettings=[],function(){d.Resource.getAllFinal(g.id).then(function(c){return a.results=c,b.testNos}).then(f)}(),a.fillPanel=function(a,b){f(a.testNo+"",b)}}angular.module("ALEX.controller").controller("LearnResultsCompareController",a),a.$inject=["$scope","$stateParams","SessionService","LearnResult","_"]}(),function(){"use strict";function a(a,b,c,d,e){var f=b.project.get();a.results=[],a.selectedResults=[],function(){c.Resource.getAllFinal(f.id).then(function(b){a.results=b})}(),a.deleteResult=function(b){d.confirm("Do you want to permanently delete this result? Changes cannot be undone.").then(function(){c.Resource["delete"](f.id,b.testNo).then(function(){e.success("Learn result for test <strong>"+b.testNo+"</strong> deleted"),_.remove(a.results,{testNo:b.testNo})})["catch"](function(a){e.danger("<p><strong>Result deletion failed</strong></p>"+a.data.message)})})},a.deleteResults=function(){var b;a.selectedResults.length>0&&(b=_.pluck(a.selectedResults,"testNo"),d.confirm("Do you want to permanently delete theses results? Changes cannot be undone.").then(function(){c.Resource.deleteSome(f.id,b).then(function(){e.success("Learn results deleted"),_.forEach(b,function(b){_.remove(a.results,{testNo:b})})})["catch"](function(a){e.danger("<p><strong>Result deletion failed</strong></p>"+a.data.message)})}))}}angular.module("ALEX.controller").controller("LearnResultsController",a),a.$inject=["$scope","SessionService","LearnResult","PromptService","ToastService"]}(),function(){"use strict";function a(a,b,c,d){var e=b.project.get();a.chartModes={MULTIPLE_FINAL:0,MULTIPLE_COMPLETE:1},a.chartProperties=d.properties,a.results=[],a.selectedResults=[],a.selectedChartMode=null,a.selectedChartProperty=a.chartProperties.MQS,a.fullWidth=!1,a.chartData={data:null,options:null},function(){c.Resource.getAllFinal(e.id).then(function(b){a.results=b})}(),a.selectChartProperty=function(b){a.selectedChartProperty=b,a.selectedChartMode===a.chartModes.MULTIPLE_FINAL?a.createChartFromFinalResults():a.selectedChartMode===a.chartModes.MULTIPLE_COMPLETE&&a.createChartFromCompleteResults()},a.createChartFromFinalResults=function(){var b;a.selectedResults.length>0&&(b=d.createDataFromMultipleFinalResults(a.selectedResults,a.selectedChartProperty),a.chartData={data:b.data,options:b.options},a.selectedChartMode=a.chartModes.MULTIPLE_FINAL)},a.createChartFromCompleteResults=function(){var b;a.selectedResults.length>0&&c.Resource.getSomeComplete(e.id,_.pluck(a.selectedResults,"testNo")).then(function(c){b=d.createDataFromMultipleCompleteResults(c,a.selectedChartProperty),a.chartData={data:b.data,options:b.options},a.selectedChartMode=a.chartModes.MULTIPLE_COMPLETE})},a.back=function(){a.selectedChartMode=null,a.chartData={data:null,options:null},a.fullWidth=!1}}angular.module("ALEX.controller").controller("LearnResultsStatisticsController",a),a.$inject=["$scope","SessionService","LearnResult","LearnerResultChartService"]}(),function(){"use strict";function a(a,b,c,d,e,f,g,h){var i=d.project.get();a.groups=[],a.allSymbols=[],a.learnConfiguration=new f,a.resetSymbol=null,function(){g.isActive().then(function(d){d.active?d.project==i.id?(h.info("There is currently running a learn process."),b.go("learn.start")):(h.danger("There is already running a test from another project."),b.go("project")):c.Resource.getAll(i.id,{embedSymbols:!0}).then(function(b){a.groups=b,a.allSymbols=_.flatten(_.pluck(a.groups,"symbols"))})})}(),a.setResetSymbol=function(b){a.resetSymbol=b},a.startLearning=function(){var c;return null===a.resetSymbol?void h.danger("You <strong>must</strong> selected a reset symbol in order to start learning"):(c=e.getSelected(a.allSymbols),void(c.length>0?(_.forEach(c,function(b){a.learnConfiguration.addSymbol(b)}),a.learnConfiguration.setResetSymbol(a.resetSymbol),g.start(i.id,a.learnConfiguration).then(function(){h.success("Learn process started successfully."),b.go("learn.start")})["catch"](function(a){h.danger("<p><strong>Start learning failed</strong></p>"+a.data.message)})):h.danger("You <strong>must</strong> at least select one symbol to start learning")))},a.updateLearnConfiguration=function(b){a.learnConfiguration=b},a.getAllSymbols=function(){return _.flatten(_.pluck(a.groups,"symbols"))}}angular.module("ALEX.controller").controller("LearnSetupController",a),a.$inject=["$scope","$state","SymbolGroup","SessionService","SelectionService","LearnConfiguration","LearnerService","ToastService"]}(),function(){function a(a,b,c,d,e,f,g){function h(){function c(b){e.Resource.getComplete(i.id,b.testNo).then(function(b){a.results=b})}a.active=!0,j=b(function(){d.isActive().then(function(e){e.active||(d.getStatus().then(c),b.cancel(j),a.active=!1)})},k)}var i=c.project.get(),j=null,k=1e4;a.results=[],a.active=!1,a.showSidebar=!1,function(){h(),a.$on("$destroy",function(){b.cancel(j)})}(),a.updateLearnConfiguration=function(b){a.test.configuration=b},a.resumeLearning=function(){var b=g.last(a.results).configuration.copy().toLearnResumeConfiguration();d.resume(i.id,g.last(a.results).testNo,b).then(h)["catch"](function(a){f.danger("<p><strong>Resume learning failed!</strong></p>"+a.data.message)})},a.abort=function(){a.active&&(f.info("The learner will stop with the next hypothesis"),d.stop())},a.toggleSidebar=function(){a.showSidebar=!a.showSidebar}}angular.module("ALEX.controller").controller("LearnStartController",a),a.$inject=["$scope","$interval","SessionService","LearnerService","LearnResult","ToastService","_"]}(),function(){"use strict";function a(a,b){a.project=b.project.get()}angular.module("ALEX.controller").controller("ProjectController",a),a.$inject=["$scope","SessionService"]}(),function(){"use strict";function a(a,b,c,d){a.project=new c,a.createProject=function(){c.Resource.create(a.project).then(function(a){d.success('Project "'+a.name+'" created'),b.go("home")})["catch"](function(a){d.danger("<p><strong>Creation of project failed</strong></p>"+a.data.message)})}}angular.module("ALEX.controller").controller("ProjectCreateController",a),a.$inject=["$scope","$state","Project","ToastService"]}(),function(){"use strict";function a(a,b,c,d,e,f,g){function h(){i=c.build(angular.copy(a.project))}var i;a.project=d.project.get(),function(){g.isActive().then(function(c){c.active&&c.project===a.project.id&&(f.info("Cannot edit the project. A learning process is still active."),b.go("project"))}),h()}(),a.updateProject=function(){c.Resource.update(a.project).then(function(b){f.success("Project updated"),d.project.save(b),a.project=b,h()})["catch"](function(){f.danger("<p><strong>Project update failed!</strong></p> The project seems to exists already.")})},a.deleteProject=function(){var g="Do you really want to delete this project with all its symbols and test results? This process can not be undone.";e.confirm(g).then(function(){c.Resource["delete"](a.project).then(function(){f.success("Project <strong>"+a.project.name+"</strong> deleted"),d.project.remove(),b.go("home")})["catch"](function(a){f.danger("<p><strong>Deleting project failed</strong></p>"+a.data.message)})})},a.resetForm=function(){a.project=angular.copy(i)}}angular.module("ALEX.controller").controller("ProjectSettingsController",a),a.$inject=["$scope","$state","Project","SessionService","PromptService","ToastService","LearnerService"]}(),function(){"use strict";function a(a,b,c,d,e,f){function g(b){_.forEach(b.actions,function(a){a._id=_.uniqueId()}),a.symbol=b,a.symbolCopy=b.copy()}a.project=d.project.get(),a.symbol=null,a.symbolCopy=null,a.selectedActions=[],a.hasUnsavedChanges=!1,function(){c.Resource.get(a.project.id,b.symbolId).then(g)["catch"](function(){})}(),a.deleteSelectedActions=function(){a.selectedActions.length>0&&(_.forEach(a.selectedActions,a.deleteAction),f.success("Actions deleted")),a.hasUnsavedChanges=!0},a.deleteAction=function(b){_.remove(a.symbol.actions,{_id:b._id}),f.success("Action deleted"),a.hasUnsavedChanges=!0},a.addAction=function(b){b._id=_.uniqueId(),a.symbol.actions.push(b),f.success("Action created"),a.hasUnsavedChanges=!0},a.updateAction=function(b){var c=_.findIndex(a.symbol.actions,{_id:b._id});c>-1&&(a.symbol.actions[c]=b,f.success("Action updated")),a.hasUnsavedChanges=!0},a.saveChanges=function(){var b=a.symbol.copy();e.removeSelection(b.actions),_.forEach(b.actions,function(a){delete a._id}),c.Resource.update(a.project.id,b).then(function(b){g(b),f.success("Symbol <strong>"+b.name+"</strong> updated"),a.hasUnsavedChanges=!1})["catch"](function(a){f.danger("<p><strong>Error updating symbol</strong></p>"+a.data.message)})},a.revertChanges=function(){g(a.symbolCopy),f.info("Changes reverted to the last update"),a.hasUnsavedChanges=!1}}angular.module("ALEX.controller").controller("SymbolsActionsController",a),a.$inject=["$scope","$stateParams","Symbol","SessionService","SelectionService","ToastService"]}(),function(){"use strict";function a(a,b,c,d,e,f){function g(b){return e.find(a.groups,{id:b.group})}a.project=b.project.get(),a.groupsCollapsed=!1,a.selectedSymbols=[],a.groups=[],function(){d.Resource.getAll(a.project.id,{embedSymbols:!0}).then(function(b){a.groups=b})}(),a.getAllSymbols=function(){return e.flatten(e.pluck(a.groups,"symbols"))},a.addSymbol=function(a){g(a).symbols.push(a)},a.removeSymbols=function(a){var b;e.forEach(a,function(a){delete a._selected,delete a._collapsed,b=g(a),e.remove(b.symbols,{id:a.id})})},a.updateSymbol=function(b){a.updateSymbols([b])},a.updateSymbols=function(a){var b,c;e.forEach(a,function(a){b=g(a),c=e.findIndex(b.symbols,{id:a.id}),c>-1&&(b.symbols[c].name=a.name,b.symbols[c].abbreviation=a.abbreviation,b.symbols[c].group=a.group,b.symbols[c].revision=a.revision)})},a.moveSymbolsToGroup=function(b,c){var d=e.find(a.groups,{id:c.id});e.forEach(b,function(b){var f=e.find(a.groups,{id:b.group}),g=e.findIndex(f.symbols,{id:b.id});f.symbols.splice(g,1),b.group=c.id,d.symbols.push(b)})},a.deleteSymbol=function(b){c.Resource["delete"](a.project.id,b).then(function(){f.success("Symbol <strong>"+b.name+"</strong> deleted"),a.removeSymbols([b])
})["catch"](function(a){f.danger("<p><strong>Deleting symbol failed</strong></p>"+a.data.message)})},a.deleteSelectedSymbols=function(){c.Resource.deleteSome(a.project.id,a.selectedSymbols).then(function(){f.success("Symbols deleted"),a.removeSymbols(a.selectedSymbols)})["catch"](function(a){f.danger("<p><strong>Deleting symbols failed</strong></p>"+a.data.message)})},a.addGroup=function(b){a.groups.push(b)},a.updateGroup=function(b){e.find(a.groups,{id:b.id}).name=b.name},a.toggleCollapseAllGroups=function(){a.groupsCollapsed=!a.groupsCollapsed;for(var b=0;b<a.groups.length;b++)a.groups[b]._collapsed=a.groupsCollapsed}}angular.module("ALEX.controller").controller("SymbolsController",a),a.$inject=["$scope","SessionService","Symbol","SymbolGroup","_","ToastService"]}(),function(){"use strict";function a(a,b,c,d,e){var f=b.project.get();a.groups=[],a.allSymbols=[],c.Resource.getAll(f.id,{embedSymbols:!0}).then(function(b){a.groups=b,a.allSymbols=_.flatten(_.pluck(a.groups,"symbols"))}),a.getDownloadableSymbols=function(){var b=angular.copy(d.getSelected(a.allSymbols));return d.removeSelection(b),b=_.sortBy(b,function(a){return a.id}),_.forEach(b,function(a){delete a.revision,delete a.project,delete a.group,delete a.hidden,delete a.id,_.forEach(a.actions,function(a){a.type===e.EXECUTE_SYMBOL&&(a.symbolToExecute.revision=1)})}),b}}angular.module("ALEX.controller").controller("SymbolsExportController",a),a.$inject=["$scope","SessionService","SymbolGroup","SelectionService","actionTypes"]}(),function(){"use strict";function a(a,b,c,d,e){var f=d.project.get();a.revisions=[],a.latestRevision=null,function(){angular.isDefined(b.symbolId)&&c.Resource.getRevisions(f.id,b.symbolId).then(function(b){a.latestRevision=b[b.length-1],a.revisions=b})["catch"](function(){})}(),a.restoreRevision=function(b){var d=a.latestRevision.copy();d.name=b.name,d.abbreviation=b.abbreviation,d.actions=b.actions,c.Resource.update(f.id,d).then(function(c){e.success("Updated symbol to revision <strong>"+b.revision+"</strong>"),a.revisions.push(c),a.latestRevision=c})["catch"](function(a){e.danger("<p><strong>Update to revision failed</strong></p>"+a.data.message)})}}angular.module("ALEX.controller").controller("SymbolsHistoryController",a),a.$inject=["$scope","$stateParams","Symbol","SessionService","ToastService"]}(),function(){"use strict";function a(a,b,c,d,e){var f=b.project.get();a.symbols=[],a.selectedSymbols=[],a.fileLoaded=function(b){try{a.$apply(function(){a.symbols=c.buildSome(angular.fromJson(b))})}catch(d){e.danger("<p><strong>Loading json file failed</strong></p>"+d)}},a.uploadSelectedSymbols=function(){if(a.selectedSymbols.length>0){var b=angular.copy(a.selectedSymbols);d.forEach(b,function(a){delete a._collapsed,delete a._selected}),c.Resource.createSome(f.id,b).then(function(b){e.success("Symbols uploaded"),d.forEach(b,function(b){d.remove(a.symbols,{name:b.name})})})["catch"](function(a){e.danger("<p><strong>Symbol upload failed</strong></p>"+a.data.message)})}},a.updateSymbol=function(b,c){var f;if(!angular.equals(b,c)){if(b.name!==c.name&&b.abbreviation===c.abbreviation){if(d.where(a.symbols,{name:b.name}).length>0)return void e.danger("Name <strong>"+b.name+"</strong> already exists")}else if(b.abbreviation!==c.abbreviation&&b.name===c.name&&d.where(a.symbols,{abbreviation:b.abbreviation}).length>0)return void e.danger("Abbreviation <strong>"+b.abbreviation+"</strong> already exists");f=d.find(a.symbols,{name:c.name}),f.name=b.name,f.abbreviation=b.abbreviation}}}angular.module("ALEX.controller").controller("SymbolsImportController",a),a.$inject=["$scope","SessionService","Symbol","_","ToastService"]}(),function(){"use strict";function a(a,b,c,d,e){var f=b.project.get();a.symbols=[],a.selectedSymbols=[],function(){c.Resource.getAll(f.id,{deleted:!0}).then(function(b){a.symbols=b})}(),a.recoverSymbol=function(b){c.Resource.recover(f.id,b).then(function(b){e.success("Symbol "+b.name+" recovered"),d.remove(a.symbols,{id:b.id})})["catch"](function(a){e.danger("<p><strong>Error recovering symbol "+b.name+"!</strong></p>"+a.data.message)})},a.recoverSelectedSymbols=function(){a.selectedSymbols.length>0&&c.Resource.recoverSome(f.id,a.selectedSymbols).then(function(){e.success("Symbols recovered"),d.forEach(a.selectedSymbols,function(b){d.remove(a.symbols,{id:b.id})}),a.selectedSymbols=[]})["catch"](function(a){e.danger("<p><strong>Error recovering symbols!</strong></p>"+a.data.message)})}}angular.module("ALEX.controller").controller("SymbolsTrashController",a),a.$inject=["$scope","SessionService","Symbol","_","ToastService"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/action-create-modal.html",controller:"ActionCreateModalController",resolve:{modalData:function(){return{addAction:function(a){null!==a&&c.onCreated()(a)}}}}});d.result.then(function(a){c.onCreated()(a)})}d.on("click",e)}return{restrict:"A",scope:{onCreated:"&"},link:c}}angular.module("ALEX.directives").directive("actionCreateModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/action-edit-modal.html",controller:"ActionEditModalController",resolve:{modalData:function(){return{action:c.action}}}});d.result.then(function(a){c.onUpdated()(a)})}d.on("click",e)}return{restrict:"A",scope:{action:"=",onUpdated:"&"},link:c}}angular.module("ALEX.directives").directive("actionEditModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b,c,d,e){function f(f,g){function h(b){function c(b,f){return b.children||null!==f?void(0!==b.children.length&&(a.find(d,b.discriminator)||d.push(b.discriminator),null!==f&&e.push({from:f.discriminator,to:b.discriminator,label:b.edgeLabel}),a.forEach(b.children,function(a){a.data&&(d.push(a.data),e.push({from:b.discriminator,to:a.data,label:a.edgeLabel}))}),a.forEach(b.children,function(a){a.discriminator&&c(a,b)}))):void d.push(b.data)}var d=[],e=[];return c(b,null),{nodes:d,edges:e}}function i(b){var e=new d.Graph({directed:!0});return e.setGraph({}),a.forEach(b.nodes,function(a){e.setNode(a,{shape:"q"===a[0]?"rect":"circle",label:a,width:25,style:"fill: #fff; stroke: #000; stroke-width: 1",labelStyle:m})}),a.forEach(b.edges,function(a){e.setEdge(a.from,a.to,{lineInterpolate:"basis",style:"stroke: rgba(0, 0, 0, 0.3); stroke-width: 3; fill:none",label:a.label,labelStyle:l})}),c.dagre.layout(e,{}),e}function j(d){function f(){o.attr("transform","translate("+j.translate()+") scale("+j.scale()+")")}function h(){n.attr("width",p.clientWidth),n.attr("height",p.clientHeight)}(new c.render)(o,d);var i=(p.clientWidth-d.graph().width)/2;o.attr("transform","translate("+i+", 100)"),a.forEach(g.find("svg")[0].querySelectorAll(".edgePath"),function(a){a.insertBefore(a.childNodes[1],a.firstChild)});var j=b.behavior.zoom().scaleExtent([.1,10]).translate([(p.clientWidth-d.graph().width)/2,100]).on("zoom",f);j(n),angular.element(e).on("resize",h),h(),window.setTimeout(function(){window.dispatchEvent(new Event("resize"))},100)}var k="display: inline; font-weight: bold; line-height: 1; text-align: center; white-space: nowrap; vertical-align: baseline;",l=k+"font-size: 10px",m=k+"font-size: 12px",n=b.select(g.find("svg")[0]),o=b.select(g.find("svg").find("g")[0]),p=g[0].parentNode;f.$watch("data",function(a){if(angular.isDefined(a)){var b=angular.fromJson(a),c=h(b),d=i(c);j(d)}})}return{scope:{data:"="},template:"<svg><g></g></svg>",link:f}}angular.module("ALEX.directives").directive("discriminationTree",a),a.$inject=["_","d3","dagreD3","graphlib","$window"]}(),function(){"use strict";function a(){function a(a,b,c){b.on("click",function(){var a=0;c.dispatchResize&&angular.isNumber(parseInt(c.dispatchResize))&&(a=parseInt(c.dispatchResize)),window.setTimeout(function(){window.dispatchEvent(new Event("resize"))},a)})}return{restrict:"A",link:a}}angular.module("ALEX.directives").directive("dispatchResize",a)}(),function(){"use strict";function a(a){function b(b,c){c.on("click",function(){if(angular.isDefined(b.data)){var c=b.data;angular.isFunction(b.data)&&(c=b.data()),a.downloadJson(c)}})}return{restrict:"A",scope:{data:"="},link:b}}angular.module("ALEX.directives").directive("downloadAsJson",a),a.$inject=["FileDownloadService"]}(),function(){"use strict";function a(a,b){function c(c,d,e){function f(a){for(var b="Project,Test No,Start Time,Step No,Algorithm,Eq Oracle,|Sigma|,#MQs,#EQs,#Symbol Calls,Duration (ms)\n",c=0;c<a.length;c++)b+=a[c].project+",",b+=a[c].testNo+",",b+='"'+a[c].statistics.startTime+'",',b+=a[c].stepNo+",",b+=a[c].configuration.algorithm+",",b+=a[c].configuration.eqOracle.type+",",b+=a[c].configuration.symbols.length+",",b+=a[c].statistics.mqsUsed+",",b+=a[c].statistics.eqsUsed+",",b+=a[c].statistics.symbolsUsed+",",b+=a[c].statistics.duration+"\n";return b}d.on("click",function(){angular.isDefined(c.results)&&(angular.isDefined(e.complete)?b.Resource.getComplete(c.results[0].project,c.results[0].testNo).then(function(b){a.downloadCSV(f(b))}):a.downloadCSV(f(c.results)))})}return{restrict:"A",scope:{results:"="},link:c}}angular.module("ALEX.directives").directive("downloadLearnerResultsAsCsv",a),a.$inject=["FileDownloadService","LearnResult"]}(),function(){"use strict";function a(a){function b(b,c){c.on("click",function(){var c;b.ancestorOrElement&&(c=document.querySelector(b.ancestorOrElement),null!==c&&"svg"===c.nodeName.toLowerCase()?a.downloadSVG(c):(c=c.querySelector("svg"),null!==c&&a.downloadSVG(c)))})}return{restrict:"A",scope:{ancestorOrElement:"@"},link:b}}angular.module("ALEX.directives").directive("downloadSvg",a),a.$inject=["FileDownloadService"]}(),function(){"use strict";function a(a){function b(b,c){function d(a){var b=a.querySelectorAll("thead th"),c=a.querySelectorAll("tbody tr"),d="";if(b.length>0)for(var e=0;e<b.length;e++)d+=b[e].textContent.replace(","," ")+(e===b.length-1?"\n":",");if(c.length>0)for(e=0;e<c.length;e++){var f=c[e].querySelectorAll("td");if(f.length>0)for(var g=0;g<f.length;g++)d+=f[g].textContent.replace(","," ")+(g===f.length-1?"\n":",")}return d}c.on("click",function(){var c,e;b.ancestorOrElement&&(c=document.querySelector(b.ancestorOrElement),null!==c&&"table"===c.nodeName.toLowerCase()?e=d(c):(c=c.querySelector("table"),null!==c&&(e=d(c))),angular.isDefined(e)&&a.downloadCSV(e))})}return{restrict:"A",scope:{ancestorOrElement:"@"},link:b}}angular.module("ALEX.directives").directive("downloadTableAsCsv",a),a.$inject=["FileDownloadService"]}(),function(){"use strict";function a(){function a(a,b,c,d){b.on("mouseenter",function(){a.$apply(function(){d.toggle(!0)})})}return{restrict:"A",require:"dropdown",link:a}}angular.module("ALEX.directives").directive("dropdownHover",a)}(),function(){"use strict";function a(){function a(a,b){function c(a){for(var b=0;b<a.length;b++)d.readAsText(a[b])}var d=new FileReader;d.onload=function(b){angular.isDefined(a.onLoaded)&&a.onLoaded()(b.target.result)},b.on("dragover",function(a){a.preventDefault(),a.stopPropagation(),a.dataTransfer.dropEffect="copy"}),b.on("dragenter",function(){b[0].style.outline="2px solid rgba(0,0,0,0.2)"}).on("dragleave",function(){b[0].style.outline="0"}),b.on("drop",function(a){a.preventDefault(),a.stopPropagation(),b[0].style.outline="0",c(a.dataTransfer.files)})}return{restrict:"A",scope:{onLoaded:"&"},link:a}}angular.module("ALEX.directives").directive("fileDropzone",a)}(),function(){"use strict";function a(){function a(a,b){function c(a){for(var b=a.target.files,c=0;c<b.length;c++)d.readAsText(b[c])}var d=new FileReader;d.onload=function(b){angular.isDefined(a.onLoaded)&&a.onLoaded()(b.target.result)},b.on("click",function(){var a=document.createElement("input");a.setAttribute("type","file"),a.addEventListener("change",c,!1),a.click()})}return{restrict:"A",scope:{onLoaded:"&"},link:a}}angular.module("ALEX.directives").directive("fileUploadButton",a)}(),function(){"use strict";function a(a){function b(b,c){function d(){var a=e.offsetWidth,d=e.offsetHeight;b.asStyle?(c[0].style.width=a+"px",c[0].style.height=d+"px"):(c[0].setAttribute("width",a),c[0].setAttribute("height",d))}var e=c.parent()[0];b.bindResize&&angular.element(a).on("resize",d),d()}return{restrict:"A",scope:{bindResize:"=",asStyle:"="},link:b}}angular.module("ALEX.directives").directive("fitParentDimensions",["$window",a])}(),function(){"use strict";function a(a){function b(b,c,d){var e=b.$eval(d.fixOnScroll);if(!angular.isUndefined(e.top)&&!angular.isUndefined(e["class"])){var f=c[0].offsetHeight,g=document.createElement("div");g.style.height=f+"px",g.style.display="none",c.after(g),angular.element(a).on("scroll",function(){a.scrollY>=e.top?c.hasClass(e["class"])||(g.style.display="block",c.addClass(e["class"])):c.hasClass(e["class"])&&(g.style.display="none",c.removeClass(e["class"]))})}}return{restrict:"A",link:b}}angular.module("ALEX.directives").directive("fixOnScroll",a),a.$inject=["$window"]}(),function(){"use strict";function a(a,b,c){function d(d,e){var f;e.on("click",function(){f=b("<html-element-picker-window></html-element-picker-window>")(d),a.find("body").prepend(f),c.open().then(function(a){angular.isDefined(d.selectorModel)&&(d.selectorModel=a.xPath),angular.isDefined(d.textModel)&&(d.textModel=a.textContent)})["finally"](function(){f.remove()})})}return{restrict:"A",scope:{selectorModel:"=model",textModel:"=text"},link:d}}function b(a){function b(a){angular.isDefined(a)?f.resolve(a):f.reject()}function c(){return f=a.defer(),f.promise}function d(a){g=a}function e(){return g}var f,g=null;return{close:b,open:c,setUrl:d,getUrl:e}}function c(a,b,c,d){function e(e,f){function g(a){for(var b=[];a.parentNode;){if(a.id){b.unshift("#"+a.id);break}if(a==a.ownerDocument.documentElement)b.unshift(a.tagName);else{for(var c=1,d=a;d.previousElementSibling;d=d.previousElementSibling,c++);b.unshift(a.tagName+":nth-child("+c+")")}a=a.parentNode}return b.join(" > ")}function h(a){return m==a.target?!1:(null!=m&&(m.style.outline="0px"),m=a.target,m.style.outline="5px solid red",e.selector=g(m),e.textContent="input"===m.nodeName.toLowerCase()?m.value:m.textContent,void e.$apply())}function i(a){angular.isDefined(a)&&(a.preventDefault(),a.stopPropagation()),m.style.outline="0px",m=null,p=!1,angular.element(l.contents()[0].body).off("mousemove",h),angular.element(l.contents()[0].body).off("click",i),angular.element(document.body).off("keyup",j)}function j(a){17==a.keyCode&&i()}function k(){n=b.project.get(),o=a.location.origin+c.api.PROXY_URL,e.url=d.getUrl(),e.loadUrl()}var l=f.find("iframe"),m=null,n=null,o=null,p=!1;e.selector=null,e.textContent=null,e.url=null,e.loadUrl=function(){l[0].setAttribute("src",o+n.baseUrl+"/"+(null===e.url?"":e.url)),l[0].onload=function(){angular.element(l.contents()[0].body.getElementsByTagName("a")).on("click",function(){if(!p){var a=this;""!==a.getAttribute("href")&&"#"!==a.getAttribute("href")&&e.$apply(function(){e.url=decodeURIComponent(a.getAttribute("href")).replace(o+n.baseUrl+"/","")})}})}},e.enableSelection=function(){var a=angular.element(l.contents()[0].body);a.on("mousemove",h),a.one("click",i),angular.element(document.body).on("keyup",j),p=!0},e.close=function(){d.setUrl(e.url),d.close()},e.ok=function(){d.setUrl(e.url),d.close({xPath:e.selector,textContent:e.textContent})},k()}return{restrict:"E",scope:{},templateUrl:c.views.DIRECTIVES+"/html-element-picker.html",link:e}}angular.module("ALEX.directives").directive("htmlElementPicker",a).directive("htmlElementPickerWindow",c).factory("htmlElementPickerInstance",b),a.$inject=["$document","$compile","htmlElementPickerInstance"],c.$inject=["$window","SessionService","paths","htmlElementPickerInstance"],b.$inject=["$q"]}(),function(){function a(a,b){return a.intersect(b)}function b(b,d){var e=b.edge(d),f=b.node(d.v),g=b.node(d.w),h=e.points.slice(1,e.points.length-1);return h.unshift(a(f,h[0])),h.push(a(g,h[h.length-1])),c(e,h)}function c(a,b){var c=d3.svg.line().x(function(a){return a.x}).y(function(a){return a.y});return _.has(a,"lineInterpolate")&&c.interpolate(a.lineInterpolate),_.has(a,"lineTension")&&c.tension(Number(a.lineTension)),c(b)}function d(a,c,d,e,f,g,h){function i(c,i){function j(){k(),l(),m(),p(),q()}function k(){i.find("svg")[0].innerHTML=""}function l(){r=g.select(i.find("svg")[0]),s=r.append("g"),t=r.node().parentNode,r.style("font-family",'"Helvetica Neue",Helvetica,Arial,sans-serif'),r.style("font-size","12px"),r.style("line-height","1.42857"),r.style("color","#333"),u=new h.Graph({directed:!0,multigraph:!0}),u.setGraph(angular.isDefined(c.layoutSettings)?{edgesep:c.layoutSettings.edgesep,nodesep:c.layoutSettings.nodesep,ranksep:c.layoutSettings.ranksep}:{edgesep:25})}function m(){angular.isDefined(c.layoutSettings)&&c.layoutSettings.multigraph?n():o()}function n(){e.forEach(c.test.hypothesis.nodes,function(a){var b={shape:"circle",label:a.toString(),width:25,labelStyle:y};b.style=a===c.test.hypothesis.initNode?"fill: #B3E6B3; stroke: #5cb85c; stroke-width: 3":"fill: #fff; stroke: #000; stroke-width: 1",u.setNode(a.toString(),b)}),e.forEach(c.test.hypothesis.edges,function(a,b){var c=a.from+"-"+a.to+"|"+b;u.setEdge(a.from,a.to,{label:a.input+"/"+a.output,labeloffset:5,lineInterpolate:"basis",style:"stroke: rgba(0, 0, 0, 0.3); stroke-width: 3; fill:none",labelStyle:x},c)}),f.dagre.layout(u,{})}function o(){var a={};e.forEach(c.test.hypothesis.nodes,function(a){var b={shape:"circle",label:a.toString(),width:25,labelStyle:y};b.style=a===c.test.hypothesis.initNode?"fill: #B3E6B3; stroke: #5cb85c; stroke-width: 3":"fill: #fff; stroke: #000; stroke-width: 1",u.setNode(a.toString(),b)}),e.forEach(c.test.hypothesis.edges,function(b){a[b.from]?a[b.from][b.to]?a[b.from][b.to].push(b.input+"/"+b.output):a[b.from][b.to]=[b.input+"/"+b.output]:(a[b.from]={},a[b.from][b.to]=[b.input+"/"+b.output])}),e.forEach(a,function(a,b){e.forEach(a,function(a,c){u.setEdge(b,c,{label:a.join("\n"),labeloffset:5,lineInterpolate:"basis",style:"stroke: rgba(0, 0, 0, 0.3); stroke-width: 3; fill:none",labelStyle:x},b+""+c)})}),f.dagre.layout(u,{})}function p(){(v=new f.render)(s,u);var a=(t.clientWidth-u.graph().width)/2;s.attr("transform","translate("+a+", 100)"),e.forEach(i.find("svg")[0].querySelectorAll(".edgePath"),function(a){a.insertBefore(a.childNodes[1],a.firstChild)})}function q(){function f(){s.attr("transform","translate("+k.translate()+") scale("+k.scale()+")")}function h(){g.event.sourceEvent.stopPropagation()}function i(a){var c=g.select(this),d=u.node(a);d.x+=g.event.dx,d.y+=g.event.dy,c.attr("transform","translate("+d.x+","+d.y+")");var f=g.selectAll(".path");e.forEach(u.edges(),function(a,c){var d=b(u,a);f[0][c].setAttribute("d",d)})}function j(){r.attr("width",t.clientWidth),r.attr("height",t.clientHeight)}var k,i;angular.isDefined(c.isSelectable)&&r.selectAll(".edgeLabel tspan").on("click",function(){var a=this.innerHTML.split("/");c.$apply(function(){d.addIOPairToCurrentCounterexample(a[0],a[1])})}),k=g.behavior.zoom().scaleExtent([.1,10]).translate([(t.clientWidth-u.graph().width)/2,100]).on("zoom",f),k(r),i=g.behavior.drag().origin(function(a){return a}).on("dragstart",h).on("drag",i),r.selectAll(".node").attr("cx",function(a){return a.x}).attr("cy",function(a){return a.y}).call(i),angular.element(a).on("resize",j),window.setTimeout(function(){window.dispatchEvent(new Event("resize"))},100)}var r,s,t,u,v,w="display: inline; font-weight: bold; line-height: 1; text-align: center; white-space: nowrap; vertical-align: baseline;",x=w+"font-size: 10px",y=w+"font-size: 12px";c.$watch("test",function(a){angular.isDefined(a)&&null!=a&&j()}),c.$watch("layoutSettings",function(a){angular.isDefined(a)&&j()})}return{scope:{test:"=",layoutSettings:"=",isSelectable:"@"},templateUrl:c.views.DIRECTIVES+"/hypothesis.html",link:i}}angular.module("ALEX.directives").directive("hypothesis",d),d.$inject=["$window","paths","CounterExampleService","_","dagreD3","d3","graphlib"]}(),function(){"use strict";function a(a,b){function c(c,d){d.on("click",function(){var d=a.open({templateUrl:b.views.MODALS+"/hypothesis-layout-settings-modal.html",controller:"HypothesisLayoutSettingsController",resolve:{modalData:function(){return{layoutSettings:c.layoutSettings}}}});d.result.then(function(a){c.layoutSettings=a})})}return{restrict:"A",scope:{layoutSettings:"="},link:c}}angular.module("ALEX.directives").directive("hypothesisLayoutSettingsModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(){function a(a,b){this.getPanels=function(){return a.panels},this.closePanelAt=function(c){a.panels[c]=null,b(function(){a.panels.splice(c,1)},0),b(function(){window.dispatchEvent(new Event("resize"))},100)},a.addPanel=function(){a.panels.push(null)}}var b='<div style="position: absolute; top: 0; bottom: 0; width: 100%;">   <div ng-click="addPanel()" style="position: absolute; right: 0; top: 0; bottom: 0; width: 40px; background: #f2f2f2; border-left: 1px solid #e7e7e7"></div>   <div style="position: absolute; left: 0; top: 0; bottom: 0; right: 40px; background: #fff" ng-transclude></div></div>';return{template:b,transclude:!0,scope:{panels:"=panelManager"},controller:["$scope","$timeout",a]}}function b(){function a(a,b,c,d){function e(){f.style.width=100/a.panels.length+"%",f.style.left=100/a.panels.length*a.index+"%"}var f=b.children()[0];a.panels=d.getPanels(),a.$watch("panels.length",e),e()}var b='<div class="panel" style="position: absolute; top: 0; bottom: 0; width: 100%;" ng-transclude></div>';return{require:"^panelManager",template:b,transclude:!0,link:a,scope:{index:"=panelIndex"}}}angular.module("ALEX.directives").directive("panelManager",a),angular.module("ALEX.directives").directive("panel",b)}(),function(){"use strict";function a(a){function b(a){var b=parseInt(a.length);a.$watch("length",function(c){angular.isDefined(c)&&(b=c,a.lastStep())}),a.firstStep=function(){a.index=0},a.previousStep=function(){a.index-1<0?a.lastStep():a.index--},a.nextStep=function(){a.index+1>b-1?a.firstStep():a.index++},a.lastStep=function(){a.index=b-1}}return{templateUrl:a.views.DIRECTIVES+"/index-browser.html",scope:{length:"@",index:"="},link:b}}angular.module("ALEX.directives").directive("indexBrowser",a),a.$inject=["paths"]}(),function(){function a(a,b){function c(c,d){function e(){angular.isDefined(c.result)&&a.open({templateUrl:b.views.MODALS+"/learn-result-details-modal.html",controller:"LearnResultDetailsModalController",resolve:{modalData:function(){return{result:c.result}}}})}d.on("click",e)}return{restrict:"A",scope:{result:"="},link:c}}angular.module("ALEX.directives").directive("learnResultDetailsModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(a){a.modes={HYPOTHESIS:0,INTERNAL:1},a.learnAlgorithms=b,a.layoutSettings,a.mode=a.modes.HYPOTHESIS,a.pointer=a.results.length-1,a.hasInternalDataStructure=function(){return angular.isDefined(a.results[a.pointer].algorithmInformation)},a.showInternalDataStructure=function(){a.mode=a.modes.INTERNAL},a.showHypothesis=function(){a.mode=a.modes.HYPOTHESIS}}return{scope:{results:"=",index:"@"},transclude:!0,templateUrl:a.views.DIRECTIVES+"/learn-results-panel.html",link:c}}function b(a){function b(a,b,c,d){a.close=function(){d.closePanelAt(a.index)}}return{require:"^panelManager",scope:{results:"=",index:"@"},templateUrl:a.views.DIRECTIVES+"/learn-results-slideshow-panel.html",link:b}}angular.module("ALEX.directives").directive("learnResultsPanel",a).directive("learnResultsSlideshowPanel",b),a.$inject=["paths","learnAlgorithms"],b.$inject=["paths"]}(),function(){"use strict";function a(a,b){function c(c,d){d.on("click",function(){var d=a.open({templateUrl:b.views.MODALS+"/learn-setup-settings-modal.html",controller:"LearnSetupSettingsModalController",resolve:{modalData:function(){return{learnConfiguration:c.learnConfiguration}}}});d.result.then(function(a){angular.isDefined(c.onOk)&&c.onOk()(a)})})}return{restrict:"A",scope:{learnConfiguration:"=",onOk:"&"},link:c}}angular.module("ALEX.directives").directive("learnSetupSettingsModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(b,c){b.hasPendingRequests=function(){return a.pendingRequests.length>0},b.$watch(b.hasPendingRequests,function(a){c[0].style.display=a?"block":"none"})}return{scope:{},templateUrl:b.views.DIRECTIVES+"/load-screen.html",link:c}}angular.module("ALEX.directives").directive("loadScreen",a),a.$inject=["$http","paths"]}(),function(){"use strict";function a(a,b,c){function d(a,d){function e(a){a.stopPropagation(),g.toggleClass(h)}var f=angular.element(d[0].getElementsByClassName("navbar-menu-handle")),g=angular.element(d[0].getElementsByClassName("navbar-offscreen")),h="show";a.project=c.project.get(),function(){f.on("click",e),a.$on("project.opened",function(){a.project=c.project.get()}),a.$on("project.closed",function(){a.project=null})}(),a.closeProject=function(){c.project.remove(),b.go("home")}}return{scope:{},templateUrl:a.views.DIRECTIVES+"/navigation.html",link:d}}angular.module("ALEX.directives").directive("navigation",a),a.$inject=["paths","$state","SessionService"]}(),function(){"use strict";function a(a){function b(a){function b(){a.table={header:[],body:{s1:[],s2:[]}};var b=a.data.split("\n"),c=0;if(b.length>1)for(var d=0;d<b.length-1;d++)if(new RegExp("^(\\+\\=+)+\\+$").test(b[d]))c++;else if(d%2===1){b[d]=b[d].split("|"),b[d].shift(),b[d].pop();for(var e=0;e<b[d].length;e++)b[d][e]=b[d][e].trim();1===d?a.table.header=b[d]:2===c?a.table.body.s1.push(b[d]):a.table.body.s2.push(b[d])}}a.table=null,a.$watch("data",function(a){angular.isDefined(a)&&b()})}return{restrict:"E",scope:{data:"="},link:b,templateUrl:a.views.DIRECTIVES+"/observation-table.html"}}angular.module("ALEX.directives").directive("observationTable",a),a.$inject=["paths"]}(),function(){"use strict";function a(){function a(a,b){b.on("change",function(){var b=this,c=a.items();angular.isFunction(c)&&(c=c()),a.$apply(function(){for(var a=0;a<c.length;a++)c[a]._selected=b.checked})})}return{restrict:"A",scope:{items:"&"},link:a}}function b(){return{transclude:!0,template:' <div class="selectable-list-item">               <div class="selectable-list-control">                   <input type="checkbox">               </div>               <div class="selectable-list-content" ng-transclude></div>           </div>'}}angular.module("ALEX.directives").directive("selectionCheckboxAll",a).directive("selectableListItem",b)}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-create-modal.html",controller:"SymbolCreateModalController",resolve:{modalData:function(){return{projectId:c.projectId}}}});d.result.then(function(a){c.onCreated()(a)})}d.on("click",e)}return{restrict:"A",scope:{projectId:"@",onCreated:"&"},link:c}}angular.module("ALEX.directives").directive("symbolCreateModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-edit-modal.html",controller:"SymbolEditModalController",resolve:{modalData:function(){return{symbol:c.symbol.copy(),updateOnServer:c.updateOnServer}}}});d.result.then(function(a){c.onUpdated()(a["new"],a.old)})}d.on("click",e)}return{restrict:"A",scope:{symbol:"=",onUpdated:"&",updateOnServer:"="},link:c}}angular.module("ALEX.directives").directive("symbolEditModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-group-create-modal.html",controller:"SymbolGroupCreateModalController",resolve:{modalData:function(){return{projectId:c.projectId}}}});d.result.then(function(a){c.onCreated()(a)})}d.on("click",e)}return{restrict:"A",scope:{projectId:"@",onCreated:"&"},link:c}}angular.module("ALEX.directives").directive("symbolGroupCreateModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-group-edit-modal.html",controller:"SymbolGroupEditModalController",resolve:{modalData:function(){return{group:c.group}}}});d.result.then(function(a){"updated"===a.status?c.onUpdated()(a.newGroup,a.oldGroup):"deleted"===a.status&&c.onDeleted()(a.group)})}d.on("click",e)}return{restrict:"A",scope:{group:"=",onUpdated:"&",onDeleted:"&"},link:c}}angular.module("ALEX.directives").directive("symbolGroupEditModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){d.on("click",function(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-move-modal.html",controller:"SymbolMoveModalController",resolve:{modalData:function(){return{symbols:c.symbols,groups:c.groups}}}});d.result.then(function(a){c.onMoved()(a.symbols,a.group)})})}return{restrict:"A",scope:{symbols:"=",groups:"=",onMoved:"&"},link:c}}angular.module("ALEX.directives").directive("symbolMoveModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){d.on("click",function(){a.open({templateUrl:b.views.MODALS+"/variables-counters-occurrence-modal.html",controller:"VariablesCountersOccurrenceModalController"})})}return{restrict:"A",link:c}}angular.module("ALEX.directives").directive("variablesCountersOccurrenceModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a){return{scope:{title:"@",subTitle:"@"},transclude:!0,templateUrl:a.views.DIRECTIVES+"/view-heading.html"}}angular.module("ALEX.directives").directive("viewHeading",a),a.$inject=["paths"]}(),function(){"use strict";function a(a){function b(a){a.title=a.widgetTitle||"Untitled",a.collapsed=a.collapsed||!1,a.toggleCollapse=function(){a.collapsed=!a.collapsed}}return{scope:{collapsed:"=",widgetTitle:"@"},templateUrl:a.views.DIRECTIVES+"/widget.html",transclude:!0,link:b}}function b(a,b,c,d,e){function f(a){function f(){a.counterExample=b.getCurrentCounterexample()}function g(){a.counterexamples=a.tmpCounterExamples}a.counterExample=[],a.tmpCounterExamples=[],a.outputAlphabet=e,a.removeInputOutputAt=function(b){a.counterExample.splice(b,1)},a.toggleOutputAt=function(b){a.counterExample[b].output=a.counterExample[b].output===e.OK?e.FAILED:e.OK},a.addCounterExample=function(){a.tmpCounterExamples.push(a.counterExample),b.resetCurrentCounterexample(),g(),f()},a.removeCounterExampleAt=function(b){a.tmpCounterExamples.splice(b,1),g()},a.selectCounterExampleAt=function(c){b.setCurrentCounterexample(a.tmpCounterExamples[c]),a.removeCounterExampleAt(c),f()},a.testCounterExample=function(){c.isCounterexample(a.counterExample).then(function(a){a?d.success("The selected word is a counterexample"):d.danger("The selected word is not a counterexample")})},f()}return{scope:{counterexamples:"="},templateUrl:a.views.DIRECTIVES+"/counterexamples-widget.html",link:f}}function c(a,b,c){function d(a){a.eqOracles=b,a.selectedEqOracle=a.learnConfiguration.eqOracle.type,a.setEqOracle=function(){a.learnConfiguration.eqOracle=c.createFromType(a.selectedEqOracle)}}return{scope:{learnConfiguration:"="},templateUrl:a.views.DIRECTIVES+"/learn-resume-settings-widget.html",link:d}}angular.module("ALEX.directives").directive("widget",a).directive("counterexamplesWidget",b).directive("learnResumeSettingsWidget",c),a.$inject=["paths"],b.$inject=["paths","CounterExampleService","LearnerService","ToastService","outputAlphabet"],c.$inject=["paths","eqOracles","EqOracle"]}(),function(){function a(a){function b(a){this.type=a,this.negated=!1,this.ignoreFailure=!1}return b.Web=function(){},b.Web.SearchForText=function(c,d){b.call(this,a.web.SEARCH_FOR_TEXT),this.value=c||null,this.regexp=d||!1},b.Web.SearchForText.prototype.toString=function(){return"Search for "+(this.regexp?"regexp":"string")+' "'+this.value+'"'},b.Web.SearchForNode=function(c,d){b.call(this,a.web.SEARCH_FOR_NODE),this.value=c||null,this.regexp=d||!1},b.Web.SearchForNode.prototype.toString=function(){return'Search for node "'+this.value+'"'+(this.regexp?"as regexp":"")
},b.Web.Clear=function(c){b.call(this,a.web.CLEAR),this.node=c||null},b.Web.Clear.prototype.toString=function(){return'Clear element "'+this.node+'"'},b.Web.Click=function(c){b.call(this,a.web.CLICK),this.node=c||null},b.Web.Click.prototype.toString=function(){return'Click on element "'+this.node+'"'},b.Web.ClickLinkByText=function(c){b.call(this,a.web.CLICK_LINK_BY_TEXT),this.value=c||null},b.Web.ClickLinkByText.prototype.toString=function(){return'Click on link with text "'+this.value+'"'},b.Web.Fill=function(c,d){b.call(this,a.web.FILL),this.node=c||null,this.value=d||null},b.Web.Fill.prototype.toString=function(){return'Fill element "'+this.node+'" with "'+this.value+'"'},b.Web.GoTo=function(c){b.call(this,a.web.GO_TO),this.url=c||null},b.Web.GoTo.prototype.toString=function(){return'Go to URL "'+this.url+'"'},b.Web.Submit=function(c){b.call(this,a.web.SUBMIT),this.node=c||null},b.Web.Submit.prototype.toString=function(){return'Submit element "'+this.node+'"'},b.Web.Select=function(c,d){b.call(this,a.web.SELECT),this.node=c||null,this.value=d||null},b.Web.Select.prototype.toString=function(){return'Select value "'+this.value+'" from select input "'+this.node+'"'},b.Rest=function(){},b.Rest.Call=function(c,d,e){b.call(this,a.rest.CALL_URL),this.method=c||null,this.url=d||null,this.data=e||null},b.Rest.Call.prototype.toString=function(){return'Make a "'+this.method+'" request to "'+this.url+'"'},b.Rest.CheckStatus=function(c){b.call(this,a.rest.CHECK_STATUS),this.status=c||null},b.Rest.CheckStatus.prototype.toString=function(){return'Check HTTP response status to be "'+this.status+'"'},b.Rest.CheckHeaderField=function(c,d,e){b.call(this,a.rest.CHECK_HEADER_FIELD),this.key=c||null,this.value=d||null,this.regexp=e||!1},b.Rest.CheckHeaderField.prototype.toString=function(){return'Check HTTP response header field "'+this.key+'" to be'+(this.regexp?" like ":" ")+'"'+this.value+'"'},b.Rest.CheckHttpBodyText=function(c,d){b.call(this,a.rest.CHECK_HTTP_BODY_TEXT),this.value=c||null,this.regexp=d||!1},b.Rest.CheckHttpBodyText.prototype.toString=function(){return"Search in the HTTP response body for "+(this.regexp?"regexp":"string")+' "'+this.value+'"'},b.Rest.CheckAttributeExists=function(c){b.call(this,a.rest.CHECK_ATTRIBUTE_EXISTS),this.attribute=this.attribute=c||null},b.Rest.CheckAttributeExists.prototype.toString=function(){return'Check if the JSON of a HTTP response has attribute "'+this.attribute+'"'},b.Rest.CheckAttributeValue=function(c,d,e){b.call(this,a.rest.CHECK_ATTRIBUTE_VALUE),this.attribute=c||null,this.value=d||null,this.regexp=e||!1},b.Rest.CheckAttributeValue.prototype.toString=function(){return'Check the JSON of a HTTP response to have attribute "'+this.attribute+'" to be'+(this.regexp?" like ":" ")+'"'+this.value+'"'},b.Rest.CheckAttributeType=function(c,d){b.call(this,a.rest.CHECK_ATTRIBUTE_TYPE),this.attribute=c||null,this.jsonType=d||null},b.Rest.CheckAttributeType.prototype.toString=function(){return'Check the JSON attribute "'+this.attribute+'" of a HTTP response to be type of "'+this.jsonType+'"'},b.Other=function(){},b.Other.Wait=function(c){b.call(this,a.other.WAIT),this.duration=c||0},b.Other.Wait.prototype.toString=function(){return"Wait for "+this.duration+"ms"},b.Other.ExecuteSymbol=function(c,d){b.call(this,a.other.EXECUTE_SYMBOL);var e={name:c||null,revision:null};this.symbolToExecute=d||{id:null,revision:null},this.setSymbol=function(a){angular.isDefined(a)&&(this.symbolToExecute={id:a.id,revision:a.revision},e.name=a.name,e.revision=a.revision)},this.getSymbol=function(){return e}},b.Other.ExecuteSymbol.prototype.toString=function(){return'Execute symbol "'+this.getSymbol().name+'", rev. '+this.symbolToExecute.revision},b.Other.IncrementCounter=function(c){b.call(this,a.other.INCREMENT_COUNTER),this.name=c||null},b.Other.IncrementCounter.prototype.toString=function(){return'Increment counter "'+this.name+'"'},b.Other.SetCounter=function(c,d){b.call(this,a.other.SET_COUNTER),this.name=c||null,this.value=d||null},b.Other.SetCounter.prototype.toString=function(){return'Set counter "'+this.name+'" to "'+this.value+'"'},b.Other.SetVariable=function(c,d){b.call(this,a.other.SET_VARIABLE),this.name=c||null,this.value=d||""},b.Other.SetVariable.prototype.toString=function(){return'Set variable "'+this.name+'" to "'+this.value+'"'},b.Other.SetVariableByJSONAttribute=function(c,d){b.call(this,a.other.SET_VARIABLE_BY_JSON_ATTRIBUTE),this.name=c||null,this.value=d||null},b.Other.SetVariableByJSONAttribute.prototype.toString=function(){return'Set variable "'+this.name+'" to the value of the JSON attribute "'+this.value+'"'},b.Other.SetVariableByNode=function(c,d){b.call(this,a.other.SET_VARIABLE_BY_NODE),this.name=c||null,this.value=d||null},b.Other.SetVariableByNode.prototype.toString=function(){return'Set variable "'+this.name+'" to the value of the element "'+this.value+'"'},b.build=function(c){var d;switch(c.type){case a.web.SEARCH_FOR_TEXT:d=new b.Web.SearchForText(c.value,c.regexp);break;case a.web.SEARCH_FOR_NODE:d=new b.Web.SearchForNode(c.value,c.regexp);break;case a.web.CLEAR:d=new b.Web.Clear(c.node);break;case a.web.CLICK:d=new b.Web.Click(c.node);break;case a.web.CLICK_LINK_BY_TEXT:d=new b.Web.ClickLinkByText(c.value);break;case a.web.FILL:d=new b.Web.Fill(c.node,c.value);break;case a.web.GO_TO:d=new b.Web.GoTo(c.url);break;case a.web.SUBMIT:d=new b.Web.Submit(c.node);break;case a.web.SELECT:d=new b.Web.Select(c.node);break;case a.rest.CALL_URL:d=new b.Rest.Call(c.method,c.url,c.data);break;case a.rest.CHECK_STATUS:d=new b.Rest.CheckStatus(c.status);break;case a.rest.CHECK_HEADER_FIELD:d=new b.Rest.CheckHeaderField(c.key,c.value,c.regexp);break;case a.rest.CHECK_HTTP_BODY_TEXT:d=new b.Rest.CheckHttpBodyText(c.value,c.regexp);break;case a.rest.CHECK_ATTRIBUTE_EXISTS:d=new b.Rest.CheckAttributeExists(c.attribute);break;case a.rest.CHECK_ATTRIBUTE_VALUE:d=new b.Rest.CheckAttributeValue(c.attribute,c.value,c.regexp);break;case a.rest.CHECK_ATTRIBUTE_TYPE:d=new b.Rest.CheckAttributeType(c.attribute,c.jsonType);break;case a.other.WAIT:d=new b.Other.Wait(c.duration);break;case a.other.EXECUTE_SYMBOL:!angular.isDefined(c.symbolToExecuteName)&&angular.isFunction(c.getSymbol)&&(c.symbolToExecuteName=c.getSymbol().name),d=new b.Other.ExecuteSymbol(c.symbolToExecuteName,c.symbolToExecute);break;case a.other.INCREMENT_COUNTER:d=new b.Other.IncrementCounter(c.name);break;case a.other.SET_COUNTER:d=new b.Other.SetCounter(c.name,c.value);break;case a.other.SET_VARIABLE:d=new b.Other.SetVariable(c.name,c.value);break;case a.other.SET_VARIABLE_BY_JSON_ATTRIBUTE:d=new b.Other.SetVariableByJSONAttribute(c.name,c.value);break;case a.other.SET_VARIABLE_BY_NODE:d=new b.Other.SetVariableByNode(c.name,c.value);break;default:return null}return d.negated=c.negated,d.ignoreFailure=c.ignoreFailure,d},b.buildSome=function(a){for(var c=[],d=0;d<a.length;d++)c.push(b.build(a[d]));return c},b.createByType=function(a){return b.build({type:a})},b}angular.module("ALEX.models").factory("Action",a),a.$inject=["actionTypes"]}(),function(){function a(a){function b(b,c,d){this.type=a.RANDOM,this.minLength=b||1,this.maxLength=c||1,this.maxNoOfTests=d||1}function c(b,c){this.type=a.COMPLETE,this.minDepth=b||1,this.maxDepth=c||1}function d(b){this.type=a.SAMPLE,this.counterExamples=b||[]}function e(e){var f;switch(e.type){case a.RANDOM:f=new b(e.minLength,e.maxLength,e.maxNoOfTests);break;case a.COMPLETE:f=new c(e.minDepth,e.maxDepth);break;case a.SAMPLE:f=new d(e.counterExamples)}return f}function f(a){return e({type:a})}return{Random:b,Complete:c,Sample:d,build:e,createFromType:f}}angular.module("ALEX.models").factory("EqOracle",a),a.$inject=["eqOracles"]}(),function(){"use strict";function a(a,b){function c(){this.symbols=[],this.maxAmountOfStepsToLearn=0,this.eqOracle=new b.Random(1,10,20),this.algorithm=a.EXTENSIBLE_LSTAR,this.resetSymbol=null}return c.prototype.toLearnResumeConfiguration=function(){return delete this.symbols,delete this.algorithm,delete this.resetSymbol,this},c.prototype.setResetSymbol=function(a){this.resetSymbol={id:a.id,revision:a.revision}},c.prototype.addSymbol=function(a){this.symbols.push({id:a.id,revision:a.revision})},c.prototype.copy=function(){return c.build(angular.copy(this))},c.build=function(a){var d=new c;return d.symbols=a.symbols,d.maxAmountOfStepsToLearn=a.maxAmountOfStepsToLearn,d.algorithm=a.algorithm,d.eqOracle=b.build(a.eqOracle),d.resetSymbol=a.resetSymbol,d},c}angular.module("ALEX.models").factory("LearnConfiguration",a),a.$inject=["learnAlgorithms","EqOracle"]}(),function(){"use strict";function a(a,b){function c(){this.configuration,this.hypothesis,this.project,this.sigma,this.stepNo,this.testNo,this.algorithmInformation,this.statistics={startTime:null,duration:null,eqsUsed:null,mqsUsed:null,symbolsUsed:null}}return c.build=function(b){var d=new c;return d.configuration=a.build(b.configuration),d.hypothesis=b.hypothesis,d.project=b.project,d.sigma=b.sigma,d.stepNo=b.stepNo,d.testNo=b.testNo,d.algorithmInformation=b.algorithmInformation,d.statistics=b.statistics,d},c.buildSome=function(a){for(var b=[],d=0;d<a.length;d++)b.push(c.build(a[d]));return b},c.Resource=new b,c.Resource.build=c.build,c.Resource.buildSome=c.buildSome,c}angular.module("ALEX.models").factory("LearnResult",a),a.$inject=["LearnConfiguration","LearnResultResource"]}(),function(){"use strict";function a(a){function b(a,b,c){this.name=a,this.baseUrl=b,this.description=c,this.id}return b.build=function(a){var c=new b(a.name,a.baseUrl,a.description);return c.id=a.id,c},b.buildSome=function(a){for(var c=[],d=0;d<a.length;d++)c.push(b.build(a[d]));return c},b.Resource=new a,b.Resource.build=b.build,b.Resource.buildSome=b.buildSome,b}angular.module("ALEX.models").factory("Project",a),a.$inject=["ProjectResource"]}(),function(){"use strict";function a(a,b){function c(a,b){this.name=a||null,this.abbreviation=b||null,this.actions=[],this.id,this.revision,this.project,this.hidden,this.group}return c.prototype.copy=function(){return c.build(angular.copy(this))},c.build=function(a){var d=new c(a.name,a.abbreviation);return d.actions=a.actions?b.buildSome(a.actions):[],d.id=a.id,d.revision=a.revision,d.project=a.project,d.hidden=a.hidden,d.group=a.group,d},c.buildSome=function(a){if(angular.isDefined(a)){for(var b=[],d=0;d<a.length;d++)b.push(c.build(a[d]));return b}return[]},c.Resource=new a,c.Resource.build=c.build,c.Resource.buildSome=c.buildSome,c}angular.module("ALEX.models").factory("Symbol",a),a.$inject=["SymbolResource","Action"]}(),function(){function a(a,b){function c(a){this.name=a||null,this.id,this.project,this.symbols}return c.prototype.copy=function(){return c.build(angular.copy(this))},c.build=function(a){var d=new c(a.name);return d.id=a.id,d.symbols=b.buildSome(a.symbols),d.project=a.project,d},c.buildSome=function(a){for(var b=[],d=0;d<a.length;d++)b.push(c.build(a[d]));return b},c.Resource=new a,c.Resource.build=c.build,c.Resource.buildSome=c.buildSome,c}angular.module("ALEX.models").factory("SymbolGroup",a),a.$inject=["SymbolGroupResource","Symbol","_"]}(),function(){"use strict";function a(a,b){function c(){}return c.prototype.getAllFinal=function(c){var d=this;return a.get(b.api.URL+"/projects/"+c+"/results").then(function(a){return d.buildSome(a.data)})},c.prototype.getFinal=function(c,d){var e=this;return a.get(b.api.URL+"/projects/"+c+"/results/"+d).then(function(a){return e.build(a.data)})},c.prototype.getComplete=function(c,d){var e=this;return a.get(b.api.URL+"/projects/"+c+"/results/"+d+"/complete").then(function(a){return a.data.shift(),e.buildSome(a.data)})},c.prototype.getSomeComplete=function(c,d){var e=d.join(",");return a.get(b.api.URL+"/projects/"+c+"/results/"+e+"/complete").then(function(a){var b=a.data;if(b.length>0){if(angular.isArray(b[0])){for(var c=0;c<b.length;c++)b[c].shift();return b}return b.shift(),[b]}return[[]]})},c.prototype["delete"]=function(a,b){this.deleteSome(a,[b])},c.prototype.deleteSome=function(c,d){var e=d.join(",");return a["delete"](b.api.URL+"/projects/"+c+"/results/"+e,{})},c.prototype.build=function(a){return a},c.prototype.buildSome=function(a){return a},c}angular.module("ALEX.resources").factory("LearnResultResource",a),a.$inject=["$http","paths"]}(),function(){"use strict";function a(a,b){function c(){}return c.prototype.all=function(){var c=this;return a.get(b.api.URL+"/projects").then(function(a){return c.buildSome(a.data)})},c.prototype.get=function(c){var d=this;return a.get(b.api.URL+"/projects/"+c).then(function(a){return d.build(a.data)})},c.prototype.create=function(c){var d=this;return a.post(b.api.URL+"/projects",c).then(function(a){return d.build(a.data)})},c.prototype.update=function(c){var d=this;return a.put(b.api.URL+"/projects/"+c.id,c).then(function(a){return d.build(a.data)})},c.prototype["delete"]=function(c){var d=this;return a["delete"](b.api.URL+"/projects/"+c.id).then(function(a){return d.build(a.data)})},c.prototype.build=function(a){return a},c.prototype.buildSome=function(a){return a},c}angular.module("ALEX.resources").factory("ProjectResource",a),a.$inject=["$http","paths"]}(),function(){function a(a,b){function c(){}return c.prototype.get=function(c,d,e){var f=this,g="";return e&&e.embedSymbols&&e.embedSymbols===!0&&(g="?embed=symbols"),a.get(b.api.URL+"/projects/"+c+"/groups/"+d+g).then(function(a){return f.build(a.data)})},c.prototype.getAll=function(c,d){var e=this,f="";return d&&d.embedSymbols&&d.embedSymbols===!0&&(f="?embed=symbols"),a.get(b.api.URL+"/projects/"+c+"/groups"+f).then(function(a){return e.buildSome(a.data)})},c.prototype.getSymbols=function(c,d){var e=this;a.get(b.api.URL+"/projects/"+c+"/groups/"+d+"/symbols").then(function(a){return e.build(a.data)})},c.prototype.create=function(c,d){var e=this;return a.post(b.api.URL+"/projects/"+c+"/groups",d).then(function(a){return e.build(a.data)})},c.prototype.update=function(c,d){var e=this;return a.put(b.api.URL+"/projects/"+c+"/groups/"+d.id,d).then(function(a){return e.build(a.data)})},c.prototype["delete"]=function(c,d){var e=this;return a["delete"](b.api.URL+"/projects/"+c+"/groups/"+d.id).then(function(a){return e.build(a.data)})},c.prototype.build=function(a){return a},c.prototype.buildSome=function(a){return a},c}angular.module("ALEX.resources").factory("SymbolGroupResource",a),a.$inject=["$http","paths"]}(),function(){"use strict";function a(a,b,c){function d(){}return d.prototype.get=function(c,d){var e=this;return a.get(b.api.URL+"/projects/"+c+"/symbols/"+d).then(function(a){return e.build(a.data)})},d.prototype.getAll=function(c,d){var e,f=this;return d&&d.deleted&&d.deleted===!0&&(e="?visibility=hidden"),a.get(b.api.URL+"/projects/"+c+"/symbols"+(e?e:"")).then(function(a){return f.buildSome(a.data)})},d.prototype.getRevisions=function(c,d){var e=this;return a.get(b.api.URL+"/projects/"+c+"/symbols/"+d+"/complete").then(function(a){return e.buildSome(a.data)})},d.prototype.create=function(c,d){var e=this;return a.post(b.api.URL+"/projects/"+c+"/symbols",d).then(function(a){return e.build(a.data)})},d.prototype.createSome=function(c,d){var e=this;return a.post(b.api.URL+"/projects/"+c+"/symbols/batch",d).then(function(a){return e.buildSome(a.data)})},d.prototype.update=function(c,d){var e=this;return a.put(b.api.URL+"/projects/"+c+"/symbols/"+d.id,d).then(function(a){return e.build(a.data)})},d.prototype.move=function(c,d,e){return a.put(b.api.URL+"/projects/"+c+"/symbols/"+d+"/moveTo/"+e,{})},d.prototype.moveSome=function(d,e,f){var g=c.pluck(e,"id").join(",");return a.put(b.api.URL+"/projects/"+d+"/symbols/batch/"+g+"/moveTo/"+f,{})},d.prototype.updateSome=function(d,e){var f=this,g=c.pluck(e,"id").join(",");return a.put(b.api.URL+"/projects/"+d+"/symbols/batch/"+g,e).then(function(a){return f.buildSome(a.data)})},d.prototype["delete"]=function(c,d){var e=this;return a.post(b.api.URL+"/projects/"+c+"/symbols/"+d.id+"/hide",{}).then(function(a){return e.build(a.data)})},d.prototype.deleteSome=function(d,e){var f=this,g=c.pluck(e,"id").join(",");return a.post(b.api.URL+"/projects/"+d+"/symbols/batch/"+g+"/hide",{}).then(function(a){return f.buildSome(a.data)})},d.prototype.recover=function(c,d){var e=this;return a.post(b.api.URL+"/projects/"+c+"/symbols/"+d.id+"/show",{}).then(function(a){return e.build(a.data)})},d.prototype.recoverSome=function(d,e){var f=this,g=c.pluck(e,"id").join(",");return a.post(b.api.URL+"/projects/"+d+"/symbols/batch/"+g+"/show",{}).then(function(a){return f.buildSome(a.data)})},d.prototype.build=function(a){return a},d.prototype.buildSome=function(a){return a},d}angular.module("ALEX.resources").factory("SymbolResource",a),a.$inject=["$http","paths","_"]}(),function(){"use strict";function a(){function a(){return e}function b(a){e=a}function c(){e=[]}function d(a,b){e.push({input:a,output:b})}var e=[];return{getCurrentCounterexample:a,setCurrentCounterexample:b,resetCurrentCounterexample:c,addIOPairToCurrentCounterexample:d}}angular.module("ALEX.services").factory("CounterExampleService",a),a.$inject=[]}(),function(){"use strict";function a(a,b){function c(c){return a.get(b.api.URL+"/projects/"+c+"/counters").then(function(a){return a.data})}function d(c,d){return a["delete"](b.api.URL+"/projects/"+c+"/counters/"+d).then(function(a){return a.data})}function e(c,d){var e=d.join(",");return a["delete"](b.api.URL+"/projects/"+c+"/counters/batch/"+e).then(function(a){return a.data})}return{getAll:c,"delete":d,deleteSome:e}}angular.module("ALEX.services").factory("CountersService",a),a.$inject=["$http","paths"]}(),function(){"use strict";function a(a){function b(a,b,c){var d=document.createElement("a");d.style.display="none",d.setAttribute("href",c),d.setAttribute("target","_blank"),d.setAttribute("download",a+"."+b),document.body.appendChild(d),d.click(),document.body.removeChild(d)}function c(b){return a.prompt("Enter a name for the "+b+" file.",{regexp:/^[a-zA-Z0-9\.\-,_]+$/,errorMsg:'The name may not be empty and only consist of letters, numbers and the symbols ",._-".'})}function d(a){c("JSON").then(function(c){var d="data:text/json;charset=utf-8,"+encodeURIComponent(angular.toJson(a));b(c,"json",d)})}function e(a){c("CSV").then(function(c){var d="data:text/csv;charset=utf-8,"+encodeURIComponent(a);b(c,"csv",d)})}function f(a){c("SVG").then(function(c){a.setAttribute("version","1.1"),a.setAttribute("xmlns","http://www.w3.org/2000/svg");var d=(new XMLSerializer).serializeToString(a),e="data:image/svg+xml;base64,\n"+window.btoa(d);b(c,"svg",e)})}return{downloadJson:d,downloadCSV:e,downloadSVG:f}}angular.module("ALEX.services").factory("FileDownloadService",a),a.$inject=["PromptService"]}(),function(){"use strict";function a(a){function b(b,c){var e=[],f=[],g={series:[{y:"val_0",color:"#4B6396",type:"column",axis:"y",id:"series_0"}],stacks:[],axes:{x:{type:"linear",key:"x"},y:{type:"linear",min:0}},lineMode:"linear",tension:.7,tooltip:{mode:"scrubber"},drawLegend:!1,drawDots:!0,columnsHGap:3},h=a.pluck(b,"statistics");switch(c){case d.MQS:f=a.pluck(h,d.MQS);break;case d.EQS:f=a.pluck(h,d.EQS);break;case d.SIGMA:f=a.map(a.pluck(b,d.SIGMA),function(a){return a.length});break;case d.SYMBOL_CALLS:f=a.pluck(h,d.SYMBOL_CALLS);break;case d.DURATION:f=a.pluck(h,d.DURATION)}for(var i=0;i<f.length;i++)e.push({x:i,val_0:f[i]});return 1===e.length&&e.push({x:1,val_1:0}),g.axes.x.labelFunction=function(a){return a%1==0&&a>=0&&a<b.length?"Test "+b[a].testNo:void 0},{data:e,options:g}}function c(b,c){var e,f,g=[],h=[],i=0,j={series:[],stacks:[],axes:{x:{type:"linear",key:"x"},y:{type:"linear",min:0}},lineMode:"linear",tension:.7,tooltip:{mode:"scrubber"},drawLegend:!0,drawDots:!0,columnsHGap:3},k=["#4B6396","#3BA3B8","#3BB877","#8ACF36","#E8E835","#F7821B","#F74F1B","#C01BF7"];switch(c){case d.MQS:a.forEach(b,function(b){h.push(a(b).pluck("statistics").pluck(d.MQS).value())});break;case d.EQS:a.forEach(b,function(b){h.push(a(b).pluck("statistics").pluck(d.EQS).value())});break;case d.SIGMA:a.forEach(b,function(b){h.push(a.map(a.pluck(b,d.SIGMA),function(a){return a.length}))});break;case d.SYMBOL_CALLS:a.forEach(b,function(b){h.push(a(b).pluck("statistics").pluck(d.SYMBOL_CALLS).value())});break;case d.DURATION:a.forEach(b,function(b){h.push(a(b).pluck("statistics").pluck(d.DURATION).value())})}for(e=0;e<h.length;e++)h[e].length>i&&(i=h[e].length);for(e=0;e<h.length;e++)if(h[e].length<i)for(f=h[e].length;i>f;f++)h[e][f]=0;for(e=0;i>e;e++){var l={x:e};for(f=0;f<h.length;f++)l["val_"+f]=h[f][e];g.push(l)}for(e=0;e<b.length;e++)j.series.push({y:"val_"+e,color:k[e%k.length],type:"area",axis:"y",id:"series_"+e,label:"Test "+b[e][0].testNo});return j.axes.x.labelFunction=function(a){return a%1==0&&a>=0&&i>a?"Step "+(a+1):void 0},{data:g,options:j}}var d={MQS:"mqsUsed",EQS:"eqsUsed",SYMBOL_CALLS:"symbolsUsed",SIGMA:"sigma",DURATION:"duration"};return{createDataFromMultipleFinalResults:b,createDataFromMultipleCompleteResults:c,properties:d}}angular.module("ALEX.services").factory("LearnerResultChartService",a),a.$inject=["_"]}(),function(){"use strict";function a(a,b){function c(c,d){return a.post(b.api.URL+"/learner/start/"+c,d)}function d(){return a.get(b.api.URL+"/learner/stop/")}function e(c,d,e){return a.post(b.api.URL+"/learner/resume/"+c+"/"+d,e)}function f(){return a.get(b.api.URL+"/learner/status/").then(function(a){return a.data})}function g(){return a.get(b.api.URL+"/learner/active").then(function(a){return a.data})}function h(){return a.post(b.api.URL+"/learner/active",{}).then(function(){return!0})}return{start:c,stop:d,resume:e,getStatus:f,isActive:g,isCounterexample:h}}angular.module("ALEX.services").factory("LearnerService",a),a.$inject=["$http","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){var e=a.open({templateUrl:b.views.MODALS+"/prompt-dialog.html",controller:"PromptDialogController",resolve:{modalData:function(){return{text:c,regexp:d.regexp,errorMsg:d.errorMsg}}}});return e.result}function d(c){var d=a.open({templateUrl:b.views.MODALS+"/confirm-dialog.html",controller:"ConfirmDialogController",resolve:{modalData:function(){return{text:c}}}});return d.result}return{prompt:c,confirm:d}}angular.module("ALEX.services").service("PromptService",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a){function b(b){return a.filter(b,function(a){return a[e]===!0})}function c(b){angular.isArray(b)||(b=[b]),a.forEach(b,function(a){delete a[e]})}function d(a){return angular.isUndefined(a._selected)?!1:a._selected}var e="_selected";return{getSelected:b,removeSelection:c,isSelected:d}}angular.module("ALEX.services").factory("SelectionService",a),a.$inject=["_"]}(),function(){"use strict";function a(a,b){function c(){var a=angular.fromJson(sessionStorage.getItem("project"));return null===a?null:b.build(a)}function d(b){sessionStorage.setItem("project",angular.toJson(b)),a.$broadcast("project.opened")}function e(){sessionStorage.removeItem("project"),a.$broadcast("project.closed")}return{project:{get:c,save:d,remove:e}}}angular.module("ALEX.services").factory("SessionService",a),a.$inject=["$rootScope","Project"]}(),function(){"use strict";function a(a){function b(b,c){a.create({"class":b,content:c,dismissButton:!0})}function c(a){b("success",a)}function d(a){b("danger",a)}function e(a){b("info",a)}return{success:c,danger:d,info:e}}angular.module("ALEX.services").service("ToastService",a),a.$inject=["ngToast"]}(),function(){"use strict";function a(){function a(a){return a.toLowerCase().split("_").join(" ").replace(/\w\S*/g,function(a){return a.charAt(0).toUpperCase()+a.substr(1).toLowerCase()})}return a}function b(a){function b(b){switch(b){case a.RANDOM:return"Random Word";case a.COMPLETE:return"Complete";case a.SAMPLE:return"Sample";default:return b}}return b}function c(a){function b(b){switch(b){case a.EXTENSIBLE_LSTAR:return"L*";case a.DHC:return"DHC";case a.TTT:return"TTT";case a.DISCRIMINATION_TREE:return"Discrimination Tree";default:return b}}return b}angular.module("ALEX.filters").filter("formatEnumKey",a).filter("formatEqOracle",b).filter("formatAlgorithm",c),b.$inject=["eqOracles"],c.$inject=["learnAlgorithms"]}();