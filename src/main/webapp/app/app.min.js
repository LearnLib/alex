/*! weblearner 2015-03-02 */
!function(){"use strict";angular.module("weblearner",["ngAnimate","ui.sortable","ui.bootstrap","ui.ace","ui.router","ngToast","draganddrop","templates-all","weblearner.controller","weblearner.resources","weblearner.directives","weblearner.services","weblearner.filters","weblearner.routes","weblearner.constants","weblearner.models"]),angular.module("weblearner.controller",[]),angular.module("weblearner.resources",[]),angular.module("weblearner.directives",[]),angular.module("weblearner.services",[]),angular.module("weblearner.filters",[]),angular.module("weblearner.routes",["weblearner.constants","templates-all","ui.router"]),angular.module("weblearner.constants",[]),angular.module("weblearner.models",[]),angular.module("weblearner").config(["ngToastProvider",function(a){a.configure({verticalPosition:"top",horizontalPosition:"center",maxNumber:1})}]).run(["$rootScope","_","SelectionService",function(a,b,c){a._=b,a.selection=c}])}(),angular.module("templates-all",["app/views/directives/counter-example-builder.html","app/views/directives/hypothesis-panel.html","app/views/directives/hypothesis.html","app/views/directives/load-screen.html","app/views/directives/navigation.html","app/views/directives/observation-table.html","app/views/directives/rest-action-create-form.html","app/views/directives/rest-action-edit-form.html","app/views/directives/web-action-create-form.html","app/views/directives/web-action-edit-form.html","app/views/directives/web-element-picker.html","app/views/modals/action-create-modal.html","app/views/modals/action-edit-modal.html","app/views/modals/hypothesis-layout-settings-modal.html","app/views/modals/modal-confirm-dialog.html","app/views/modals/modal-prompt-dialog.html","app/views/modals/modal-test-details.html","app/views/modals/modal-test-setup-settings.html","app/views/modals/symbol-create-modal.html","app/views/modals/symbol-edit-modal.html","app/views/modals/symbol-group-create-modal.html","app/views/modals/symbol-group-edit-modal.html","app/views/modals/symbol-move-modal.html","app/views/pages/about.html","app/views/pages/groups.html","app/views/pages/help.html","app/views/pages/home.html","app/views/pages/learn-results-compare.html","app/views/pages/learn-results-statistics.html","app/views/pages/learn-results.html","app/views/pages/learn-setup.html","app/views/pages/learn-start.html","app/views/pages/project-create.html","app/views/pages/project-settings.html","app/views/pages/project.html","app/views/pages/symbols-actions.html","app/views/pages/symbols-export.html","app/views/pages/symbols-history.html","app/views/pages/symbols-import.html","app/views/pages/symbols-trash.html","app/views/pages/symbols.html","app/views/pages/tools-hypotheses-view.html","app/views/widgets/widget-counter-examples.html","app/views/widgets/widget-test-resume-settings.html"]),angular.module("app/views/directives/counter-example-builder.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/counter-example-builder.html",'<div id="counter-example-builder">\n	<div class="wrapper">\n	\n		<nav class="navbar navbar-default" role="navigation">\n	        <div class="container-fluid">\n	        \n	        	<p class="navbar-text"><strong>Counter Example Builder</strong></p>\n	        \n	            <button class="btn btn-default navbar-btn pull-right" ng-click="close()"><i\n	                    class="fa fa-close"></i></button>\n	            <button class="btn btn-primary navbar-btn pull-right" ng-click="ok()" style="margin-right: 7px">ok</button>\n	            <button class="btn btn-default navbar-btn pull-right" ng-click="ok()" style="margin-right: 7px">\n	            	<i class="fa fa-eye"></i>\n	            </button>  \n	        </div>\n	    </nav>\n	    \n	    <div class="available-inputs-panel">\n	        <ul class="list-group">\n	            <li class="list-group-item" ng-repeat="input in inputs" draggable="true" effect-allowed="copy"\n	                draggable-type="custom-object" draggable-data="input">{{input}}</li>\n	        </ul>\n	    </div>\n    \n    <div class="counter-example-panel">\n\n		<div class="counter-example-list-wrapper">\n            <div class="list-group" as-sortable ng-model="ios">\n                <div class="list-group-item" ng-repeat="io in counterExample track by $index" as-sortable-item>\n\n                    <span class="text-muted pull-right" ng-click="remove($index)">\n                        <i class="fa fa-trash fa-fw"></i>\n                    </span>\n\n                    <span class="text-muted pull-right" as-sortable-item-handle style="display: inline-block; margin-right: 5px">\n                        <i class="fa fa-sort fa-fw"></i>\n                    </span>\n\n                    <div class="container-fluid clearfix" style="margin-right: 50px; padding: 0">\n\n                        <div style="width: 66%; float: left" drop="onDropInput($data, $event, $index)" drop-effect="copy"\n                             drop-accept="\'json/custom-object\'">\n                            <div class="counter-example-input">{{io.input}}</div>\n                        </div>\n\n                        <div style="width: 34%; float: left">\n                            <select class="form-control">\n                            	<option>OK</option>\n                            	<option>FAILED</option>\n                            </select>\n                        </div>\n\n                    </div>\n\n                </div>\n        	</div>\n        	\n        	<button class="btn btn-default btn-sm btn-block" ng-click="add()">\n	            Add\n	        </button>\n    	</div>\n		\n    </div>\n				\n	</div>\n</div>')}]),angular.module("app/views/directives/hypothesis-panel.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/hypothesis-panel.html",'<div class="hypothesis-panel-container">\n\n    <!-- BEGIN: Subnavigation -->\n    <div class="sub-nav absolute">\n        <div class="container-fluid">\n            <div class="pull-left" style="margin-right: 16px">\n                <div class="btn-group btn-group-xs" dropdown>\n                    <button type="button" class="btn btn-default dropdown-toggle" dropdown-toggle>\n                        <i class="fa fa-bars"></i>\n                    </button>\n                    <ul class="dropdown-menu pull-left" role="menu">\n                        <li>\n                            <a href="" open-test-details-modal test="getCurrentStep()">\n                                <i class="fa fa-info fa-fw"></i> Details\n                            </a>\n                        </li>\n                        <li class="divider"></li>\n                        <li>\n                            <a href="" download-hypothesis-as-svg="#hypothesis-{{index}}">\n                                <i class="fa fa-save fa-fw"></i>&nbsp; Save as *.svg\n                            </a>\n                            <a href="" download-as-json data="getCurrentStep().hypothesis">\n                                <i class="fa fa-save fa-fw"></i>&nbsp; Save as *.json\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                \n                <button class="btn btn-default btn-xs" open-hypothesis-layout-settings-modal layout-settings="layoutSettings[index]">\n                     	<i class="fa fa-eye fa-fw"></i> Layout\n                </button>\n            </div>\n            <div class="pull-right">\n\n                <div class="btn-group btn-group-xs">\n                    <button class="btn btn-default" ng-click="firstStep()">\n                        <i class="fa fa-angle-double-left fa-fw"></i>\n                    </button>\n                    <button class="btn btn-default" ng-click="previousStep()">\n                        <i class="fa fa-angle-left fa-fw"></i>\n                    </button>\n                    <button class="btn btn-default disabled">\n                        <span ng-bind="pointer + 1"></span>/<span ng-bind="result.length"></span>\n                    </button>\n                    <button class="btn btn-default" ng-click="nextStep()">\n                        <i class="fa fa-angle-right fa-fw"></i>\n                    </button>\n                    <button class="btn btn-default" ng-click="lastStep()">\n                        <i class="fa fa-angle-double-right fa-fw"></i>\n                    </button>\n                </div>\n\n                <button class="btn btn-xs btn-danger" panel-close-button="{{index}}">\n                    <i class="fa fa-close"></i>\n                </button>\n\n            </div>\n        </div>\n    </div>\n    <!-- END: Subnavigation -->\n\n    <div class="hypothesis-panel">\n\n        <hypothesis id="hypothesis-{{index}}" test="getCurrentStep()" layout-settings="layoutSettings[index]"></hypothesis>\n\n    </div>\n\n</div>')}]),angular.module("app/views/directives/hypothesis.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/hypothesis.html",'<div style="position: absolute; top: 0; width: 100%; bottom: 0; overflow: hidden; background: #fff;">\n    <svg class="hypothesis"></svg>\n</div>')}]),angular.module("app/views/directives/load-screen.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/load-screen.html",'<div id="load-screen">\n    <p class="text-center" id="load-screen-indicator">\n        <i class="fa fa-spin fa-3x fa-circle-o-notch"></i>\n    </p>\n</div>')}]),angular.module("app/views/directives/navigation.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/navigation.html",'<nav class="navbar navbar-application navbar-fixed-top" role="navigation">\n\n    <div class="container-fluid">\n\n        <div class="navbar-header">\n            <a class="navbar-brand" ui-sref="home"><strong>Wl</strong></a>\n        </div>\n\n        <ul class="nav navbar-nav navbar-left navbar-menu-handle">\n            <li>\n                <a href="#">\n                    <i class="fa fa-fw fa-bars"></i> Menu\n                </a>\n            </li>\n        </ul>\n\n        <div class="navbar-offscreen">\n\n            <div class="navbar-offscreen-header">\n                <a href class="pull-right navbar-menu-handle">\n                    <i class="fa fa-close" style="color: #fff"></i>\n                </a>\n            </div>\n\n            <div ng-if="!project">\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li class="dropdown" dropdown dropdown-navigation>\n                        <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                           aria-expanded="false">\n                            <span>Project</span>\n                            <span class="caret"></span>\n                        </a>\n                        <ul class="dropdown-menu" role="menu" ng-if="!project">\n                            <li><a ui-sref="project.create">Create a new project</a></li>\n                        </ul>\n                    </li>\n                </ul>\n\n            </div>\n\n            <div ng-if="project">\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li class="dropdown" dropdown dropdown-navigation>\n                        <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                           aria-expanded="false">\n                            <strong ng-bind="project.name"></strong>\n                            <span class="caret"></span>\n                        </a>\n                        <ul class="dropdown-menu" role="menu" ng-if="project">\n                            <li><a class="disabled" ui-sref="project">Overview</a></li>\n                            <li><a ui-sref="project.settings">Settings</a></li>\n                            <li class="divider"></li>\n                            <li><a href="#/" ng-click="closeProject()">Close</a></li>\n                        </ul>\n                    </li>\n                </ul>\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li class="dropdown" dropdown dropdown-navigation>\n                        <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                           aria-expanded="false">Symbols <span class="caret"></span></a>\n                        <ul class="dropdown-menu" role="menu">\n                            <li><a ui-sref="symbols">Manage Symbols</a></li>\n                            <li class="divider"></li>\n                            <li><a ui-sref="symbols.import">Import</a></li>\n                            <li><a ui-sref="symbols.export">Export</a></li>\n                        </ul>\n                    </li>\n                </ul>\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li>\n                        <a href="#" ui-sref="learn.setup" role="button"\n                           aria-expanded="false">Learn </a>\n                    </li>\n                </ul>\n\n                <ul class="nav navbar-nav navbar-left">\n                    <li class="dropdown" dropdown dropdown-navigation>\n                        <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                           aria-expanded="false">Results <span class="caret"></span></a>\n                        <ul class="dropdown-menu" role="menu">\n                            <li><a ui-sref="learn.results">View & Compare</a></li>\n                            <li class="divider"></li>\n                            <li><a ui-sref="learn.results.statistics">Statistics</a></li>\n                        </ul>\n                    </li>\n                </ul>\n\n            </div>\n\n            <ul class="nav navbar-nav navbar-right">\n                <li class="dropdown" dropdown dropdown-navigation>\n                    <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                       aria-expanded="false">App <span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a ui-sref="about">About</a></li>\n                        <li><a ui-sref="help">Help</a></li>\n                    </ul>\n                </li>\n            </ul>\n\n            <ul class="nav navbar-nav navbar-right" ng-if="!project">\n                <li class="dropdown" dropdown dropdown-navigation>\n                    <a href="#" dropdown-toggle class="dropdown-toggle" data-toggle="dropdown" role="button"\n                       aria-expanded="false">Tools <span class="caret"></span></a>\n                    <ul class="dropdown-menu" role="menu">\n                        <li><a ui-sref="tools.hypotheses">View Hypothesis from PC</a></li>\n                    </ul>\n                </li>\n            </ul>\n\n        </div>\n\n    </div>\n\n</nav>\n')}]),angular.module("app/views/directives/observation-table.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/observation-table.html","")}]),angular.module("app/views/directives/rest-action-create-form.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/rest-action-create-form.html",'<form id="rest-action-create-form" ng-submit="submitForm()">\n\n    <select class="form-control" ng-model="action.type" ng-options="k for (k,v) in actionTypes">\n        <option value="" disabled>Select an action you want to create</option>\n    </select>\n\n    <p></p>\n\n    <!-- BEGIN: CALL_URL -->\n    <div ng-if="action.type == actionTypes.CALL_URL">\n        <p class="text-muted">Make a HTTP request to an URL (relative to your projects base url)</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="url" ng-model="action.url">\n        </div>\n        <div class="form-group">\n            <select class="form-control" ng-options="m for m in [\'DELETE\', \'GET\', \'POST\', \'PUT\']" ng-model="action.method">\n                <option value="" disabled>Select a Method</option>\n            </select>\n        </div>\n        <div class="form-group">\n            <label>Data</label>\n            <div ng-model="action.data" style="border-radius: 4px; width: 100%; height: 150px; border: 1px solid #ccc" ui-ace="{useWrapMode : true, showGutter: true, theme:\'eclipse\', mode: \'json\'}"></div>\n        </div>\n    </div>\n    <!-- END: CALL_URL -->\n\n\n    <!-- BEGIN: CHECK_ATTRIBUTE_EXISTS -->\n    <div ng-if="action.type == actionTypes.CHECK_ATTRIBUTE_EXISTS">\n        <p class="text-muted">Check if a JSON attribute exists in the response body</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="json attribute, e.g. myobj.attr[1].obj" ng-model="action.attribute">\n        </div>\n    </div>\n    <!-- END: CHECK_ATTRIBUTE_EXISTS -->\n\n\n    <!-- BEGIN: CHECK_ATTRIBUTE_TYPE -->\n    <div ng-if="action.type == actionTypes.CHECK_ATTRIBUTE_TYPE">\n        <p class="text-muted">Check if a JSON attribute in the response body has a specific type</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="json attribute, e.g. myobj.attr[1].obj" ng-model="action.attribute">\n        </div>\n        <div class="form-group">\n            <select class="form-control" ng-model="action.jsonType" ng-options="t as t for t in [\'ARRAY\', \'BOOLEAN\', \'INTEGER\', \'OBJECT\', \'NULL\', \'STRING\']">\n                <option value="" disabled>Choose a JavaScript type</option>\n            </select>\n        </div>\n    </div>\n    <!-- END: CHECK_ATTRIBUTE_TYPE -->\n\n\n    <!-- BEGIN: CHECK_ATTRIBUTE_VALUE -->\n    <div ng-if="action.type == actionTypes.CHECK_ATTRIBUTE_VALUE">\n        <p class="text-muted">Check a JSON attribute of the response body to be a specific value</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="json attribute, e.g. myobj.attr[1].obj" ng-model="action.attribute">\n        </div>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="the attribute value" ng-model="action.value">\n        </div>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.regexp"> is regular expression\n            </label>\n        </div>\n    </div>\n    <!-- END: CHECK_ATTRIBUTE_VALUE -->\n\n\n    <!-- BEGIN: CHECK_HEADER_FIELD -->\n    <div ng-if="action.type == actionTypes.CHECK_HEADER_FIELD">\n        <p class="text-muted">Check a HTTP response header field to have a specific value</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="http header field, e.g. Content-Type" ng-model="action.key">\n        </div>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="http header field value, e.g. application/json" ng-model="action.value">\n        </div>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.regexp">is regular expression\n            </label>\n        </div>\n    </div>\n    <!-- END: CHECK_HEADER_FIELD -->\n\n\n    <!-- BEGIN: CHECK_HTTP_BODY_TEXT -->\n    <div ng-if="action.type == actionTypes.CHECK_HTTP_BODY_TEXT">\n        <p class="text-muted">Search for a string or a regular express in the response body of a request</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="value to search for" ng-model="action.value">\n        </div>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.regexp">\n                is regular expression\n            </label>\n        </div>\n    </div>\n    <!-- END: CHECK_HTTP_BODY_TEXT -->\n\n\n    <!-- BEGIN: CHECK_STATUS -->\n    <div ng-if="action.type == actionTypes.CHECK_STATUS">\n        <p class="text-muted">Check the HTTP response to have a specific status</p>\n        <div class="form-group">\n            <input class="form-control" type="number" placeholder="e.g. 200, 404 ..." ng-model="action.status">\n        </div>\n    </div>\n    <!-- END: CHECK_STATUS -->\n\n    <div ng-if="action.type">\n        <hr>\n        <button class="btn btn-primary btn-sm" type="submit">Create Action</button>\n    </div>\n\n</form>')}]),angular.module("app/views/directives/rest-action-edit-form.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/rest-action-edit-form.html",'<form id="rest-action-update-form" ng-submit="submitForm()">\n\n    <!-- BEGIN: CALL_URL -->\n    <div ng-if="action.type == actionTypes.CALL_URL">\n        <p class="text-muted">Make a HTTP request to an URL (relative to your projects base url)</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="url" ng-model="action.url">\n        </div>\n        <div class="form-group">\n            <select class="form-control" ng-options="m for m in [\'DELETE\', \'GET\', \'POST\', \'PUT\']" ng-model="action.method">\n                <option value="" disabled>Select a Method</option>\n            </select>\n        </div>\n        <div class="form-group">\n            <label>Data</label>\n            <div ng-model="action.data" style="border-radius: 4px; width: 100%; height: 150px; border: 1px solid #ccc" ui-ace="{useWrapMode : true, showGutter: true, theme:\'eclipse\', mode: \'json\'}"></div>\n        </div>\n    </div>\n    <!-- END: CALL_URL -->\n\n\n    <!-- BEGIN: CHECK_ATTRIBUTE_EXISTS -->\n    <div ng-if="action.type == actionTypes.CHECK_ATTRIBUTE_EXISTS">\n        <p class="text-muted">Check if a JSON attribute exists in the response body</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="json attribute, e.g. myobj.attr[1].obj" ng-model="action.attribute">\n        </div>\n    </div>\n    <!-- END: CHECK_ATTRIBUTE_EXISTS -->\n\n\n    <!-- BEGIN: CHECK_ATTRIBUTE_TYPE -->\n    <div ng-if="action.type == actionTypes.CHECK_ATTRIBUTE_TYPE">\n        <p class="text-muted">Check if a JSON attribute in the response body has a specific type</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="json attribute, e.g. myobj.attr[1].obj" ng-model="action.attribute">\n        </div>\n        <div class="form-group">\n            <select class="form-control" ng-model="action.jsonType" ng-options="t as t for t in [\'ARRAY\', \'BOOLEAN\', \'INTEGER\', \'OBJECT\', \'NULL\', \'STRING\']">\n                <option value="" disabled>Choose a JavaScript type</option>\n            </select>\n        </div>\n    </div>\n    <!-- END: CHECK_ATTRIBUTE_TYPE -->\n\n\n    <!-- BEGIN: CHECK_ATTRIBUTE_VALUE -->\n    <div ng-if="action.type == actionTypes.CHECK_ATTRIBUTE_VALUE">\n        <p class="text-muted">Check a JSON attribute of the response body to be a specific value</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="json attribute, e.g. myobj.attr[1].obj" ng-model="action.attribute">\n        </div>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="the attribute value" ng-model="action.value">\n        </div>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.regexp"> is regular expression\n            </label>\n        </div>\n    </div>\n    <!-- END: CHECK_ATTRIBUTE_VALUE -->\n\n\n    <!-- BEGIN: CHECK_HEADER_FIELD -->\n    <div ng-if="action.type == actionTypes.CHECK_HEADER_FIELD">\n        <p class="text-muted">Check a HTTP response header field to have a specific value</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="http header field, e.g. Content-Type" ng-model="action.key">\n        </div>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="http header field value, e.g. application/json" ng-model="action.value">\n        </div>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.regexp">is regular expression\n            </label>\n        </div>\n    </div>\n    <!-- END: CHECK_HEADER_FIELD -->\n\n\n    <!-- BEGIN: CHECK_HTTP_BODY_TEXT -->\n    <div ng-if="action.type == actionTypes.CHECK_HTTP_BODY_TEXT">\n        <p class="text-muted">Search for a string or a regular express in the response body of a request</p>\n        <div class="form-group">\n            <input class="form-control" type="text" placeholder="value to search for" ng-model="action.value">\n        </div>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.regexp">\n                is regular expression\n            </label>\n        </div>\n    </div>\n    <!-- END: CHECK_HTTP_BODY_TEXT -->\n\n\n    <!-- BEGIN: CHECK_STATUS -->\n    <div ng-if="action.type == actionTypes.CHECK_STATUS">\n        <p class="text-muted">Check the HTTP response to have a specific status</p>\n        <div class="form-group">\n            <input class="form-control" type="number" placeholder="e.g. 200, 404 ..." ng-model="action.status">\n        </div>\n    </div>\n    <!-- END: CHECK_STATUS -->\n\n    <hr>\n    <button class="btn btn-primary btn-sm" type="submit">Update Action</button>\n\n</form>')}]),angular.module("app/views/directives/web-action-create-form.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/web-action-create-form.html",'<form id="web-action-create-form" ng-submit="submitForm()">\n\n    <select class="form-control" ng-model="action.type" ng-options="k for (k,v) in actionTypes">\n        <option value="" disabled>Select an action you want to create</option>\n    </select>\n\n    <p></p>\n\n    <!-- BEGIN: SEARCH_FOR_TEXT -->\n    <div ng-if="action.type == actionTypes.SEARCH_FOR_TEXT">\n        <p class="text-muted">\n            Search on a page for a piece of text or a regular expression\n        </p>\n        <div class="form-group">\n            <label class="control-label">Value</label>\n            <input class="form-control" type="text" placeholder="value" ng-model="action.value">\n        </div>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.regexp"> Use Regular Expression\n            </label>\n        </div>\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.value">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: SEARCH_FOR_TEXT -->\n\n\n    <!-- BEGIN: SEARCH_FOR_NODE -->\n    <div ng-if="action.type == actionTypes.SEARCH_FOR_NODE">\n        <p class="text-muted">\n            Search an HTML element in the DOM tree of a page\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.value">\n        </div>\n\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.value">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: SEARCH_FOR_NODE -->\n\n\n    <!-- BEGIN: CLEAR -->\n    <div ng-if="action.type == actionTypes.CLEAR">\n        <p class="text-muted">\n            Clear an element (eg. input or contenteditable element)\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n        </div>\n\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.node">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: CLEAR -->\n\n\n    <!-- BEGIN: CLICK -->\n    <div ng-if="action.type == actionTypes.CLICK">\n        <p class="text-muted">\n            Click on an element\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n        </div>\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.node">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: CLICK -->\n\n\n    <!-- BEGIN: FILL -->\n    <div ng-if="action.type == actionTypes.FILL">\n        <p class="text-muted">\n            Fill an element with content (eg. input or contenteditable element)\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n        </div>\n        <div class="form-group">\n            <label class="control-label">The value to fill the element with</label>\n            <input class="form-control" type="text" placeholder="value" ng-model="action.generator">\n        </div>\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.node">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: FILL -->\n\n\n    <!-- BEGIN: GO_TO -->\n    <div ng-if="action.type == actionTypes.GO_TO">\n        <p class="text-muted">\n            Go to a url that is <strong>relative</strong> to your projects\' base url\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">Url</label>\n            <input class="form-control" type="text" placeholder="url" ng-model="action.url">\n        </div>\n    </div>\n    <!-- END: GO_TO -->\n\n\n    <!-- BEGIN: SUBMIT -->\n    <div ng-if="action.type == actionTypes.SUBMIT">\n        <p class="text-muted">\n            Submit a form\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n        </div>\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.node">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: SUBMIT -->\n\n\n    <!-- BEGIN: WAIT -->\n    <div ng-if="action.type == actionTypes.WAIT">\n        <p class="text-muted">\n            Wait for a specified amount of time before the next action will be executed\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">Time to wait (in ms)</label>\n            <input class="form-control" type="number" placeholder="time in ms" ng-model="action.duration">\n        </div>\n    </div>\n    <!-- END: WAIT -->\n\n    <div ng-if="action.type">\n        <hr>\n        <button class="btn btn-primary btn-sm" type="submit">Create Action</button>\n    </div>\n\n</form>')}]),angular.module("app/views/directives/web-action-edit-form.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/web-action-edit-form.html",'<form id="web-action-edit-form" ng-submit="submitForm()">\n\n    <!-- BEGIN: SEARCH_FOR_TEXT -->\n    <div ng-if="action.type == actionTypes.SEARCH_FOR_TEXT">\n        <p class="text-muted">\n            Search on a page for a piece of text or a regular expression\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">Value</label>\n            <input class="form-control" type="text" placeholder="value" ng-model="action.value">\n        </div>\n        <div class="checkbox">\n            <label>\n                <input type="checkbox" ng-model="action.regexp"> Use Regular Expression\n            </label>\n        </div>\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.value">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: SEARCH_FOR_TEXT -->\n\n\n    <!-- BEGIN: SEARCH_FOR_NODE -->\n    <div ng-if="action.type == actionTypes.SEARCH_FOR_NODE">\n        <p class="text-muted">\n            Search an HTML element in the DOM tree of a page\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.value">\n        </div>\n\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.value">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: SEARCH_FOR_NODE -->\n\n\n    <!-- BEGIN: CLEAR -->\n    <div ng-if="action.type == actionTypes.CLEAR">\n        <p class="text-muted">\n            Clear an element (eg. input or contenteditable element)\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n        </div>\n\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.node">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: CLEAR -->\n\n\n    <!-- BEGIN: CLICK -->\n    <div ng-if="action.type == actionTypes.CLICK">\n        <p class="text-muted">\n            Click on an element\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n        </div>\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.node">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: CLICK -->\n\n\n    <!-- BEGIN: FILL -->\n    <div ng-if="action.type == actionTypes.FILL">\n        <p class="text-muted">\n            Fill an element with content (eg. input or contenteditable element)\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n        </div>\n        <div class="form-group">\n            <label class="control-label">The value to fill the element with</label>\n            <input class="form-control" type="text" placeholder="value" ng-model="action.generator">\n        </div>\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.node">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: FILL -->\n\n\n    <!-- BEGIN: GO_TO -->\n    <div ng-if="action.type == actionTypes.GO_TO">\n        <p class="text-muted">\n            Go to a url that is <strong>relative</strong> to your projects\' base url\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">Url</label>\n            <input class="form-control" type="text" placeholder="url" ng-model="action.url">\n        </div>\n    </div>\n    <!-- END: GO_TO -->\n\n\n    <!-- BEGIN: SUBMIT -->\n    <div ng-if="action.type == actionTypes.SUBMIT">\n        <p class="text-muted">\n            Submit a form\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">CSS selector</label>\n            <input class="form-control" type="text" placeholder="CSS selector" ng-model="action.node">\n        </div>\n        <button class="btn btn-default btn-sm" open-web-element-picker url="action.url" selector="action.node">\n            <i class="fa fa-magic fa-fw"></i>&nbsp; WebPicker\n        </button>\n    </div>\n    <!-- END: SUBMIT -->\n\n\n    <!-- BEGIN: WAIT -->\n    <div ng-if="action.type == actionTypes.WAIT">\n        <p class="text-muted">\n            Wait for a specified amount of time before the next action will be executed\n        </p>\n\n        <div class="form-group">\n            <label class="control-label">Time to wait (in ms)</label>\n            <input class="form-control" type="number" placeholder="time in ms" ng-model="action.duration">\n        </div>\n    </div>\n    <!-- END: WAIT -->\n\n    <hr>\n    <button class="btn btn-primary btn-sm" type="submit">Update Action</button>\n\n</form>')
}]),angular.module("app/views/directives/web-element-picker.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/directives/web-element-picker.html",'<div ng-show="show" id="web-element-picker-wrapper">\n\n    <div id="web-element-picker">\n\n        <nav class="navbar navbar-default" role="navigation">\n            <div class="container-fluid">\n\n                <form class="navbar-form navbar-left" ng-submit="loadUrl()">\n                    <div class="form-group">\n                        <div class="input-group">\n                            <div class="input-group-addon" tooltip-placement="right" tooltip="{{project.baseUrl}}">..</div>\n                            <input type="text" class="form-control" ng-model="url" placeholder="url">\n                        </div>\n                    </div>\n                    <button type="submit" class="btn btn-default">Load</button>\n                </form>\n\n                <button class="btn btn-default navbar-btn" ng-click="enableSelection()"><i\n                        class="fa fa-magic"></i></button>\n\n                <button class="btn btn-default navbar-btn disabled" ng-show="selector != null" ng-bind="selector"></button>\n                <button class="btn btn-default navbar-btn disabled" ng-show="selector == null">\n                    No Selected Element\n                </button>\n\n                <div class="navbar navbar-nav navbar-right">\n                    <button class="btn btn-default navbar-btn pull-right" ng-click="close()"><i\n                            class="fa fa-close"></i></button>\n                    <button class="btn btn-default navbar-btn pull-right" ng-click="ok()" style="margin-right: 7px">ok\n                    </button>\n                </div>\n            </div>\n        </nav>\n\n        <div class="iframe-wrapper">\n            <iframe fit-parent-dimensions bind-resize="true"></iframe>\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/modals/action-create-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/action-create-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Create Action</h3>\n    <span class="text-muted">Create a new action for a symbol</span>\n</div>\n\n<div class="modal-body">\n\n</div>')}]),angular.module("app/views/modals/action-edit-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/action-edit-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Update Action</h3>\n    <span class="text-muted">Update an existing action for a symbol</span>\n\n</div>\n\n<div class="modal-body">\n\n</div>')}]),angular.module("app/views/modals/hypothesis-layout-settings-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/hypothesis-layout-settings-modal.html",'<div class="modal-header">\n\n    <div>\n        <h3 class="modal-title">Hypothesis Layout Settings</h3>\n        <span class="text-muted">Edit the settings for the presentation of the hypothesis</span>\n    </div>\n\n</div>\n\n<div class="modal-body">\n	\n	<div class="form-group">\n		<label>Node Separation</label>\n		<input type="number" class="form-control" placeholder="nodesep" ng-model="layoutSettings.nodesep">\n		<p class="help-block">Number of pixels that separate nodes horizontally in the layout.</p>\n	</div>\n	\n	<div class="form-group">\n		<label>Edge Separation</label>\n		<input type="number" class="form-control" placeholder="edgesep" ng-model="layoutSettings.edgesep">\n		<p class="help-block">Number of pixels that separate edges horizontally in the layout.</p>\n	</div>\n	\n	<div class="form-group">\n		<label>Rank Separation</label>\n		<input type="number" class="form-control" placeholder="ranksep" ng-model="layoutSettings.ranksep">\n		<p class="help-block">Number of pixels between each rank in the layout.</p>\n	</div>\n	\n	<div class="checkbox">\n    	<label>\n      		<input type="checkbox" ng-model="layoutSettings.multigraph"> Multigraph\n    	</label>\n  	</div>\n		\n</div>\n\n<div class="modal-footer">\n	<button class="btn btn-default btn-sm" ng-click="defaultLayoutSettings()">Default</button>\n    <button class="btn btn-primary btn-sm" ng-click="update()">Update</button>\n    <button class="btn btn-warning btn-sm" ng-click="close()">Cancel</button>\n</div>')}]),angular.module("app/views/modals/modal-confirm-dialog.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/modal-confirm-dialog.html",'<form ng-submit="ok()">\n\n	<div class="modal-body">\n	    <h4 ng-bind="text"></h4>\n	</div>\n\n    <div class="modal-footer">\n        <button type="submit" class="btn btn-primary btn-sm">Yes</button>\n        <a class="btn btn-default btn-sm" ng-click="close()">No</a>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/modal-prompt-dialog.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/modal-prompt-dialog.html",'<div class="modal-header">\n    <h3 ng-bind="text"></h3>\n</div>\n\n<form name="prompt_form" ng-submit="ok()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <input name="user_input" type="text" class="form-control" ng-model="userInput" ng-pattern="inputPattern" required>\n        </div>\n\n        <div class="alert alert-danger alert-condensed" ng-show="prompt_form.submitted">\n            <small ng-show="prompt_form.user_input.$error" ng-bind="errorMsg"></small>\n        </div>\n\n    </div>\n\n    <div class="modal-footer">\n        <button type="submit" class="btn btn-primary btn-sm">Ok</button>\n        <a class="btn btn-default btn-sm" ng-click="close()">Cancel</a>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/modal-test-details.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/modal-test-details.html",'<div class="modal-header">\n\n    <h3 class="modal-title">Test Details</h3>\n    <span class="text-muted">View some details about this test</span>\n\n</div>\n\n<div class="modal-body">\n\n    <table class="table table-condensed">\n\n        <tr class="active">\n            <td colspan="2"><strong>About This Test</strong></td>\n        </tr>\n        <tr>\n            <td>nth Test</td>\n            <td>{{test.testNo}}</td>\n        </tr>\n        <tr>\n            <td>nth Hypothesis</td>\n            <td>{{test.stepNo}}</td>\n        </tr>\n        <tr>\n            <td>Started</td>\n            <td format-data-time="test.startDate"></td>\n        </tr>\n        <tr>\n            <td>Duration</td>\n            <td>{{test.duration}} ms</td>\n        </tr>\n\n        <tr class="active">\n            <td colspan="2"><strong>Configuration</strong></td>\n        </tr>\n        <tr>\n            <td>Algorithm</td>\n            <td>{{test.configuration.algorithm}}</td>\n        </tr>\n        <tr>\n            <td>EQ Oracle</td>\n            <td>{{test.configuration.eqOracle.type}}</td>\n        </tr>\n        <tr>\n            <td>Steps to Learn</td>\n            <td>{{test.configuration.maxAmountOfStepsToLearn}}</td>\n        </tr>\n\n    </table>\n\n</div>\n\n<div class="modal-footer">\n    <button class="btn btn-primary" ng-click="ok()">Ok</button>\n</div>')}]),angular.module("app/views/modals/modal-test-setup-settings.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/modal-test-setup-settings.html",'<div class="modal-header">\n	<h3 class="modal-title">Test Settings</h3>\n	<span class="text-muted">Manually set some parameters for the\n		Test</span>\n</div>\n\n<form name="learn_config_form" ng-submit="ok()">\n\n	<div class="modal-body">\n\n		<div class="form-group">\n			<label class="control-label">Algorithm</label><br> <span\n				class="text-muted">Select an algorithm that will be used for\n				the learn process (default is L*)</span> <select class="form-control"\n				ng-model="learnConfiguration.algorithm"\n				ng-options="k for (k,v) in learnAlgorithms">\n				<option value="" disabled>select an algorithm</option>\n			</select>\n		</div>\n\n		<div class="form-group">\n			<label class="control-label">EQ Oracle</label><br> <span\n				class="text-muted">Select how counter examples should be\n				found (default is COMPLETE)</span> <select class="form-control"\n				ng-model="learnConfiguration.eqOracle.type"\n				ng-options="v for (k,v) in eqOracles">\n				<option value="" disabled>select a method</option>\n			</select>\n		</div>\n\n		<div class="form-group">\n\n			<!-- BEGIN: EQ Oracle: RANDOM -->\n			<div ng-if="learnConfiguration.eqOracle.type == eqOracles.RANDOM">\n				<p>\n					<input class="form-control" name="eq_oracle_random_min_length"\n						ng-model="learnConfiguration.eqOracle.minLength" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> min length\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_random_min_length.$dirty && learn_config_form.eq_oracle_random_min_length.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_complete_min_depth.$error.required">\n						The field must not be empty. </small>\n				</div>\n\n				<p>\n					<input class="form-control" name="eq_oracle_random_max_length"\n						ng-model="learnConfiguration.eqOracle.maxLength" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> max length\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_random_max_length.$dirty && learn_config_form.eq_oracle_random_max_length.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_random_max_length.$error.required">\n						The field must not be empty. </small>\n				</div>\n\n				<p>\n					<input class="form-control" name="eq_oracle_random_no_words"\n						ng-model="learnConfiguration.eqOracle.maxNoOfTests" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> no of random words to be generated\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_random_no_words.$dirty && learn_config_form.eq_oracle_random_no_words.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_random_no_words.$error.required">\n						The field must not be empty. </small>\n				</div>\n			</div>\n			<!-- END: EQ Oracle: RANDOM -->\n\n			<!-- BEGIN: EQ Oracle: COMPLETE -->\n			<div ng-if="learnConfiguration.eqOracle.type == eqOracles.COMPLETE">\n				<p>\n					<input class="form-control" name="eq_oracle_complete_min_depth"\n						ng-model="learnConfiguration.eqOracle.minDepth" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> min depth\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_complete_min_depth.$dirty && learn_config_form.eq_oracle_complete_min_depth.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_complete_min_depth.$error.required">\n						The field must not be empty. </small>\n				</div>\n\n				<p>\n					<input class="form-control" name="eq_oracle_complete_max_depth"\n						ng-model="learnConfiguration.eqOracle.maxDepth" type="number"\n						required min="0" style="display: inline; width: auto"\n						placeholder="0"> max depth\n				</p>\n				<div class="alert alert-danger alert-condensed"\n					ng-show="learn_config_form.eq_oracle_complete_max_depth.$dirty && learn_config_form.eq_oracle_complete_max_depth.$invalid">\n					<small\n						ng-show="learn_config_form.eq_oracle_complete_max_depth.$error.required">\n						The field must not be empty. </small>\n				</div>\n\n			</div>\n			<!-- END: EQ Oracle: COMPLETE -->\n\n		</div>\n\n		<div class="form-group">\n			<label class="control-label">Max Amount of Steps to Learn (0\n				:= never stop)</label> <input name="max_steps" required min="0"\n				ng-model="learnConfiguration.maxAmountOfStepsToLearn"\n				class="form-control" type="number" placeholder="0">\n		</div>\n		<div class="alert alert-danger alert-condensed"\n			ng-show="learn_config_form.max_steps.$dirty && learn_config_form.max_steps.$invalid">\n			<small ng-show="learn_config_form.max_steps.$error.required">\n				The field must not be empty. </small>\n		</div>\n\n	</div>\n\n	<div class="modal-footer">\n		<button class="btn btn-default" type="submit">Ok</button>\n		<a class="btn btn-warning" ng-click="cancel()">Cancel</a>\n	</div>\n\n</form>')}]),angular.module("app/views/modals/symbol-create-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-create-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Create a Symbol</h3>\n    <span class="text-muted">Create a new symbol</span>\n\n</div>\n\n<form id="symbol-create-form" name="create_symbol_form" ng-submit="createSymbol()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <label>Symbol Name</label>\n            <input class="form-control" name="name" type="text" placeholder="name" required ng-model="symbol.name">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="create_symbol_form.name.$dirty && create_symbol_form.name.$invalid">\n            <small ng-show="create_symbol_form.name.$error.required"> The field must not be empty.</small>\n        </div>\n\n        <div class="form-group">\n            <label>Symbol Abbreviation</label>\n            <input class="form-control" name="abbreviation" type="text" placeholder="abbreviation" required\n                   ng-model="symbol.abbreviation">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="create_symbol_form.abbreviation.$dirty && create_symbol_form.abbreviation.$invalid">\n            <small ng-show="create_symbol_form.abbreviation.$error.required"> The field must not be empty.</small>\n        </div>\n\n        <div class="form-group">\n            <label>Group</label>\n            <input class="form-control" type="text" list="groupNames" ng-model="selectedGroup" placeholder="Group name">\n            <datalist id="groupNames">\n                <option ng-repeat="group in groups" value="{{group.name}}"></option>\n            </datalist>\n        </div>\n\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-primary" type="submit">Create Symbol</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/symbol-edit-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-edit-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Update a Symbol</h3>\n    <span class="text-muted">Update an existing symbol</span>\n\n</div>\n\n<form id="symbol-edit-form" name="symbol_edit_form" ng-submit="updateSymbol()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <label>Symbol Name</label>\n            <input class="form-control" name="name" type="text" placeholder="name" required ng-model="symbol.name">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="symbol_edit_form.name.$dirty && symbol_edit_form.name.$invalid">\n            <small ng-show="symbol_edit_form.name.$error.required"> The field must not be empty.</small>\n        </div>\n\n        <div class="form-group">\n            <label>Symbol Abbreviation</label>\n            <input class="form-control" name="abbreviation" type="text" placeholder="abbreviation" required\n                   ng-model="symbol.abbreviation">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="symbol_edit_form.abbreviation.$dirty && symbol_edit_form.abbreviation.$invalid">\n            <small ng-show="symbol_edit_form.abbreviation.$error.required"> The field must not be empty.</small>\n        </div>\n\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-primary" type="submit">Update Symbol</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/symbol-group-create-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-group-create-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Create a Symbol Group</h3>\n    <span class="text-muted">Create a new symbol group</span>\n\n</div>\n\n<form id="symbol-group-create-form" name="create_symbol_group_form" ng-submit="createGroup()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <label>Symbol Group Name</label>\n            <input class="form-control" name="name" type="text" placeholder="name" required ng-model="group.name">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="create_symbol_group_form.name.$dirty && create_symbol_group_form.name.$invalid">\n            <small ng-show="create_symbol_group_form.name.$error.required"> The field must not be empty.</small>\n        </div>\n        <div class="alert alert-danger alert-condensed" ng-show="groupExists">\n            <small>\n                There is already a symbol group with the name "<strong ng-bind="group.name"></strong>". Please choose\n                another one.\n            </small>\n        </div>\n\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-primary" type="submit">Create Symbol Group</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/symbol-group-edit-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-group-edit-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Update a Symbol Group</h3>\n    <span class="text-muted">Update or delete a symbol group</span>\n\n</div>\n\n<form id="symbol-group-edit-form" name="create_symbol_edit_form" ng-submit="updateGroup()">\n\n    <div class="modal-body">\n\n        <div class="form-group">\n            <label>Symbol Group Name</label>\n            <input class="form-control" name="name" type="text" placeholder="name" required ng-model="group.name">\n        </div>\n        <div class="alert alert-danger alert-condensed"\n             ng-show="create_symbol_group_form.name.$dirty && create_symbol_group_form.name.$invalid">\n            <small ng-show="create_symbol_group_form.name.$error.required"> The field must not be empty.</small>\n        </div>\n        <div class="alert alert-danger alert-condensed" ng-show="groupExists">\n            <small>\n                There is already a symbol group with the name "<strong ng-bind="group.name"></strong>". Please choose\n                another one.\n            </small>\n        </div>\n\n    </div>\n\n    <div class="modal-footer">\n        <a href class="btn btn-default" ng-if="group.id !== 0" ng-click="deleteGroup()">Delete</a>\n        <button class="btn btn-primary" type="submit">Update Symbol Group</button>\n    </div>\n\n</form>')}]),angular.module("app/views/modals/symbol-move-modal.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/modals/symbol-move-modal.html",'<div class="modal-header">\n\n    <a class="btn btn-default btn-icon pull-right" ng-click="closeModal()">\n        <i class="fa fa-close fa-fw"></i>\n    </a>\n\n    <h3 class="modal-title">Move Symbols</h3>\n    <span class="text-muted">Move Symbols into another group</span>\n\n</div>\n\n<div class="modal-body">\n\n    <div class="alert alert-info alert-condensed">\n        <span ng-bind="symbols.length"></span> symbols selected\n    </div>\n\n    <ul class="list-group" style="margin-bottom: 0">\n        <li class="list-group-item" ng-repeat="group in groups"\n            ng-class="selectedGroup.name === group.name ? \'active\': \'\'"\n            ng-click="selectGroup(group)">\n            <span class="label label-default pull-right" ng-bind="group.symbols.length"></span>\n            <span ng-bind="group.name"></span>\n        </li>\n    </ul>\n\n</div>\n\n<div class="modal-footer">\n    <button class="btn btn-sm btn-primary" ng-click="moveSymbols()">Move Symbols</button>\n</div>\n\n')}]),angular.module("app/views/pages/about.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/about.html",'<div view-heading\n     title="About"\n     sub-title="Information about this application">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <h3>Authors</h3>\n\n        <p>\n            <strong>Alexander Bainczyk</strong><br>\n            <a href="mailto:alexander.bainczyk@tu-dortmund.de">\n                <i class="fa fa-envelope-o fa-fw"></i>&nbsp;\n                alexander.bainczyk@tu-dortmund.de\n            </a>\n        </p>\n\n        <p>\n            <strong>Alexander Schieweck</strong><br>\n            <a href="mailto:alexander.schieweck@tu-dortmund.de">\n                <i class="fa fa-envelope-o fa-fw"></i>&nbsp;\n                alexander.schieweck@tu-dortmund.de\n            </a>\n        </p>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/groups.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/groups.html",'<div view-heading\n     title="Symbol Groups"\n     sub-title="Manage all symbol groups">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:120,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left">\n            <button class="btn btn-primary btn-xs">\n                Create\n            </button>\n            <button class="btn btn-xs btn-default">\n                Edit\n            </button>\n            <button class="btn btn-xs btn-default">\n                Delete\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <div ng-repeat="group in groups track by $index">\n            {{group.name}}\n\n            <ul>\n                <li ng-repeat="symbol in group.symbols track by symbol.id">\n                    {{symbol.name}}\n                </li>\n            </ul>\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/help.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/help.html",'<div view-heading\n     title="Help"\n     sub-title="If you need help using this application, maybe there is some information for you here">\n</div>')}]),angular.module("app/views/pages/home.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/home.html",'<div view-heading\n     title="Home"\n     sub-title="Hello! Choose a project or create one and start learning.">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <div class="list-group project-list-group">\n\n            <div class="list-group-item" ng-if="projects.length > 0" ng-repeat="project in projects"\n                 ng-click="openProject(project)">\n                <h3 class="list-group-item-heading" ng-bind="project.name"></h3>\n\n                <p class="list-group-item-text">\n                    <span ng-bind="project.baseUrl"></span> <br>\n                    <span class="text-muted"\n                          ng-if="!project.description">There is no description for this project</span>\n                    <span class="text-muted" ng-if="project.description" ng-bind="project.description"></span>\n                </p>\n            </div>\n\n            <div class="container" ng-if="projects.length == 0">\n                <div class="alert alert-info">\n                    You haven\'t created a project yet. You can create a new one <a href="#/project/create">here</a> and\n                    start\n                    testing it.\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/learn-results-compare.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-results-compare.html",'<div panel-manager="panels">\n\n    <div panel panel-index="$index" ng-repeat="result in panels track by $index">\n\n        <div ng-if="result">\n            <hypothesis-slideshow-panel panel-index="{{$index}}" result="result"></hypothesis-slideshow-panel>\n        </div>\n\n        <div ng-if="!result" style="padding: 30px">\n\n            <ul class="list-group">\n                <li class="list-group-item" ng-repeat="result in finalTestResults"\n                    ng-click="fillPanel(result, $parent.$index)">\n\n                    <strong>Test No\n                        <span ng-bind="result.testNo"></span>\n                    </strong>,\n                    [<span ng-bind="result.configuration.algorithm"></span>]\n\n                    <br>\n\n                    <p class="text-muted">\n                        Started: <span ng-bind="(result.startTime | date : \'EEE, dd.MM.yyyy, HH:mm\')"></span>\n                    </p>\n\n                </li>\n            </ul>\n\n        </div>\n\n    </div>\n\n    <div ng-if="panels.length == 0" style="padding-top: 30px">\n        <div class="container">\n            <div class="alert alert-info">\n                Add a panel first\n            </div>\n        </div>\n    </div>\n\n</div>')}]),angular.module("app/views/pages/learn-results-statistics.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-results-statistics.html",'<div view-heading\n     title="Statistics"\n     sub-title="Have a look at some numbers we gathered for your tests">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:124,class:\'fixed\'}">\n    <div class="container" ng-if="chartDataSets.length == 0">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" select-all-items-checkbox items="tests">\n        </div>\n\n        <div class="pull-left">\n            <div class="btn-group btn-group-xs" dropdown dropdown-hover>\n                <button type="button" class="btn btn-default dropdown-toggle" dropdown-toggle>\n                    Charts\n                </button>\n                <ul class="dropdown-menu pull-left" role="menu">\n                    <li>\n                        <a href ng-click="chartFromSingleCompleteTestResult()">\n                            <i class="fa fa-line-chart fa-fw"></i> Single Complete Test\n                        </a>\n                    </li>\n                    <li>\n                        <a href ng-click="chartFromMultipleFinalTestResults()">\n                            <i class="fa fa-bar-chart fa-fw"></i> Multiple Tests\n                        </a>\n                    </li>\n                    <li>\n                        <a href ng-click="chartFromTwoCompleteTestResults()">\n                            <i class="fa fa-columns fa-fw"></i> Compare Two Complete Tests\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div class="pull-right">\n            <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                <button type="button" class="btn btn-default dropdown-toggle" dropdown-toggle>\n                    <i class="fa fa-download fa-fw"></i> Export to CSV\n                </button>\n                <ul class="dropdown-menu pull-left" role="menu">\n                    <li>\n                        <a href="" download-test-results-as-csv test-results="tests">\n                            All Final Results\n                        </a>\n                    </li>\n                    <li>\n                        <a href="" download-test-results-as-csv test-results="tests">\n                            A Single Complete Result\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container" ng-if="chartDataSets.length > 0">\n\n        <div class="pull-left">\n            <button class="btn btn-xs btn-default" ng-click="back()">\n                <i class="fa fa-list-ul fa-fw"></i> Test Results\n            </button>\n            <button class="btn btn-xs btn-default" download-canvas-as-image="test-results-chart">\n                <i class="fa fa-save fa-fw"></i> Download Diagram\n            </button>\n        </div>\n\n    </div>\n    <div class="container" ng-if="chartDataSets.length == 0">\n\n        <div selectable-list ng-model="tests">\n            <div selectable-list-item ng-repeat="test in tests">\n\n                <span class="label label-primary pull-right">\n                    Web\n                </span>\n\n                <strong>Test No\n                    <span ng-bind="test.testNo"></span>\n                </strong>,\n                [<span ng-bind="test.configuration.algorithm"></span>]\n\n                <br>\n\n                <p class="text-muted">\n                    Started: <span ng-bind="(test.startTime | date : \'EEE, dd.MM.yyyy, HH:mm\')"></span>\n                </p>\n            </div>\n        </div>\n\n    </div>\n    <div class="container" ng-if="chartDataSets.length > 0">\n\n        <hr>\n\n        <div ng-if="chartMode == chartModes.MULTIPLE_FINAL_TEST_RESULTS">\n            <div test-results-chart test-results-chart-multiple-final chart-data="chartDataSets"></div>\n        </div>\n\n        <div ng-if="chartMode == chartModes.SINGLE_COMPLETE_TEST_RESULT">\n            <div test-results-chart test-results-chart-single-complete chart-data="chartDataSets"></div>\n        </div>\n\n        <div ng-if="chartMode == chartModes.TWO_COMPLETE_TEST_RESULTS">\n            <div test-results-chart test-results-chart-two-complete chart-data="chartDataSets"></div>\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/learn-results.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-results.html",'<div view-heading\n     title="Tests"\n     sub-title="Have a look at all the tests you ran for this project">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:124,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" select-all-items-checkbox items="tests">\n        </div>\n\n        <div class="pull-left">\n            <button class="btn btn-xs btn-primary" ng-click="deleteTests()">\n                Delete\n            </button>\n            <button class="btn btn-xs btn-default">\n                Slideshow\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n\n    <div ng-if="tests.length > 0">\n        <div class="container">\n\n            <div selectable-list ng-model="tests">\n                <div selectable-list-item ng-repeat="test in (tests|typeOfWeb)">\n\n                    <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                        <button type="button" class="btn btn-default btn-icon dropdown-toggle" dropdown-toggle>\n                            <i class="fa fa-bars"></i>\n                        </button>\n                        <ul class="dropdown-menu pull-left" role="menu">\n                            <li>\n                                <a href="" open-test-details-modal test="test">\n                                    <i class="fa fa-info fa-fw"></i>&nbsp; Details\n                                </a>\n                            </li>\n                            <li>\n                                <a ui-sref="learn.results.compare({testNos: [test.testNo]})">\n                                    <i class="fa fa-code-fork fa-fw"></i>&nbsp; Hypotheses\n                                </a>\n                            </li>\n                            <li>\n                                <a href="" ng-click="deleteTest(test)">\n                                    <i class="fa fa-trash fa-fw"></i>&nbsp; Delete\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <strong>Test No\n                        <span ng-bind="test.testNo"></span>\n                    </strong>,\n                    [<span ng-bind="test.configuration.algorithm"></span>]\n\n                    <br>\n\n                    <p class="text-muted">\n                        Started: <span ng-bind="(test.startTime | date : \'EEE, dd.MM.yyyy, HH:mm\')"></span>\n                    </p>\n\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <div class="container" ng-if="tests.length == 0">\n        <div class="alert alert-info">\n            You have not run any tests yet or the active one is not finished.\n        </div>\n    </div>\n\n</div>')
}]),angular.module("app/views/pages/learn-setup.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-setup.html",'<div view-heading\n     title="Learn Setup"\n     sub-title="Include or exclude symbols & groups you want to use for the following test">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:115,class:\'fixed\'}">\n    <div class="container">\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" select-all-items-checkbox items="allSymbols">\n        </div>\n        <div class="pull-right">\n            <button class="btn btn-xs btn-default" open-test-setup-settings-modal\n                    learn-configuration="learnConfiguration" on-ok="updateLearnConfiguration">\n                <i class="fa fa-gear"></i>\n            </button>\n            <button class="btn btn-xs btn-primary" ng-click="startLearning()">\n                Start Test\n            </button>\n        </div>\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container symbol-group-list">\n        <div ng-repeat="group in groups track by group.id" class="symbol-group">\n\n            <div class="selectable-list symbol-group-header">\n                <div class="selectable-list-heading">\n                    <div class="selectable-list-control">\n                        <input type="checkbox" select-all-items-checkbox items="group.symbols">\n                    </div>\n                    <div class="selectable-list-content">\n\n                    <span class="pull-right" ng-click="group._isCollapsed = !group._isCollapsed">\n                        <i class="fa fa-fw" ng-class="group._isCollapsed ? \'fa-chevron-down\' : \'fa-chevron-right\'"></i>\n                    </span>\n\n                        <h3 class="symbol-group-title" ng-bind="group.name"\n                            ng-click="group._isCollapsed = !group._isCollapsed"></h3>\n\n                        <p class="text-muted">\n                            <span ng-bind="group.symbols.length"></span> Symbols\n                        </p>\n\n                    </div>\n                </div>\n            </div>\n\n            <div class="symbol-group-body" collapse="group._isCollapsed">\n\n                <div selectable-list ng-model="group.symbols">\n                    <div selectable-list-item ng-repeat="symbol in group.symbols">\n\n                        <a class="pull-right" ng-click="setResetSymbol(symbol)">\n                            <i class="fa" ng-class="resetSymbol == symbol ? \'fa-star\' : \'fa-star-o\'"></i>\n                        </a>\n\n                        <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]<br>\n\n                        <a ui-sref="symbols.actions({symbolId:symbol.id})">\n                            <span ng-bind="symbol.actions.length"></span> Actions <i class="fa fa-edit"></i>\n                        </a>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>')}]),angular.module("app/views/pages/learn-start.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/learn-start.html",'<div style="position: absolute; width: 100%; top: 50px; bottom: 0; overflow: auto;">\n\n    <div ng-if="active == true" class="container" style="margin-top: 54px">\n        <div class="alert alert-info">\n            <i class="fa fa-circle-o-notch fa-spin"></i>&nbsp; Application is learning ... <br>\n        </div>\n        <hr>\n        <button class="btn btn-default btn-xs pull-right" ng-click="abort()">\n            <i class="fa fa-close fa-fw"></i> Abort Learning\n        </button>\n    </div>\n\n    <div ng-if="!active && test">\n        <div class="sub-nav fixed">\n            <div class="container-fluid">\n\n                <div class="pull-left">\n                    <button class="btn btn-xs btn-default" open-test-details-modal test="test">\n                        <i class="fa fa-info fa-fw"></i> Details\n                    </button>\n                	<button class="btn btn-xs btn-default" open-hypothesis-layout-settings-modal layout-settings="layoutSettings" on-update="updateLayoutSettings">\n                		<i class="fa fa-eye fa-fw"></i> Layout\n                	</button>\n                </div>\n\n                <div class="pull-right" ng-if="isEqOracleSample">\n                    <button class="btn btn-xs btn-success" ng-click="resumeLearning()">\n                        Resume\n                    </button>\n                </div>\n\n            </div>\n\n        </div>\n\n        <div class="panel-sidebar" ng-if="isEqOracleSample">\n\n            <div widget widget-title="Configuration" collapsed="false">\n                <div widget-test-resume-settings configuration="test.configuration"></div>\n            </div>\n\n            <div widget widget-title="Counter Examples" collapsed="true">\n                <div widget-counter-examples counter-examples="test.configuration.eqOracle.counterExamples" counter-example="counterExample"></div>\n            </div>\n\n        </div>\n\n        <hypothesis test="test" counter-example="counterExample" layout-settings="layoutSettings"></hypothesis>\n    </div>\n\n</div>\n')}]),angular.module("app/views/pages/project-create.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/project-create.html",'<div view-heading\n     title="Create Project"\n     sub-title="Create a new project">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <form id="project-create-form" name="create_form" role="form" ng-submit="createProject()">\n\n            <!-- Name -->\n            <div class="form-group">\n                <label class="control-label">Name*</label>\n\n                <p class="text-muted">The name of your project</p>\n                <input name="name" type="text" class="form-control"\n                       placeholder="Enter a name for the project" ng-model="project.name" ng-required="true">\n            </div>\n            <div class="alert alert-danger alert-condensed"\n                 ng-show="create_form.name.$dirty && create_form.name.$invalid">\n                <small ng-show="create_form.name.$error.required">Name must not be empty.</small>\n            </div>\n            <!-- Name -->\n\n            <!-- Base Url -->\n            <div class="form-group">\n                <label class="control-label">Url*</label>\n\n                <p class="text-muted">The url of your website</p>\n                <input name="url" class="form-control" type="text"\n                       placeholder="Enter the url of the project" ng-model="project.baseUrl" ng-required="true"\n                       ng-pattern="/^(http://|https://).{1,}/">\n            </div>\n            <div class="alert alert-danger alert-condensed"\n                 ng-show="create_form.url.$dirty && create_form.url.$invalid">\n                <small ng-show="create_form.url.$error.required">\n                    Url must not be empty.\n                </small>\n                <small ng-show="create_form.url.$error.pattern">\n                    The url has to start with http(s):// and have a host name\n                </small>\n            </div>\n            <!-- /Base Url -->\n\n            <!-- Description -->\n            <div class="form-group">\n                <label class="control-label">Description</label>\n\n                <p class="text-muted">\n                    If you want you can describe your new project with a few words\n                </p>\n            <textarea name="description" ng-model="project.description"\n                      placeholder="Enter the description for the project"\n                      class="form-control" rows="3"></textarea>\n            </div>\n            <!-- /Description -->\n\n            <div class="form-group">\n                <button type="submit" class="btn btn-sm btn-primary">Create Project</button>\n            </div>\n\n        </form>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/project-settings.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/project-settings.html",'<div view-heading\n     title="Project Settings"\n     sub-title="Update your project and change settings">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <form id="project-edit-form" name="update_form" role="form" ng-submit="updateProject()">\n\n            <!-- Name -->\n            <div class="form-group">\n                <label class="control-label">Name*</label>\n\n                <p class="text-muted">The name of your project</p>\n                <input name="name" type="text" class="form-control"\n                       placeholder="Enter a name for the project" ng-model="project.name" ng-required="true">\n            </div>\n            <div class="alert alert-danger alert-condensed"\n                 ng-show="create_form.name.$dirty && create_form.name.$invalid">\n                <small ng-show="update_form.name.$error.required">Name must not be empty.</small>\n            </div>\n            <!-- Name -->\n\n            <!-- Base Url -->\n            <div class="form-group">\n                <label class="control-label">Url*</label>\n\n                <p class="text-muted">The url of your website</p>\n                <input name="url" class="form-control" type="text"\n                       placeholder="Enter the url of the project" ng-model="project.baseUrl" ng-required="true"\n                       ng-pattern="/^(http://|https://).{1,}/">\n            </div>\n            <div class="alert alert-danger alert-condensed"\n                 ng-show="create_form.url.$dirty && create_form.url.$invalid">\n                <small ng-show="update_form.url.$error.required">\n                    Url must not be empty.\n                </small>\n                <small ng-show="update_form.url.$error.pattern">\n                    The url has to start with http(s):// and have a host name\n                </small>\n            </div>\n            <!-- /Base Url -->\n\n            <!-- Description -->\n            <div class="form-group">\n                <label class="control-label">Description</label>\n\n                <p class="text-muted">\n                    If you want you can describe your new project with a few words\n                </p>\n            <textarea name="description" ng-model="project.description"\n                      placeholder="Enter the description for the project"\n                      class="form-control" rows="3"></textarea>\n            </div>\n            <!-- /Description -->\n\n            <div class="form-group">\n                <button type="submit" class="btn btn-sm btn-primary">Update</button>\n                <a class="btn btn-sm btn-default" ng-click="resetForm()">Reset</a>\n                <a class="btn btn-sm btn-default" ng-click="deleteProject()">Delete</a>\n            </div>\n\n        </form>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/project.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/project.html",'<div view-heading\n     title="{{project.name}} Dashboard"\n     sub-title="asdasdasd">\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        Dashboard will soon appear at this place\n\n    </div>\n</div>\n')}]),angular.module("app/views/pages/symbols-actions.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-actions.html",'<div class="view-heading">\n    <div class="container">\n        <h2 class="view-heading-title">Actions</h2>\n\n        <p class="view-heading-sub-title">\n            Create and manage the actions for symbol:\n            <strong ng-bind="symbol.name"></strong> <em>[<span ng-bind="symbol.abbreviation"></span>]</em>\n        </p>\n    </div>\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:115,class:\'fixed\'}">\n    <div class="container">\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" select-all-items-checkbox items="symbol.actions">\n        </div>\n        <div class="pull-left">\n            <button class="btn btn-xs btn-primary" open-action-create-modal symbol="symbol" on-created="addAction">\n                Create\n            </button>\n            <button class="btn btn-xs btn-default" open-action-edit-modal symbol="symbol"\n                    action="(symbol.actions | selected | first)"\n                    on-updated="updateAction"\n                    ng-class="(symbol.actions|selected).length != 1 ? \'disabled\': \'\'">\n                Edit\n            </button>\n            <button class="btn btn-xs btn-default" ng-click="deleteSelectedActions()"\n                    ng-class="(symbol.actions|selected).length == 0 ? \'disabled\': \'\'">\n                Delete\n            </button>\n        </div>\n        <div class="pull-right">\n            <button class="btn btn-success btn-xs" ng-click="saveChanges()">Save</button>\n            <button class="btn btn-default btn-xs" ng-click="revertChanges()">Reset</button>\n        </div>\n    </div>\n</div>\n\n<div class="view-body">\n\n    <div class="container">\n\n        <div ng-if="symbol.actions" as-sortable ng-model="symbol.actions">\n            <div selectable-list ng-model="symbol.actions">\n                <div selectable-list-item ng-repeat="action in symbol.actions" as-sortable-item>\n\n                    <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                        <button type="button" class="btn btn-default btn-icon dropdown-toggle" dropdown-toggle>\n                            <i class="fa fa-bars"></i>\n                        </button>\n                        <ul class="dropdown-menu pull-left" role="menu">\n                            <li>\n                                <a href open-action-edit-modal symbol="symbol" action="action"\n                                   on-updated="updateAction">\n                                    <i class="fa fa-edit fa-fw"></i> Edit\n                                </a>\n                            </li>\n                            <li>\n                                <a href ng-click="deleteAction(action)">\n                                    <i class="fa fa-trash fa-fw"></i> Delete\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n	            \n	           <span class="text-muted pull-right" as-sortable-item-handle style="margin-right: 15px; padding: 2px;">\n                    <i class="fa fa-sort fa-fw"></i>\n                </span>\n\n                    <strong ng-bind="action.type"></strong><br>\n\n                    <!-- BEGIN: Display Web Actions -->\n                    <div class="text-muted" ng-if="symbol.type == \'web\'">\n\n                        <p ng-if="action.type == webActionTypes.SEARCH_FOR_TEXT">\n                            Search for the\n                            <span ng-show="action.regexp">regexp</span>\n                            <span ng-show="!action.regexp">string</span>\n                            "{{action.value}}" on the page\n                        </p>\n\n                        <p ng-if="action.type == webActionTypes.SEARCH_FOR_NODE">\n                            Search for the element "{{action.value}}" in the DOM tree of the page\n                        </p>\n\n                        <p ng-if="action.type == webActionTypes.CLEAR">\n                            Clear the element "{{action.node}}"\n                        </p>\n\n                        <p ng-if="action.type == webActionTypes.CLICK">\n                            Click on the element "{{action.node}}"\n                        </p>\n\n                        <p ng-if="action.type == webActionTypes.FILL">\n                            Fill the element "{{action.node}}" with "{{action.generator}}"\n                        </p>\n\n                        <p ng-if="action.type == webActionTypes.GO_TO">\n                            Go to the page with the url "{{action.url}}"\n                        </p>\n\n                        <p ng-if="action.type == webActionTypes.SUBMIT">\n                            Submit the form element "{{action.node}}"\n                        </p>\n\n                        <p ng-if="action.type == webActionTypes.WAIT">\n                            Wait for {{action.duration}} ms.\n                        </p>\n\n                    </div>\n                    <!-- END: Display Web Actions -->\n\n                    <!-- BEGIN: Display Rest Actions -->\n                    <div class="text-muted" ng-if="symbol.type == \'rest\'">\n\n                        <p ng-if="action.type == restActionTypes.CALL_URL">\n                            Make a "{{action.method}}" request to "{{action.url}}"\n                        </p>\n\n                        <p ng-if="action.type == restActionTypes.CHECK_STATUS">\n                            Check http status to be "{{action.status}}"\n                        </p>\n\n                        <p ng-if="action.type == restActionTypes.CHECK_HEADER_FIELD">\n                            Check header field "{{action.key}}" to be "{{action.value}}"\n                        </p>\n\n                        <p ng-if="action.type == restActionTypes.CHECK_HTTP_BODY_TEXT">\n                            Search in the response body for "{{action.value}}"\n                        </p>\n\n                        <p ng-if="action.type == restActionTypes.CHECK_ATTRIBUTE_EXISTS">\n                            Check if response body attribute "{{action.attribute}}" exists\n                        </p>\n\n                        <p ng-if="action.type == restActionTypes.CHECK_ATTRIBUTE_VALUE">\n                            Check response body attribute "{{action.attribute}}" to be "{{action.value}}"\n                        </p>\n\n                        <p ng-if="action.type == restActionTypes.CHECK_ATTRIBUTE_TYPE">\n                            Check response body attribute "{{action.attribute}}" to be type of "{{action.jsonType}}"\n                        </p>\n\n                    </div>\n                    <!-- END: Display Rest Actions -->\n\n                </div>\n            </div>\n        </div>\n\n        <div class="alert alert-info" ng-show="symbol.actions.length == 0">\n            You haven\'t created any actions for this symbol yet.\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/symbols-export.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-export.html",'<div view-heading\n     title="Symbols Export"\n     sub-title="Export your symbols as *.json">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:124,class:\'fixed\'}">\n    <div class="container">\n\n        <div class="pull-left" style="margin-right: 16px">\n            <label>\n                <input type="checkbox" select-all-items-checkbox items="symbols.web"> Web\n            </label>\n            &nbsp;\n            <label>\n                <input type="checkbox" select-all-items-checkbox items="symbols.rest"> Rest\n            </label>\n        </div>\n\n        <div class="pull-right">\n            <button class="btn btn-xs btn-primary" download-as-json data="getSelectedSymbols">\n                <i class="fa fa-download fa-fw"></i> Download\n            </button>\n        </div>\n\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container">\n\n        <div selectable-list ng-model="symbols.web">\n            <div selectable-list-item ng-repeat="symbol in symbols.web">\n\n                <span class="label label-primary pull-right" ng-bind="symbol.type"></span>\n\n                <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]\n\n                <p class="text-muted">\n                    <span ng-bind="symbol.actions.length"></span> Actions\n                </p>\n\n            </div>\n        </div>\n\n        <div selectable-list ng-model="symbols.rest">\n            <div selectable-list-item ng-repeat="symbol in symbols.rest">\n\n                <span class="label label-warning pull-right" ng-bind="symbol.type"></span>\n\n                <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]\n\n                <p class="text-muted">\n                    <span ng-bind="symbol.actions.length"></span> Actions\n                </p>\n\n            </div>\n        </div>\n\n    </div>\n</div>')}]),angular.module("app/views/pages/symbols-history.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-history.html",'<div class="container">\n    <h2>Symbols History</h2>\n\n    <p class="muted">\n        Restore and older version of the symbol <strong>Symbol.Name</strong>\n    </p>\n    <hr>\n</div>\n\n\n<div class="container">\n    <table class="table">\n        <thead>\n        <tr>\n            <th></th>\n        </tr>\n        </thead>\n        <tbody>\n\n            <tr ng-repeat="revision in revisions">\n                <td>\n\n                    <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                        <button type="button" class="btn btn-default btn-icon dropdown-toggle" dropdown-toggle>\n                            <i class="fa fa-bars"></i>\n                        </button>\n                        <ul class="dropdown-menu pull-left" role="menu">\n                            <li>\n                                <a href ng-click="restoreRevision(revision)">\n                                    <i class="fa fa-history fa-fw"></i> Restore\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <strong ng-bind="revision.name"></strong> [<span ng-bind="revision.abbreviation"></span>]\n\n                    <p class="text-muted">\n                        <span ng-bind="revision.actions.length"></span> Actions\n                    </p>\n                </td>\n            </tr>\n\n        </tbody>\n    </table>\n</div>')}]),angular.module("app/views/pages/symbols-import.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-import.html",'<div view-heading\n     title="Symbol Upload"\n     sub-title="If you already have a *.json file with symbols, you can import them here to this project">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:124,class:\'fixed\'}"\n     ng-if="symbols.web.length > 0 || symbols.rest.length > 0">\n    <div class="container">\n        <div class="pull-left" style="margin-right: 16px">\n            <label>\n                <input type="checkbox" select-all-items-checkbox items="symbols.web"> Web\n            </label>\n            &nbsp;\n            <label>\n                <input type="checkbox" select-all-items-checkbox items="symbols.rest"> Rest\n            </label>\n        </div>\n        <div class="pull-right">\n            <button class="btn btn-xs btn-primary" ng-click="uploadSymbols()">Upload</button>\n        </div>\n    </div>\n</div>\n\n<div class="view-body">\n\n    <div class="container">\n\n        <div file-dropzone on-loaded="fileLoaded" class="alert alert-info">\n            Drag and drop *.json file here\n        </div>\n\n        <div ng-if="symbols.web.length > 0" selectable-list ng-model="symbols.web">\n            <div selectable-list-item ng-repeat="symbol in symbols.web">\n\n                <span class="label label-primary pull-right" ng-bind="symbol.type"></span>\n\n                <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]\n                <br>\n\n            </div>\n        </div>\n\n        <div ng-if="symbols.rest.length > 0" selectable-list ng-model="symbols.rest">\n            <div selectable-list-item ng-repeat="symbol in symbols.rest">\n\n                <span class="label label-warning pull-right" ng-bind="symbol.type"></span>\n\n                <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]\n                <br>\n\n            </div>\n        </div>\n\n    </div>\n\n</div>\n\n<div class="container">')}]),angular.module("app/views/pages/symbols-trash.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols-trash.html",'<div class="container">\n    <h2>Symbols Trash - <span ng-bind="(type|capitalize)"></span></h2>\n\n    <p class="text-muted">\n        View deleted <span ng-bind="type"></span> symbols and recover them\n    </p>\n\n    <hr>\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:124,class:\'fixed\'}">\n    <div class="container">\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" select-all-items-checkbox items="symbols">\n        </div>\n        <div class="pull-left">\n            <button class="btn btn-xs btn-default" ng-class="(symbols|selected).length > 0 ? \'\' : \'disabled\'"\n                    ng-click="recoverSelected()">\n                <i class="fa fa-rotate-left fa-fw"></i> Recover\n            </button>\n        </div>\n    </div>\n</div>\n\n<div class="container">\n\n    <div selectable-list ng-model="symbols">\n        <div selectable-list-item ng-repeat="symbol in symbols">\n\n            <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                <button type="button" class="btn btn-default btn-icon dropdown-toggle" dropdown-toggle>\n                    <i class="fa fa-bars"></i>\n                </button>\n                <ul class="dropdown-menu pull-left" role="menu">\n                    <li>\n                        <a href ng-click="recover(symbol)">\n                            <i class="fa fa-rotate-left fa-fw"></i> Recover\n                        </a>\n                    </li>\n                </ul>\n            </div>\n\n            <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]\n            <span class="text-muted">Rev. <span ng-bind="symbol.revision"></span></span>\n            <p class="text-muted">\n            	<span ng-bind="symbol.actions.length"></span> Actions\n            </p>\n        </div>\n    </div>\n\n    <div class="alert alert-info" ng-show="symbols.length == 0">\n        There are no symbols in the trash\n    </div>\n\n</div>')}]),angular.module("app/views/pages/symbols.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/symbols.html",'<div view-heading\n     title="Symbols"\n     sub-title="Manage all symbols of the project">\n</div>\n\n<div class="sub-nav" fix-on-scroll="{top:120,class:\'fixed\'}">\n    <div class="container">\n        <div class="pull-left" style="margin-right: 16px">\n            <input type="checkbox" select-all-items-checkbox items="allSymbols">\n        </div>\n        <div class="pull-left">\n\n            <div class="btn-group btn-group-xs" dropdown dropdown-hover>\n                <button class="btn btn-primary">\n                    Create\n                </button>\n                <ul class="dropdown-menu" role="menu">\n                    <li>\n                        <a href symbol-create-modal-handle project-id="{{project.id}}" on-created="addSymbol">\n                            Symbol\n                        </a>\n                        <a href symbol-group-create-modal-handle project-id="{{project.id}}" on-created="addGroup">\n                            Group\n                        </a>\n                    </li>\n                </ul>\n            </div>\n\n            <button class="btn btn-xs btn-default" ng-class="(allSymbols|selected).length == 1 ? \'\' : \'disabled\'"\n                    symbol-edit-modal-handle symbol="(allSymbols | selected | first)" on-updated="updateSymbol">\n                Edit\n            </button>\n            <button class="btn btn-xs btn-default" symbol-move-modal-handle groups="groups"\n                    ng-class="(allSymbols|selected).length > 0 ? \'\' : \'disabled\'">\n                Move\n            </button>\n            <button class="btn btn-xs btn-default" ng-class="(allSymbols|selected).length > 0 ? \'\' : \'disabled\'"\n                    ng-click="deleteSelectedSymbols()">\n                Delete\n            </button>\n\n        </div>\n        <div class="pull-right">\n            <button class="btn btn-xs btn-default" ng-click="toggleCollapseAllGroups()">\n                <i class="fa fa-fw" ng-class="collapseAll ? \'fa-chevron-down\': \'fa-chevron-right\'"></i>\n            </button>\n        </div>\n    </div>\n</div>\n\n<div class="view-body">\n    <div class="container symbol-group-list">\n\n        <div ng-repeat="group in groups track by group.id" class="symbol-group"\n             ng-class="group._isCollapsed ? \'collapsed\' :\'\'">\n\n            <div class="selectable-list symbol-group-header">\n                <div class="selectable-list-heading">\n                    <div class="selectable-list-control">\n                        <input type="checkbox" select-all-items-checkbox items="group.symbols">\n                    </div>\n                    <div class="selectable-list-content">\n\n                        <span class="pull-right" ng-click="group._isCollapsed = !group._isCollapsed">\n                            <i class="fa fa-fw"\n                               ng-class="group._isCollapsed ? \'fa-chevron-down\' : \'fa-chevron-right\'"></i>\n                        </span>\n\n                        <a href class="pull-right" style="margin-right: 15px" symbol-group-edit-modal-handle\n                           group="group" on-updated="updateGroup" on-deleted="deleteGroup">\n                            <i class="fa fa-fw fa-gear"></i>\n                        </a>\n\n                        <h3 class="symbol-group-title" ng-bind="group.name"\n                            ng-click="group._isCollapsed = !group._isCollapsed"></h3>\n\n                        <p class="text-muted">\n                            <span ng-bind="group.symbols.length"></span> Symbols\n                        </p>\n\n                    </div>\n                </div>\n            </div>\n\n            <div class="symbol-group-body" collapse="group._isCollapsed">\n\n                <div selectable-list ng-model="group.symbols">\n                    <div selectable-list-item ng-repeat="symbol in group.symbols">\n\n                        <div class="btn-group btn-group-xs pull-right" dropdown dropdown-hover>\n                            <button type="button" class="btn btn-default btn-icon dropdown-toggle" dropdown-toggle>\n                                <i class="fa fa-bars"></i>\n                            </button>\n                            <ul class="dropdown-menu pull-left" role="menu">\n                                <li>\n                                    <a href symbol-edit-modal-handle symbol="symbol" on-updated="updateSymbol">\n                                        <i class="fa fa-edit fa-fw"></i> Edit\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href ng-click="">\n                                        <i class="fa fa-exchange fa-fw"></i> Move\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href ng-click="deleteSymbol(symbol)" symbol-move-modal-handle groups="groups">\n                                        <i class="fa fa-trash fa-fw"></i> Delete\n                                    </a>\n                                </li>\n                                <li class="divider"></li>\n                                <li>\n                                    <a ui-sref="symbols.actions({symbolId:symbol.id})">\n                                        <i class="fa fa-list-ol fa-fw"></i> Actions\n                                    </a>\n                                </li>\n                                <li class="divider"></li>\n                                <li>\n                                    <a ui-sref="symbols.history({symbolId:symbol.id})">\n                                        <i class="fa fa-history fa-fw"></i> Restore\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n\n                        <strong ng-bind="symbol.name"></strong> [<span ng-bind="symbol.abbreviation"></span>]<br>\n\n                        <a ui-sref="symbols.actions({symbolId:symbol.id})">\n                            <span ng-bind="symbol.actions.length"></span> Actions <i class="fa fa-edit"></i>\n                        </a>\n\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>')
}]),angular.module("app/views/pages/tools-hypotheses-view.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/pages/tools-hypotheses-view.html","drop hypothesis from json here")}]),angular.module("app/views/widgets/widget-counter-examples.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/widgets/widget-counter-examples.html",'<form class="form form-condensed" ng-submit="addCounterExample()">\n    <div class="form-group">\n        <div class="input-group">\n            <input type="text" class="form-control" placeholder="input" ng-model="newCounterExample.input">\n\n            <div class="input-group-addon">\n                <i class="fa fa-info"></i>\n            </div>\n        </div>\n    </div>\n    <div class="form-group">\n        <div class="input-group">\n            <input type="text" class="form-control" placeholder="output" ng-model="newCounterExample.output">\n\n            <div class="input-group-addon">\n                <i class="fa fa-info"></i>\n            </div>\n        </div>\n    </div>\n    <div class="form-group">\n		<div class="btn-group btn-group-sm">\n    		<button class="btn btn-primary">Add Counter Example</button>\n    		<a href open-counter-example-builder counter-example="newCounterExample" class="btn btn-default">Edit</a>\n		</div>\n    </div>\n</form>\n<hr>\n\n<ul class="list-group">\n    <li class="list-group-item" ng-repeat="ce in counterExamples">\n        <span class="btn btn-icon pull-right" ng-click="removeCounterExample(ce, $index)">\n            <i class="fa fa-trash"></i>\n        </span>\n        {{ce.input}}<br>\n        {{ce.output}}\n    </li>\n</ul>')}]),angular.module("app/views/widgets/widget-test-resume-settings.html",[]).run(["$templateCache",function(a){"use strict";a.put("app/views/widgets/widget-test-resume-settings.html",'<form class="form form-condensed">\n\n    <div class="form-group">\n        <label class="control-label">EQ Oracle</label><br>\n        <select class="form-control" ng-model="configuration.eqOracle.type" ng-options="k for (k,v) in eqOracles">\n            <option value="" disabled>select a method</option>\n        </select>\n    </div>\n\n    <div class="form-group">\n        <div ng-if="configuration.eqOracle.type == eqOracles.RANDOM">\n            <p>\n                <input class="form-control" ng-model="configuration.eqOracle.minLength" type="number"\n                       style="display: inline; width: auto"> min length\n            </p>\n\n            <p>\n                <input class="form-control" ng-model="configuration.eqOracle.maxLength" type="number"\n                       style="display: inline; width: auto"> max length\n            </p>\n\n            <p>\n                <input class="form-control" ng-model="configuration.eqOracle.maxNoOfTests" type="number"\n                       style="display: inline; width: auto"> no of random words to be generated\n            </p>\n        </div>\n\n        <div ng-if="configuration.eqOracle.type == eqOracles.COMPLETE">\n            <p>\n                <input class="form-control" ng-model="configuration.eqOracle.minDepth" type="number"\n                       style="display: inline; width: auto"> min depth\n            </p>\n\n            <p>\n                <input class="form-control" ng-model="configuration.eqOracle.maxDepth" type="number"\n                       style="display: inline; width: auto"> max depth\n            </p>\n        </div>\n    </div>\n\n    <div class="form-group">\n        <label class="control-label">Max Amount of Steps to Learn (0 := never stop)</label>\n        <input ng-model="configuration.maxAmountOfStepsToLearn" class="form-control" type="text" placeholder="0">\n    </div>\n\n</form>')}]),function(){"use strict";function a(a,b,c){b.otherwise("/home"),a.state("home",{url:"/home",controller:"HomeController",templateUrl:c.views.PAGES+"/home.html"}).state("project",{url:"/project",views:{"@":{controller:"ProjectController",templateUrl:c.views.PAGES+"/project.html"}},data:{requiresProject:!0}}).state("project.create",{url:"/create",views:{"@":{controller:"ProjectCreateController",templateUrl:c.views.PAGES+"/project-create.html"}},data:{requiresProject:!1}}).state("project.settings",{url:"/settings",views:{"@":{templateUrl:c.views.PAGES+"/project-settings.html",controller:"ProjectSettingsController"}}}).state("symbols",{url:"/symbols",views:{"@":{controller:"SymbolsController",templateUrl:c.views.PAGES+"/symbols.html"}},data:{requiresProject:!0}}).state("symbols.trash",{url:"/trash",views:{"@":{controller:"SymbolsTrashController",templateUrl:c.views.PAGES+"/symbols-trash.html"}}}).state("symbols.history",{url:"/{symbolId:int}/history",views:{"@":{controller:"SymbolsHistoryController",templateUrl:c.views.PAGES+"/symbols-history.html"}}}).state("symbols.actions",{url:"/{symbolId:int}/actions",views:{"@":{controller:"SymbolsActionsController",templateUrl:c.views.PAGES+"/symbols-actions.html"}}}).state("symbols.import",{url:"/import",views:{"@":{controller:"SymbolsImportController",templateUrl:c.views.PAGES+"/symbols-import.html"}}}).state("symbols.export",{url:"/export",views:{"@":{controller:"SymbolsExportController",templateUrl:c.views.PAGES+"/symbols-export.html"}}}).state("learn",{"abstract":!0,url:"/learn",data:{requiresProject:!0}}).state("learn.setup",{url:"/setup",views:{"@":{controller:"LearnSetupController",templateUrl:c.views.PAGES+"/learn-setup.html"}}}).state("learn.start",{url:"/start",views:{"@":{controller:"LearnStartController",templateUrl:c.views.PAGES+"/learn-start.html"}}}).state("learn.results",{url:"/results",views:{"@":{controller:"LearnResultsController",templateUrl:c.views.PAGES+"/learn-results.html"}}}).state("learn.results.statistics",{url:"/statistics",views:{"@":{controller:"LearnResultsStatisticsController",templateUrl:c.views.PAGES+"/learn-results-statistics.html"}}}).state("learn.results.compare",{url:"/compare/:testNos",views:{"@":{controller:"LearnResultsCompareController",templateUrl:c.views.PAGES+"/learn-results-compare.html"}}}).state("about",{url:"/about",templateUrl:c.views.PAGES+"/about.html",data:{requiresProject:!1}}).state("help",{url:"/help",templateUrl:c.views.PAGES+"/help.html",data:{requiresProject:!1}}).state("tools",{"abstract":!0,template:'<ui-view class="animate-view" />'}).state("tools.hyotheses",{url:"/tools/hypotheses/view",templateUrl:c.views.PAGES+"/tools-hypotheses-view.html",data:{requiresProject:!1}})}function b(a,b,c){function d(a,d){d.data&&d.data.requiresProject&&null==c.project.get()&&(b.go("home"),a.preventDefault())}a.$on("$stateChangeStart",d)}angular.module("weblearner.routes").config(["$stateProvider","$urlRouterProvider","paths",a]).run(["$rootScope","$state","SessionService",b])}(),function(){"use strict";angular.module("weblearner.constants").constant("_",window._).constant("paths",{views:{BASE:"app/views",DIRECTIVES:"app/views/directives",MODALS:"app/views/modals",WIDGETS:"app/views/widgets",PAGES:"app/views/pages"},api:{URL:"/rest",PROXY_URL:"/rest/proxy?url="}}).constant("ActionTypes",{SEARCH_FOR_TEXT:"checkText",SEARCH_FOR_NODE:"checkNode",CLEAR:"clear",CLICK:"click",FILL:"fill",GO_TO:"goto",SUBMIT:"submit",WAIT:"wait",CALL_URL:"call",CHECK_STATUS:"checkStatus",CHECK_HEADER_FIELD:"checkHeaderField",CHECK_HTTP_BODY_TEXT:"checkForText",CHECK_ATTRIBUTE_EXISTS:"checkAttributeExists",CHECK_ATTRIBUTE_VALUE:"checkAttributeValue",CHECK_ATTRIBUTE_TYPE:"checkAttributeType"}).constant("EqOraclesEnum",{RANDOM:"random_word",COMPLETE:"complete",SAMPLE:"sample"}).constant("LearnAlgorithmsEnum",{EXTENSIBLE_LSTAR:"EXTENSIBLE_LSTAR",DHC:"DHC",DISCRIMINATION_TREE:"DISCRIMINATION_TREE"})}(),function(){"use strict";function a(a,b,c,d,e){function f(a,c){b.close(c)}a.webActionTypes=d,a.restActionTypes=e,a.symbol=c.symbol,a.$on("action.created",f),a.closeModal=function(){b.dismiss()}}angular.module("weblearner.controller").controller("ActionCreateModalController",["$scope","$modalInstance","modalData","WebActionTypes","RestActionTypes",a])}(),function(){"use strict";function a(a,b,c,d,e){function f(a,c){b.close(c)}a.webActionTypes=d,a.restActionTypes=e,a.symbol=c.symbol,a.action=angular.copy(c.action),a.$on("action.edited",f),a.closeModal=function(){b.dismiss()}}angular.module("weblearner.controller").controller("ActionEditModalController",["$scope","$modalInstance","modalData","WebActionTypes","RestActionTypes",a])}(),function(){"use strict";function a(a,b,c){a.text=c.text,a.regexp=c.regexp,a.errorMsg=c.errorMsg,a.ok=function(){b.close()},a.close=function(){b.dismiss()}}angular.module("weblearner.controller").controller("ConfirmDialogController",["$scope","$modalInstance","modalData",a])}(),function(){"use strict";function a(a,b,c){var d={nodesep:50,edgesep:25,ranksep:50,multigraph:!1};a.layoutSettings,a.layoutSettings=angular.copy(angular.isDefined(c.layoutSettings)?c.layoutSettings:d),a.update=function(){b.close(a.layoutSettings)},a.close=function(){b.dismiss()},a.defaultLayoutSettings=function(){a.layoutSettings=angular.copy(d)}}angular.module("weblearner.controller").controller("HypothesisLayoutSettingsController",["$scope","$modalInstance","modalData",a])}(),function(){"use strict";function a(a,b,c){a.userInput,a.text=c.text,a.inputPattern=c.regexp||"",a.errorMsg=c.errorMsg||"Unknown validation error",a.ok=function(){a.prompt_form.$valid?b.close(a.userInput):a.prompt_form.submitted=!0},a.close=function(){b.dismiss()}}angular.module("weblearner.controller").controller("PromptDialogController",["$scope","$modalInstance","modalData",a])}(),function(){"use strict";function a(a,b,c,d,e){var f=c.projectId;a.symbol=new d,a.groups=[],a.selectedGroup,e.Resource.getAll(f).then(function(b){a.groups=b}),a.createSymbol=function(){var c=_.find(a.groups,{name:a.selectedGroup});angular.isDefined(c)&&(a.symbol.group=c.id),d.Resource.create(f,a.symbol).then(function(a){b.close(a)})},a.closeModal=function(){b.dismiss()}}angular.module("weblearner.controller").controller("SymbolCreateModalController",a),a.$inject=["$scope","$modalInstance","modalData","Symbol","SymbolGroup"]}(),function(){"use strict";function a(a,b,c,d,e){a.symbol=c.symbol,a.updateSymbol=function(){e.removeSelection(a.symbol),a.symbol.type="web",d.Resource.update(a.symbol.project,a.symbol).then(function(a){b.close(a)})},a.closeModal=function(){b.dismiss()}}angular.module("weblearner.controller").controller("SymbolEditModalController",a),a.$inject=["$scope","$modalInstance","modalData","Symbol","SelectionService"]}(),function(){"use strict";function a(a,b,c,d,e){a.projectId=c.projectId,a.group=new d,a.groups=[],a.groupExists=!1,d.Resource.getAll(a.projectId).then(function(b){a.groups=b}),a.createGroup=function(){var c=e.findIndex(a.groups,{name:a.group.name});-1===c?(d.Resource.create(a.projectId,a.group).then(function(a){b.close(a)}),a.groupExists=!1):a.groupExists=!0},a.closeModal=function(){b.dismiss()}}angular.module("weblearner.controller").controller("SymbolGroupCreateModalController",a),a.$inject=["$scope","$modalInstance","modalData","SymbolGroup","_"]}(),function(){"use strict";function a(a,b,c,d){a.groupExists=!1,a.group=c.group.copy(),a.groups=[],d.Resource.getAll(a.group.project).then(function(b){a.groups=b}),a.updateGroup=function(){d.Resource.update(a.group.project,a.group).then(function(a){b.close({status:"updated",group:a})})},a.deleteGroup=function(){d.Resource["delete"](a.group.project,a.group).then(function(){b.close({status:"updated",group:a.group})})},a.closeModal=function(){b.dismiss()}}angular.module("weblearner.controller").controller("SymbolGroupEditModalController",a),a.$inject=["$scope","$modalInstance","modalData","SymbolGroup","_"]}(),function(){"use strict";function a(a,b,c){a.symbols=c.symbols,a.groups=c.groups,a.selectedGroup=null,a.moveSymbols=function(){null!==a.selectedGroup},a.selectGroup=function(b){a.selectedGroup=a.selectedGroup.name==b.name?null:b},a.closeModal=function(){b.dismiss()}}angular.module("weblearner.controller").controller("SymbolMoveModalController",a),a.$inject=["$scope","$modalInstance","modalData","Symbol"]}(),function(){"use strict";function a(a,b,c){a.test=c.test,a.ok=function(){b.dismiss()}}angular.module("weblearner.controller").controller("TestDetailsController",["$scope","$modalInstance","modalData",a])}(),function(){"use strict";function a(a,b,c,d,e,f){a.eqOracles=d,a.learnAlgorithms=e,a.learnConfiguration=c.learnConfiguration,a.$watch("learnConfiguration.eqOracle.type",function(b){a.learnConfiguration.eqOracle=f.create(b)}),a.ok=function(){b.close(a.learnConfiguration)},a.cancel=function(){b.dismiss()}}angular.module("weblearner.controller").controller("TestSetupSettingsController",["$scope","$modalInstance","modalData","EqOraclesEnum","LearnAlgorithmsEnum","EqOracleService",a])}(),function(){function a(a,b,c,d){a.project=b.project.get(),a.groups=[],a.allSymbols=[],a.collapseAll=!1,c.Resource.getAll(a.project.id,{embedSymbols:!0}).then(function(b){a.groups=b,a.allSymbols=d.flatten(d.pluck(a.groups,"symbols"))}),a.addGroup=function(){},a.deleteGroup=function(){},a.updateGroup=function(){}}angular.module("weblearner.controller").controller("GroupsController",a),a.$inject=["$scope","SessionService","SymbolGroup","_"]}(),function(){"use strict";function a(a,b,c,d){a.projects=[],d.project.get()&&b.go("project"),c.Resource.all().then(function(b){a.projects=b}),a.openProject=function(a){d.project.save(a),b.go("project")}}angular.module("weblearner.controller").controller("HomeController",a),a.$inject=["$scope","$state","Project","SessionService"]}(),function(){"use strict";function a(a,b,c,d){function e(b,c){b=b.split(","),_.forEach(b,function(b){d.getComplete(a.project.id,b).then(function(b){angular.isUndefined(c)?a.panels.push(b):a.panels[c]=b})})}a.project=c.project.get(),a.finalTestResults=[],a.panels=[],a.layoutSettings=[],d.getAllFinal(a.project.id).then(function(c){return a.finalTestResults=c,b.testNos}).then(e),a.fillPanel=function(a,b){e(a.testNo+"",b)}}angular.module("weblearner.controller").controller("LearnResultsCompareController",["$scope","$stateParams","SessionService","LearnResultResource",a])}(),function(){"use strict";function a(a,b,c,d,e){a.project=b.project.get(),a.tests=[],c.getAllFinal(a.project.id).then(function(b){a.tests=b}),a.deleteTest=function(b){d.removeSelection(b),e.confirm("Do you want to permanently delete this result?").then(function(){c["delete"](a.project.id,b.testNo).then(function(){_.remove(a.tests,{testNo:b.testNo})})})},a.deleteTests=function(){var b,f=d.getSelected(a.tests);f.length>0&&(b=_.pluck(f,"testNo"),e.confirm("Do you want to permanently delete this result?").then(function(){c["delete"](a.project.id,b).then(function(){_.forEach(b,function(b){_.remove(a.tests,{testNo:b})})})}))}}angular.module("weblearner.controller").controller("LearnResultsController",["$scope","SessionService","LearnResultResource","SelectionService","PromptService",a])}(),function(){"use strict";function a(a,b,c,d,e){a.project=b.project.get(),a.tests=[],a.chartModes={SINGLE_COMPLETE_TEST_RESULT:0,MULTIPLE_FINAL_TEST_RESULTS:1,TWO_COMPLETE_TEST_RESULTS:2},a.chartMode,a.chartDataSets=[],c.getAllFinal(a.project.id).then(function(b){a.tests=b}),a.chartFromMultipleFinalTestResults=function(){var b=e.getSelected(a.tests);b.length>0&&(a.chartMode=a.chartModes.MULTIPLE_FINAL_TEST_RESULTS,a.chartDataSets=[d.createChartDataFromMultipleTestResults(b)])},a.chartFromSingleCompleteTestResult=function(){var b=e.getSelected(a.tests);1==b.length&&c.getComplete(a.project.id,b[0].testNo).then(function(b){a.chartMode=a.chartModes.SINGLE_COMPLETE_TEST_RESULT,a.chartDataSets=[d.createChartDataFromSingleCompleteTestResult(b)]})},a.chartFromTwoCompleteTestResults=function(){var b=e.getSelected(a.tests),f=[];2==b.length&&c.getComplete(a.project.id,b[0].testNo).then(function(e){f.push(d.createChartDataFromSingleCompleteTestResult(e)),c.getComplete(a.project.id,b[1].testNo).then(function(b){f.push(d.createChartDataFromSingleCompleteTestResult(b)),a.chartMode=a.chartModes.TWO_COMPLETE_TEST_RESULTS,a.chartDataSets=f})})},a.back=function(){a.chartDataSets=[]}}angular.module("weblearner.controller").controller("LearnResultsStatisticsController",["$scope","SessionService","LearnResultResource","TestResultsChartService","SelectionService",a])}(),function(){"use strict";function a(a,b,c,d,e,f,g,h,i){a.project=d.project.get(),a.groups=[],a.allSymbols=[],a.collapseAll=!1,a.resetSymbol,a.learnConfiguration={symbols:[],algorithm:g.EXTENSIBLE_LSTAR,eqOracle:{type:f.COMPLETE,minDepth:1,maxDepth:1},maxAmountOfStepsToLearn:0},h.isActive().then(function(d){d.active?d.project==a.project.id?b.go("learn.start"):i.create({"class":"danger",content:"There is already running a test from another project.",dismissButton:!0}):c.Resource.getAll(a.project.id,{embedSymbols:!0}).then(function(b){a.groups=b,a.allSymbols=_.flatten(_.pluck(a.groups,"symbols"))})}),a.setResetSymbol=function(b){a.resetSymbol=b},a.startLearning=function(){var c=e.getSelected(a.allSymbols);c.length&&a.resetSymbol&&(_.forEach(c,function(b){a.learnConfiguration.symbols.push({id:b.id,revision:b.revision})}),a.learnConfiguration.resetSymbol={id:a.resetSymbol.id,revision:a.resetSymbol.revision},h.start(a.project.id,a.learnConfiguration).then(function(){b.go("learn.start")}))},a.updateLearnConfiguration=function(b){a.learnConfiguration=b}}angular.module("weblearner.controller").controller("LearnSetupController",["$scope","$state","SymbolGroup","SessionService","SelectionService","EqOraclesEnum","LearnAlgorithmsEnum","LearnerResource","ngToast",a])}(),function(){function a(a,b,c,d,e){function f(){a.active=!0,h=c(function(){e.isActive().then(function(b){b.active||(e.status().then(function(b){a.active=!1,a.test=b,a.isEqOracleSample="sample"==b.configuration.eqOracle.type}),c.cancel(h))})},i)}var g=d.project.get(),h=null,i=1e4;a.test=null,a.active=!1,a.isEqOracleSample=!1,a.counterExample={input:"",output:""},a.layoutSettings,f(),a.$on("$destroy",function(){c.cancel(h)}),a.updateLearnConfiguration=function(b){a.test.configuration=b},a.resumeLearning=function(){var b=angular.copy(a.test.configuration);delete b.algorithm,delete b.symbols,e.resume(g.id,a.test.testNo,b).then(function(){f()})},a.abort=function(){a.active&&e.stop().then(function(a){console.log(a)})}}angular.module("weblearner.controller").controller("LearnStartController",["$scope","$stateParams","$interval","SessionService","LearnerResource",a])}(),function(){"use strict";function a(a,b){a.project=b.project.get()}angular.module("weblearner.controller").controller("ProjectController",a),a.$inject=["$scope","SessionService"]}(),function(){"use strict";function a(a,b,c){a.project=new c,a.createProject=function(){c.Resource.create(a.project).then(function(){b.go("home")})}}angular.module("weblearner.controller").controller("ProjectCreateController",a),a.$inject=["$scope","$state","Project"]}(),function(){"use strict";function a(a,b,c,d,e){var f;a.project=d.project.get(),f=angular.copy(a.project),a.updateProject=function(){delete a.project.symbolAmount,c.Resource.update(a.project).then(function(b){d.project.save(b),a.project=b,f=angular.copy(a.project)})},a.deleteProject=function(){var f="Do you really want to delete this project with all its symbols and test results? This process can not be undone.";e.confirm(f).then(function(){c.Resource["delete"](a.project).then(function(){d.project.remove(),b.go("home")})})},a.resetForm=function(){a.project=angular.copy(f)}}angular.module("weblearner.controller").controller("ProjectSettingsController",["$scope","$state","Project","SessionService","PromptService",a])}(),function(){"use strict";function a(a,b,c,d,e){function f(b){_.forEach(b.actions,function(a){a._id=_.uniqueId()}),a.symbol=b,a.symbolCopy=b.copy()}a.project=d.project.get(),a.symbol,a.symbolCopy,c.Resource.get(a.project.id,b.symbolId).then(f),a.deleteSelectedActions=function(){var b=e.getSelected(a.symbol.actions);b.length&&_.forEach(b,a.deleteAction)},a.deleteAction=function(b){_.remove(a.symbol.actions,{_id:b._id})},a.addAction=function(b){b._id=_.uniqueId(),a.symbol.actions.push(b)},a.updateAction=function(b){var c=_.findIndex(a.symbol.actions,{_id:b._id});c>-1&&(a.symbol.actions[c]=b)},a.saveChanges=function(){var b=a.symbol.copy();e.removeSelection(b.actions),_.forEach(b.actions,function(a){delete a._id}),c.Resource.update(a.project.id,b).then(f)},a.revertChanges=function(){a.symbol=angular.copy(a.symbolCopy)}}angular.module("weblearner.controller").controller("SymbolsActionsController",a),a.$inject=["$scope","$stateParams","Symbol","SessionService","SelectionService","ngToast"]}(),function(){"use strict";function a(a,b,c,d,e){a.project=b.project.get(),a.groups=[],a.allSymbols=[],a.collapseAll=!1,c.Resource.getAll(a.project.id,{embedSymbols:!0}).then(function(b){a.groups=b,a.allSymbols=e.flatten(e.pluck(a.groups,"symbols"))}),a.toggleCollapseAllGroups=function(){a.collapseAll=!a.collapseAll,e.forEach(a.groups,function(b){b._isCollapsed=a.collapseAll})},a.deleteSymbol=function(b){Symbol.Resource["delete"](a.project.id,b.id).then(function(b){e.remove(a.symbols,{id:b.id})})},a.moveSelectedSymbolsTo=function(b){var c=d.getSelected(a.allSymbols);d.removeSelection(c),e.forEach(c,function(a){a.group=b.id,b.push(a)})},a.deleteSelectedSymbols=function(){var b,c=d.getSelected(a.symbols);c.length&&(b=e.pluck(c,"id"),Symbol.Resource.deleteSome(a.project.id,b).then(function(b){e.forEach(b,function(b){e.remove(a.symbols,{id:b.id})})}))},a.addSymbol=function(b){console.log(b);var c=e.findIndex(a.groups,{id:b.group});c>-1&&(a.groups[c].symbols.push(b),a.allSymbols.push(b))},a.addGroup=function(b){a.groups.push(b)},a.updateSymbol=function(){},a.updateGroup=function(b){var c=e.find(a.groups,{id:b.id});angular.isDefined(c)&&(c.name=b.name)},a.deleteGroup=function(b){e.forEach(b.symbols,function(b){e.remove(a.allSymbols,{id:b.id})}),e.remove(a.groups,{id:b.id})}}angular.module("weblearner.controller").controller("SymbolsController",a),a.$inject=["$scope","SessionService","SymbolGroup","SelectionService","_"]}(),function(){"use strict";function a(a,b,c,d,e){var f=c.project.get();a.symbols={web:[],rest:[]},d.getAll(f.id).then(function(c){a.symbols.web=b("typeOfWeb")(c),a.symbols.rest=b("typeOfRest")(c)}),a.getSelectedSymbols=function(){var b=a.symbols.web.concat(a.symbols.rest),c=e.getSelected(b);return e.removeSelection(c),_.forEach(c,function(a){delete a.id,delete a.revision,delete a.project}),c}}angular.module("weblearner.controller").controller("SymbolsExportController",["$scope","$filter","SessionService","SymbolResource","SelectionService",a])}(),function(){"use strict";function a(a,b,c,d){a.project=d.project.get(),a.revisions=[],a.latestSymbol,c.getRevisions(a.project.id,b.symbolId).then(function(b){a.latestSymbol=b.pop(),a.revisions=b}),a.restoreRevision=function(b){a.latestSymbol.name=b.name,a.latestSymbol.abbreviation=b.abbreviation,a.latestSymbol.actions=b.actions,c.update(a.project.id,a.latestSymbol).then(function(b){a.revisions.push(a.latestSymbol),a.latestSymbol=b})}}angular.module("weblearner.controller").controller("SymbolsHistoryController",["$scope","$stateParams","SymbolResource","SessionService",a])}(),function(){"use strict";function a(a,b,c,d){var e=b.project.get();a.symbols={web:[],rest:[]},a.fileLoaded=function(b){var c=angular.fromJson(b);_.forEach(a.symbols,function(a){a.project=e.id}),a.$apply(function(){a.symbols.web=_.filter(c,{type:"web"}),a.symbols.rest=_.filter(c,{type:"rest"})})},a.uploadSymbols=function(){var b=d.getSelected(a.symbols.web),f=d.getSelected(a.symbols.rest),g=b.concat(f);d.removeSelection(g),c.create(e.id,g)}}angular.module("weblearner.controller").controller("SymbolsImportController",["$scope","SessionService","SymbolResource","SelectionService",a])}(),function(){"use strict";function a(a,b,c,d,e){a.project=c.project.get(),a.symbols=[],a.type=b,d.getAll(a.project.id,{type:b,deleted:!0}).then(function(b){a.symbols=b}),a.recover=function(b){d.recover(a.project.id,b.id).then(function(){_.remove(a.symbols,{id:b.id})})},a.recoverSelected=function(){var b=e.getSelected(a.symbols);_.forEach(b,a.recover)}}angular.module("weblearner.controller").controller("SymbolsTrashController",["$scope","type","SessionService","SymbolResource","SelectionService",a])}(),function(){"use strict";function a(a){function b(a){a.inputs=["w1","w2","w3"],a.counterExample=[{input:"w1",output:"output1"},{input:"w2",output:"output2"},{input:"w3",output:"output3"}],a.add=function(){a.counterExample.push({input:null,output:null})},a.remove=function(b){a.counterExample.splice(b,1)},a.onDropInput=function(b,c,d){a.counterExample[d].input=b["json/custom-object"]},a.onDropOutput=function(b,c,d){a.counterExample[d].output=b["json/custom-object"]}}var c={scope:{},controller:["$scope",b],templateUrl:a.views.DIRECTIVES+"/counter-example-builder.html"};return c}angular.module("weblearner.directives").directive("counterExampleBuilder",a),a.$inject=["paths"]}(),function(){"use strict";function a(a){function b(b,c){function d(){angular.isDefined(b.data)&&a.prompt("Enter a name for the symbols file.",{regexp:/^[a-zA-Z0-9\.\-,_]+$/,errorMsg:'The name may not be empty and only consist of letters, numbers and the symbols ",._-".'}).then(e)}function e(a){var c,d="data:text/json;charset=utf-8,";if(angular.isDefined(b.data)){if(angular.isObject(b.data)||angular.isArray(b.data))d+=encodeURIComponent(angular.toJson(b.data));else{if(!angular.isFunction(b.data))return;d+=encodeURIComponent(angular.toJson(b.data()))}c=document.createElement("a"),c.style.display="none",c.setAttribute("href",d),c.setAttribute("target","_blank"),c.setAttribute("download",a+".json"),document.body.appendChild(c),c.click(),document.body.removeChild(c)}}c.on("click",d)}var c={restrict:"A",scope:{data:"="},link:b};return c}angular.module("weblearner.directives").directive("downloadAsJson",["PromptService",a])}(),function(){"use strict";function a(a){function b(b,c,d){function e(){a.prompt("Enter a name for the chart image file.",{regexp:/^[a-zA-Z0-9\.\-,_]+$/,errorMsg:'The name may not be empty and only consist of letters, numbers and the symbols ",._-".'}).then(f)}function f(a){if(d.downloadCanvasAsImage){var b,c=document.getElementById(d.downloadCanvasAsImage);if(null!=c){var e=c.toDataURL("image/png",1);b=document.createElement("a"),b.style.display="none",b.setAttribute("href",e),b.setAttribute("target","_blank"),b.setAttribute("download",a+".png"),document.body.appendChild(b),b.click(),document.body.removeChild(b)}}}c.on("click",e)}var c={restrict:"A",link:b};return c}angular.module("weblearner.directives").directive("downloadCanvasAsImage",["PromptService",a])}(),function(){"use strict";function a(a){function b(b,c,d){function e(){a.prompt("Enter a name for the svg file.",{regexp:/^[a-zA-Z0-9\.\-,_]+$/,errorMsg:'The name may not be empty and only consist of letters, numbers and the symbols ",._-".'}).then(f)}function f(a){var b,c=d.downloadHypothesisAsSvg,e=document.querySelector(c);if("SVG"==e.nodeName||(e=e.getElementsByTagName("svg")[0],null!=e)){e.setAttribute("version","1.1"),e.setAttribute("xmlns","http://www.w3.org/2000/svg");var f=(new XMLSerializer).serializeToString(e);b=document.createElement("a"),b.style.display="none",b.setAttribute("href","data:image/svg+xml,"+f),b.setAttribute("target","_blank"),b.setAttribute("download",a+".svg"),document.body.appendChild(b),b.click(),document.body.removeChild(b)}}c.on("click",e)}var c={link:b};return c}angular.module("weblearner.directives").directive("downloadHypothesisAsSvg",["PromptService",a])}(),function(){function a(a){function b(b,c){function d(){angular.isDefined(b.testResults)&&a.prompt("Enter a name for the csv file.",{regexp:/^[a-zA-Z0-9\.\-,_]+$/,errorMsg:'The name may not be empty and only consist of letters, numbers and the symbols ",._-".'}).then(e)}function e(a){var c,d,e="data:text/csv;charset=utf-8,";if(angular.isDefined(b.testResults)){if(!angular.isArray(b.testResults))return;d=b.testResults,e+=f(d),c=document.createElement("a"),c.style.display="none",c.setAttribute("href",e),c.setAttribute("target","_blank"),c.setAttribute("download",a+".csv"),document.body.appendChild(c),c.click(),document.body.removeChild(c)}}function f(a){var b='"Type";"Project";"TestNo";"StepNo";"Algorithm";"EqOracle";"Sybols";"Resets";"Duration (ms)"%0A';return _.forEach(a,function(a){b+='"'+a.type+'";',b+='"'+a.project+'";',b+='"'+a.testNo+'";',b+='"'+a.stepNo+'";',b+='"'+a.configuration.algorithm+'";',b+='"'+a.configuration.eqOracle.type+'";',b+='"'+a.sigma.length+'";',b+='"'+a.amountOfResets+'";',b+='"'+a.duration+'"%0A'}),b}c.on("click",d)}var c={restrict:"A",scope:{testResults:"="},link:b};return c}angular.module("weblearner.directives").directive("downloadTestResultsAsCsv",["PromptService",a])}(),function(){"use strict";function a(){function a(a,b,c,d){b.on("mouseenter",function(){a.$apply(function(){d.toggle(!0)})})}var b={restrict:"A",require:"dropdown",link:a};return b}angular.module("weblearner.directives").directive("dropdownHover",a)}(),function(){"use strict";function a(){function a(a,b){function c(a){_.forEach(a,function(a){d.readAsText(a)})}var d=new FileReader;d.onload=function(b){a.onLoaded()(b.target.result)},b.on("dragover",function(a){a.preventDefault(),a.stopPropagation(),a.dataTransfer.dropEffect="copy"}),b.on("dragenter",function(){b[0].style.outline="4px solid rgba(0,0,0,0.2)"}).on("dragleave",function(){b[0].style.outline="0"}),b.on("drop",function(a){a.preventDefault(),a.stopPropagation(),c(a.dataTransfer.files),b[0].style.outline="0"})}var b={restrict:"A",scope:{onLoaded:"&"},link:a};return b}angular.module("weblearner.directives").directive("fileDropzone",a)}(),function(){"use strict";function a(a){function b(b,c){function d(){var a=e.offsetWidth,d=e.offsetHeight;b.asStyle?(c[0].style.width=a+"px",c[0].style.height=d+"px"):(c[0].setAttribute("width",a),c[0].setAttribute("height",d))}var e=c.parent()[0];b.bindResize&&angular.element(a).on("resize",d),d()}var c={restrict:"A",scope:{bindResize:"=",asStyle:"="},link:b};return c}angular.module("weblearner.directives").directive("fitParentDimensions",["$window",a])}(),function(){"use strict";function a(a){function b(b,c,d){var e=b.$eval(d.fixOnScroll);if(!angular.isUndefined(e.top)&&!angular.isUndefined(e["class"])){var f=c[0].offsetHeight,g=document.createElement("div");g.style.height=f+"px",g.style.display="none",c.after(g),angular.element(a).on("scroll",function(){a.scrollY>=e.top?c.hasClass(e["class"])||(g.style.display="block",c.addClass(e["class"])):c.hasClass(e["class"])&&(g.style.display="none",c.removeClass(e["class"]))})}}var c={link:b};return c}angular.module("weblearner.directives").directive("fixOnScroll",["$window",a])}(),function(){function a(a,b){return a.intersect(b)}function b(b,d){var e=b.edge(d),f=b.node(d.v),g=b.node(d.w),h=e.points.slice(1,e.points.length-1);return h.unshift(a(f,h[0])),h.push(a(g,h[h.length-1])),c(e,h)}function c(a,b){var c=d3.svg.line().x(function(a){return a.x}).y(function(a){return a.y});return _.has(a,"lineInterpolate")&&c.interpolate(a.lineInterpolate),_.has(a,"lineTension")&&c.tension(Number(a.lineTension)),c(b)}function d(a,c){function d(c,d){function e(){f(),g(),h(),k(),l()}function f(){d.find("svg")[0].innerHTML=""}function g(){m=d3.select(d.find("svg")[0]),n=m.append("g"),o=m.node().parentNode,p=new graphlib.Graph({directed:!0,multigraph:!0}),p.setGraph(angular.isDefined(c.layoutSettings)?{edgesep:c.layoutSettings.edgesep,nodesep:c.layoutSettings.nodesep,ranksep:c.layoutSettings.ranksep}:{edgesep:25})}function h(){angular.isDefined(c.layoutSettings)&&c.layoutSettings.multigraph?i():j()}function i(){_.forEach(c.test.hypothesis.nodes,function(a,b){p.setNode(""+b,{shape:"circle",label:a.toString(),width:25})}),_.forEach(c.test.hypothesis.edges,function(a,b){var c=a.from+"-"+a.to+"|"+b;p.setEdge(a.from,a.to,{label:a.input+"/"+a.output,labeloffset:5,lineInterpolate:"basis"},c)}),dagreD3.dagre.layout(p,{})}function j(){var a={};
_.forEach(c.test.hypothesis.nodes,function(a,b){p.setNode(""+b,{shape:"circle",label:a.toString(),width:25})}),_.forEach(c.test.hypothesis.edges,function(b){a[b.from]?a[b.from][b.to]?a[b.from][b.to].push(b.input+"/"+b.output):a[b.from][b.to]=[b.input+"/"+b.output]:(a[b.from]={},a[b.from][b.to]=[b.input+"/"+b.output])}),_.forEach(a,function(a,b){_.forEach(a,function(a,c){p.setEdge(b,c,{label:a.join("\n"),labeloffset:5,lineInterpolate:"basis"},b+""+c)})}),dagreD3.dagre.layout(p,{})}function k(){(q=new dagreD3.render)(n,p);var a=(o.clientWidth-p.graph().width)/2;n.attr("transform","translate("+a+", 100)")}function l(){function d(){n.attr("transform","translate("+h.translate()+") scale("+h.scale()+")")}function e(){d3.event.sourceEvent.stopPropagation()}function f(a){var c=d3.select(this),d=p.node(a);d.x+=d3.event.dx,d.y+=d3.event.dy,c.attr("transform","translate("+d.x+","+d.y+")");var e=d3.selectAll(".path");_.forEach(p.edges(),function(a,c){var d=b(p,a);e[0][c].setAttribute("d",d)})}function g(){m.attr("width",o.clientWidth),m.attr("height",o.clientHeight)}var h,f;angular.isDefined(c.counterExample)&&m.selectAll(".edgeLabel tspan").on("click",function(){var a=this.innerHTML.split("/");c.$apply(function(){c.counterExample.input+=a[0]+",",c.counterExample.output+=a[1]+","})}),h=d3.behavior.zoom().scaleExtent([.1,10]).translate([(o.clientWidth-p.graph().width)/2,100]).on("zoom",d),h(m),f=d3.behavior.drag().origin(function(a){return a}).on("dragstart",e).on("drag",f),m.selectAll(".node").attr("cx",function(a){return a.x}).attr("cy",function(a){return a.y}).call(f),angular.element(a).on("resize",g),window.setTimeout(function(){window.dispatchEvent(new Event("resize"))},100)}var m,n,o,p,q;c.$watch("test",function(a){angular.isDefined(a)&&null!=a&&e()}),c.$watch("layoutSettings",function(a){angular.isDefined(a)&&e()})}var e={scope:{test:"=",counterExample:"=",layoutSettings:"="},templateUrl:c.views.DIRECTIVES+"/hypothesis.html",link:d};return e}angular.module("weblearner.directives").directive("hypothesis",["$window","paths",d])}(),function(){"use strict";function a(){function a(a){this.getPanels=function(){return a.panels},this.closePanelAt=function(b){a.panels.splice(b,1),a.$apply(),window.dispatchEvent(new Event("resize"))},a.addPanel=function(){a.panels.push(null)}}var b='<div style="position: absolute; top: 50px; bottom: 0; width: 100%;">   <div ng-click="addPanel()" style="position: absolute; right: 0; top: 0; bottom: 0; width: 40px; background: #f2f2f2; border-left: 1px solid #e7e7e7"></div>   <div style="position: absolute; left: 0; top: 0; bottom: 0; right: 40px; background: #fff" ng-transclude></div></div>',c={template:b,transclude:!0,scope:{panels:"=panelManager"},controller:["$scope",a]};return c}function b(){function a(a,b,c,d){function e(){f.style.width=100/a.panels.length+"%",f.style.left=100/a.panels.length*a.index+"%"}var f=b.children()[0];a.panels=d.getPanels(),a.$watch("panels.length",e),e()}var b='<div class="panel" style="position: absolute; top: 0; bottom: 0; width: 100%;" ng-transclude></div>',c={require:"^panelManager",template:b,transclude:!0,link:a,scope:{index:"=panelIndex"}};return c}function c(){function a(a,b,c,d){function e(){var a=parseInt(c.panelCloseButton);d.closePanelAt(a)}b.on("click",e)}var b={require:"^panelManager",link:a};return b}function d(a){function b(a,b,c,d){function e(){a.index=parseInt(a.panelIndex)}a.index,a.pointer=a.result.length-1,a.panels=d.getPanels(),a.$watch("panels.length",e),a.firstStep=function(){a.pointer=0},a.previousStep=function(){a.pointer-1<0?a.lastStep():a.pointer--},a.nextStep=function(){a.pointer+1>a.result.length-1?a.firstStep():a.pointer++},a.lastStep=function(){a.pointer=a.result.length-1},a.getCurrentStep=function(){return a.result[a.pointer]}}var c={require:"^panelManager",scope:{result:"=",panelIndex:"@"},templateUrl:a.views.DIRECTIVES+"/hypothesis-panel.html",link:b};return c}angular.module("weblearner.directives").directive("panelManager",a),angular.module("weblearner.directives").directive("panel",b),angular.module("weblearner.directives").directive("panelCloseButton",c),angular.module("weblearner.directives").directive("hypothesisSlideshowPanel",d),d.$inject=["paths"]}(),function(){"use strict";function a(a,b){function c(b,c){b.isLoading=function(){return a.pendingRequests.length>0},b.$watch(b.isLoading,function(a){c[0].style.display=a?"block":"none"})}var d={templateUrl:b.views.DIRECTIVES+"/load-screen.html",link:c};return d}angular.module("weblearner.directives").directive("loadScreen",a),a.$inject=["$http","paths"]}(),function(){"use strict";function a(a){var d={templateUrl:a.views.DIRECTIVES+"/navigation.html",link:b,controller:["$scope","$window","$state","SessionService",c]};return d}function b(a,b){function c(a){a.stopPropagation(),e.toggleClass(f)}var d=angular.element(b[0].getElementsByClassName("navbar-menu-handle")),e=angular.element(b[0].getElementsByClassName("navbar-offscreen")),f="show";d.on("click",c)}function c(a,b,c,d){a.project=d.project.get(),a.$on("project.opened",function(){a.project=d.project.get()}),a.$on("project.closed",function(){a.project=null}),a.closeProject=function(){d.project.remove(),c.go("home")}}angular.module("weblearner.directives").directive("navigation",["paths",a])}(),function(){"use strict";function a(a,b,c){function d(d,e){function f(){var e=a.open({templateUrl:c.views.MODALS+"/action-create-modal.html",controller:"ActionCreateModalController",resolve:{modalData:function(){return{symbol:angular.copy(d.symbol)}}}});e.result.then(function(a){d.onCreated()(a),b.create({"class":"success",content:"Action created"})})}e.on("click",f)}var e={restrict:"EA",scope:{symbol:"=",onCreated:"&"},link:d};return e}angular.module("weblearner.directives").directive("openActionCreateModal",["$modal","ngToast","paths",a])}(),function(){"use strict";function a(a,b,c){function d(d,e){function f(){if(!angular.isUndefined(d.action)){var e=a.open({templateUrl:c.views.MODALS+"/action-edit-modal.html",controller:"ActionEditModalController",resolve:{modalData:function(){return{symbol:angular.copy(d.symbol),action:angular.copy(d.action)}}}});e.result.then(function(a){b.create({"class":"success",content:"Action updated"}),d.onUpdated()(a)})}}e.on("click",f)}var e={restrict:"EA",scope:{symbol:"=",action:"=",onUpdated:"&"},link:d};return e}angular.module("weblearner.directives").directive("openActionEditModal",["$modal","ngToast","paths",a])}(),function(){function a(a){function b(b,c){c.on("click",function(){a.open({inputs:angular.copy(b.inputs),outputs:angular.copy(b.outputs),counterExample:angular.copy(b.counterExample)})})}var c={scope:{inputs:"=",outputs:"=",counterExample:"="},link:b};return c}angular.module("weblearner.directives").directive("openCounterExampleBuilder",a),a.$inject=["CounterExampleBuilderService"]}(),function(){"use strict";function a(a){function b(b,c){function d(){var c=a.open({templateUrl:paths.views.MODALS+"/hypothesis-layout-settings-modal.html",controller:"HypothesisLayoutSettingsController",resolve:{modalData:function(){return{layoutSettings:b.layoutSettings}}}});c.result.then(function(a){b.layoutSettings=a})}c.on("click",d)}var c={scope:{layoutSettings:"="},link:b};return c}angular.module("weblearner.directives").directive("openHypothesisLayoutSettingsModal",["$modal","paths",a])}(),function(){function a(a,b){function c(c,d){function e(){angular.isDefined(c.test)&&a.open({templateUrl:b.views.MODALS+"/modal-test-details.html",controller:"TestDetailsController",resolve:{modalData:function(){return{test:angular.copy(c.test)}}}})}d.on("click",e)}var d={scope:{test:"="},link:c};return d}angular.module("weblearner.directives").directive("openTestDetailsModal",["$modal","paths",a])}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/modal-test-setup-settings.html",controller:"TestSetupSettingsController",resolve:{modalData:function(){return{learnConfiguration:angular.copy(c.learnConfiguration)}}}});d.result.then(function(a){c.onOk()(a)})}d.on("click",e)}var d={restrict:"EA",scope:{learnConfiguration:"=",onOk:"&"},link:c};return d}angular.module("weblearner.directives").directive("openTestSetupSettingsModal",["$modal","paths",a])}(),function(){"use strict";function a(a){function b(b,c){function d(a,c){b.url=c.url,b.selector=c.selector}c.on("click",a.open),b.$on("webElementPicker.ok",d)}var c={scope:{url:"=",selector:"="},link:b};return c}angular.module("weblearner.directives").directive("openWebElementPicker",["WebElementPickerService",a])}(),function(){"use strict";function a(a){function b(b,c){function d(){this.checked?a.selectAll(b.items):a.deselectAll(b.items),b.$apply()}c.on("change",d)}var c={scope:{items:"="},link:b};return c}function b(){function a(a){this.getItems=function(){return a.items}}var b={transclude:!0,require:"ngModel",scope:{items:"=ngModel"},template:'<div class="selectable-list" ng-transclude></div>',controller:["$scope","SelectionService",a]};return b}function c(){function a(a,b,c,d){a.item=d.getItems()[a.$index]}var b={require:"^selectableList",transclude:!0,template:' <div class="selectable-list-item" ng-class="item._selected ? \'active\' : \'\'">               <div class="selectable-list-control">                   <input type="checkbox" ng-model="item._selected">               </div>               <div class="selectable-list-content" ng-transclude></div>           </div>',link:a};return b}angular.module("weblearner.directives").directive("selectAllItemsCheckbox",["SelectionService",a]),angular.module("weblearner.directives").directive("selectableList",b),angular.module("weblearner.directives").directive("selectableListItem",c)}(),function(){"use strict";function a(){function a(a,b,c){a.title=c.widgetTitle||"Untitled",a.collapsed=a.collapsed||!1,a.toggleCollapse=function(){a.collapsed=!a.collapsed}}var b='<div class="panel panel-default">   <div class="panel-heading">       <div class="pull-right">           <span class="panel-collapse-handle" ng-click="toggleCollapse()">               <i class="fa" ng-class="collapsed? \'fa-plus-square\' : \'fa-minus-square\'"></i>           </span>       </div>       <strong class="text-muted" ng-bind="title"></strong>   </div>   <div class="panel-body" ng-show="!collapsed" ng-transclude></div></div>',c={scope:{collapsed:"="},template:b,transclude:!0,link:a};return c}function b(a){function b(a){a.$watch("counterExamples.length",function(a){console.log(a)}),a.addCounterExample=function(){var b={input:[],output:[]};_.forEach(a.newCounterExample.input.split(","),function(a){""!=a.trim()&&b.input.push(a.trim())}),_.forEach(a.newCounterExample.output.split(","),function(a){""!=a.trim()&&b.output.push(a.trim())}),a.counterExamples.push(b),a.newCounterExample.input="",a.newCounterExample.output=""},a.removeCounterExample=function(b,c){a.counterExamples.splice(c,1)}}var c={templateUrl:a.views.WIDGETS+"/widget-counter-examples.html",scope:{counterExamples:"=",newCounterExample:"=counterExample"},controller:["$scope",b]};return c}function c(a){function b(a,b,c){a.eqOracles=b,a.$watch("configuration.eqOracle.type",function(b){a.configuration.eqOracle=c.create(b)})}var c={templateUrl:a.views.WIDGETS+"/widget-test-resume-settings.html",scope:{configuration:"="},controller:["$scope","EqOraclesEnum","EqOracleService",b]};return c}angular.module("weblearner.directives").directive("widget",a),angular.module("weblearner.directives").directive("widgetCounterExamples",b),b.$inject=["paths"],angular.module("weblearner.directives").directive("widgetTestResumeSettings",c),c.$inject=["paths"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-create-modal.html",controller:"SymbolCreateModalController",resolve:{modalData:function(){return{projectId:c.projectId}}}});d.result.then(function(a){c.onCreated()(a)})}d.on("click",e)}var d={restrict:"A",scope:{projectId:"@",onCreated:"&"},link:c};return d}angular.module("weblearner.directives").directive("symbolCreateModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-edit-modal.html",controller:"SymbolEditModalController",resolve:{modalData:function(){return{symbol:c.symbol.copy()}}}});d.result.then(function(a){c.onUpdated()(a)})}d.on("click",e)}var d={restrict:"EA",scope:{symbol:"=",onUpdated:"&"},link:c};return d}angular.module("weblearner.directives").directive("symbolEditModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-group-create-modal.html",controller:"SymbolGroupCreateModalController",resolve:{modalData:function(){return{projectId:c.projectId}}}});d.result.then(function(a){c.onCreated()(a)})}d.on("click",e)}var d={scope:{projectId:"@",onCreated:"&"},link:c};return d}angular.module("weblearner.directives").directive("symbolGroupCreateModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-group-edit-modal.html",controller:"SymbolGroupEditModalController",resolve:{modalData:function(){return{group:c.group}}}});d.result.then(function(a){"updated"===a.status?c.onUpdated()(a.group):"deleted"===a.status&&c.onDeleted()(a.group)})}d.on("click",e)}var d={scope:{group:"=",onUpdated:"&",onDeleted:"&"},link:c};return d}angular.module("weblearner.directives").directive("symbolGroupEditModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(c,d){function e(){var d=a.open({templateUrl:b.views.MODALS+"/symbol-move-modal.html",controller:"SymbolMoveModalController",resolve:{modalData:function(){return{symbols:c.symbols,groups:c.groups}}}});d.result.then(function(a){c.onMoved()(a)})}d.on("click",e)}var d={scope:{symbols:"=",groups:"=",onMoved:"&"},link:c};return d}angular.module("weblearner.directives").directive("symbolMoveModalHandle",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(){function a(a,b,c){var d,e,f=b.find("canvas")[0].getContext("2d");a.chartProperties=c.chartProperties,a.visibleChartProperty=a.chartProperties.AMOUNT_OF_SYMBOLS,this.createBarChart=function(a){d=new Chart(f).Bar(a,{responsive:!0})},this.createLineChart=function(a){d=new Chart(f).Line(a,{responsive:!0})},this.getChartData=function(){return a.chartData},this.setUpdate=function(a){e=a},a.showDuration=function(){e(d,a.chartProperties.DURATION),a.visibleChartProperty=a.chartProperties.DURATION},a.showResets=function(){e(d,a.chartProperties.AMOUNT_OF_RESETS),a.visibleChartProperty=a.chartProperties.AMOUNT_OF_RESETS},a.showSymbols=function(){e(d,a.chartProperties.AMOUNT_OF_SYMBOLS),a.visibleChartProperty=a.chartProperties.AMOUNT_OF_SYMBOLS}}var b='<div>   <canvas id="test-results-chart" width="800" height="400"></canvas>   <hr>   <div class="text-center">       <button class="btn btn-default btn-sm" ng-class="visibleChartProperty == chartProperties.DURATION ? \'active\' : \'\'" ng-click="showDuration()">Duration</button>       <button class="btn btn-default btn-sm" ng-class="visibleChartProperty == chartProperties.AMOUNT_OF_RESETS ? \'active\' : \'\'" ng-click="showResets()">#Resets</button>       <button class="btn btn-default btn-sm" ng-class="visibleChartProperty == chartProperties.AMOUNT_OF_SYMBOLS ? \'active\' : \'\'" ng-click="showSymbols()">#Symbols</button>   </div></div>',c={scope:{chartData:"="},controller:["$scope","$element","TestResultsChartService",a],template:b};return c}angular.module("weblearner.directives").directive("testResultsChart",a)}(),function(){"use strict";function a(){function a(a,b,c,d){function e(a){angular.isDefined(a)&&(a=a[0],g=angular.copy(a.datasets),a.datasets=[g[0]],d.createBarChart(a),d.setUpdate(f))}function f(a,b){_.forEach(g[b].data,function(b,c){a.datasets[0].bars[c].value=b}),a.update()}var g;a.chartData=d.getChartData(),a.$watch("chartData",e)}var b={require:"testResultsChart",link:a};return b}angular.module("weblearner.directives").directive("testResultsChartMultipleFinal",a)}(),function(){"use strict";function a(){function a(a,b,c,d){function e(a){angular.isDefined(a)&&(a=a[0],h=angular.copy(a.datasets),a.datasets=[h[0]],1==a.datasets[0].data.length?(d.createBarChart(a),d.setUpdate(f)):(d.createLineChart(a),d.setUpdate(g)))}function f(a,b){_.forEach(h[b].data,function(b,c){a.datasets[0].bars[c].value=b}),a.update()}function g(a,b){_.forEach(h[b].data,function(b,c){a.datasets[0].points[c].value=b}),a.update()}var h;a.chartData=d.getChartData(),a.$watch("chartData",e)}var b={require:"testResultsChart",link:a};return b}angular.module("weblearner.directives").directive("testResultsChartSingleComplete",a)}(),function(){"use strict";function a(){function a(a,b,c,d){function e(a){angular.isDefined(a)&&(h=angular.copy(a[0].datasets),i=angular.copy(a[1].datasets),a[1].labels.length>a[0].labels.length&&(a[0].labels=a[1].labels),a=a[0],a.datasets=[h[0],i[0]],1==a.labels.length?(d.createBarChart(a),d.setUpdate(f)):a.labels.length>1&&(d.createLineChart(a),d.setUpdate(g)))}function f(a,b){_.forEach(h[b].data,function(b,c){a.datasets[0].bars[c].value=b}),_.forEach(i[b].data,function(b,c){a.datasets[1].bars[c].value=b}),a.update()}function g(a,b){_.forEach(h[b].data,function(b,c){a.datasets[0].points[c].value=b}),_.forEach(i[b].data,function(b,c){a.datasets[1].points[c].value=b}),a.update()}var h,i;a.chartData=d.getChartData(),a.$watch("chartData",e)}var b={require:"testResultsChart",link:a};return b}angular.module("weblearner.directives").directive("testResultsChartTwoComplete",a)}(),function(){"use strict";function a(){var a='<div class="view-heading">   <div class="container">       <h2 class="view-heading-title" ng-bind="::title"></h2>       <p class="view-heading-sub-title" ng-bind="::subTitle"></p>   </div></div>';return{scope:{title:"@",subTitle:"@"},template:a}}angular.module("weblearner.directives").directive("viewHeading",a)}(),function(){"use strict";function a(a,b,c){function d(a,b){function c(){angular.element(h.contents()[0].body.querySelectorAll("a")).on("click",function(){})}function d(a){for(var b=[];a.parentNode;){if(a.id){b.unshift("#"+a.id);break}if(a==a.ownerDocument.documentElement)b.unshift(a.tagName);else{for(var c=1,d=a;d.previousElementSibling;d=d.previousElementSibling,c++);b.unshift(a.tagName+":nth-child("+c+")")}a=a.parentNode}return b.join(" > ")}function e(b){return i==b.target?!1:(null!=i&&(i.style.outline="0px"),i=b.target,i.style.outline="5px solid red",a.selector=d(i),void a.$apply())}function f(a){angular.isDefined(a)&&(a.preventDefault(),a.stopPropagation()),i.style.outline="0px",i=null,angular.element(h.contents()[0].body).off("mousemove",e),angular.element(h.contents()[0].body).off("click",f),angular.element(document.body).off("keyup",g)}function g(a){17==a.keyCode&&f()}var h=b.find("iframe"),i=null;a.url="",a.selector=null,h.on("load",c),a.loadUrl=function(){""==a.url?h[0].setAttribute("src",a.proxyUrl):h[0].setAttribute("src",a.proxyUrl+"/"+a.url)},a.enableSelection=function(){var a=angular.element(h.contents()[0].body);a.on("mousemove",e),a.one("click",f),angular.element(document.body).on("keyup",g)}}function e(c,d,e){c.show=!1,c.project=d.project.get(),c.proxyUrl=null,null!=c.project&&(c.proxyUrl=a.location.origin+e.api.PROXY_URL+c.project.baseUrl),c.$on("webElementPicker.open",function(){c.show=!0}),c.$on("project.opened",function(){c.project=d.project.get(),c.proxyUrl=a.location.origin+"/rest/proxy?url="+c.project.baseUrl}),c.close=function(){c.show=!1,b.close()},c.ok=function(){b.ok({url:"",selector:c.selector}),c.show=!1}}var f={scope:{},templateUrl:c.views.DIRECTIVES+"/web-element-picker.html",link:d,controller:["$scope","SessionService","paths",e]};return f}angular.module("weblearner.directives").directive("webElementPicker",["$window","WebElementPickerService","paths",a])}(),function(){function a(){}angular.module("weblearner.models").factory("Action",a)}(),function(){"use strict";function a(a){function b(a,b,c){this.name=a,this.baseUrl=b,this.description=c,this.id}return b.build=function(a){var c=new b(a.name,a.baseUrl,a.description);return c.id=a.id,c},b.buildSome=function(a){for(var c=[],d=0;d<a.length;d++)c.push(b.build(a[d]));return c},b.Resource=new a,b.Resource.build=b.build,b.Resource.buildSome=b.buildSome,b}angular.module("weblearner.models").factory("Project",a),a.$inject=["ProjectResource"]}(),function(){"use strict";function a(a){function b(a,b){this.name=a||null,this.abbreviation=b||null,this.actions=[],this.id,this.revision,this.project,this.hidden,this.group}return b.prototype.copy=function(){return b.build(angular.copy(this))},b.build=function(a){var c=new b(a.name,a.abbreviation);return c.actions=a.actions,c.id=a.id,c.revision=a.revision,c.project=a.project,c.hidden=a.hidden,c.group=a.group,c},b.buildSome=function(a){for(var c=[],d=0;d<a.length;d++)c.push(b.build(a[d]));return c},b.Resource=new a,b.Resource.build=b.build,b.Resource.buildSome=b.buildSome,b}angular.module("weblearner.models").factory("Symbol",a),a.$inject=["SymbolResource"]}(),function(){function a(a,b){function c(a){this.name=a||null,this.id,this.project,this.symbols}return c.prototype.copy=function(){return c.build(angular.copy(this))},c.build=function(a){var d=new c(a.name);return d.id=a.id,d.symbols=b.buildSome(a.symbols),d.project=a.project,d},c.buildSome=function(a){for(var b=[],d=0;d<a.length;d++)b.push(c.build(a[d]));return b},c.Resource=new a,c.Resource.build=c.build,c.Resource.buildSome=c.buildSome,c}angular.module("weblearner.models").factory("SymbolGroup",a),a.$inject=["SymbolGroupResource","Symbol"]}(),function(){"use strict";function a(a,b,c,d){function e(b){return a.get(c.api.URL+"/projects/"+b+"/results").then(d.success)["catch"](d.fail)}function f(b,e){return a.get(c.api.URL+"/projects/"+b+"/results/"+e).then(d.success)["catch"](d.fail)}function g(b,e){return a.get(c.api.URL+"/projects/"+b+"/results/"+e+"/complete").then(d.success)["catch"](d.fail)}function h(b,e){function f(a){var b="The results were deleted";return d.successWithToast(a,b)}return angular.isArray(e)&&(e=e.join()),a["delete"](c.api.URL+"/projects/"+b+"/results/"+e,{}).then(f)["catch"](d.fail)}var i={getAllFinal:e,getFinal:f,getComplete:g,"delete":h};return i}angular.module("weblearner.resources").factory("LearnResultResource",["$http","$q","paths","ResourceResponseService",a])}(),function(){"use strict";function a(a,b,c,d){function e(b,e){return a.post(c.api.URL+"/learner/start/"+b,e).then(d.success)["catch"](d.fail)}function f(){return a.get(c.api.URL+"/learner/stop/").then(d.success)["catch"](d.fail)}function g(b,e,f){return a.post(c.api.URL+"/learner/resume/"+b+"/"+e,f).then(d.success)["catch"](d.fail)}function h(){return a.get(c.api.URL+"/learner/status/").then(d.success)["catch"](d.fail)}function i(){return a.get(c.api.URL+"/learner/active").then(d.success)["catch"](d.fail)}var j={start:e,stop:f,resume:g,status:h,isActive:i};return j}angular.module("weblearner.resources").factory("LearnerResource",["$http","$q","paths","ResourceResponseService",a])}(),function(){"use strict";function a(a,b,c){function d(){}return d.prototype.all=function(){var d=this;return a.get(b.api.URL+"/projects").then(function(a){return d.buildSome(a.data)})["catch"](c.fail)},d.prototype.get=function(d){var e=this;return a.get(b.api.URL+"/projects/"+d).then(function(a){return e.build(a.data)})["catch"](c.fail)},d.prototype.create=function(d){var e=this;return a.post(b.api.URL+"/projects",d).then(function(a){return e.build(a.data)})["catch"](c.fail)},d.prototype.update=function(d){var e=this;return a.put(b.api.URL+"/projects/"+d.id,d).then(function(a){return e.build(a.data)})["catch"](c.fail)},d.prototype["delete"]=function(d){var e=this;return a["delete"](b.api.URL+"/projects/"+d.id).then(function(a){return e.build(a.data)})["catch"](c.fail)},d.prototype.build=function(a){return a},d.prototype.buildSome=function(a){return a},d}angular.module("weblearner.resources").factory("ProjectResource",a),a.$inject=["$http","paths","ResourceResponseService"]}(),function(){function a(a,b){function c(){}return c.prototype.get=function(c,d,e){var f=this,g="";return e&&e.embedSymbols&&e.embedSymbols===!0&&(g="?embed=symbols"),a.get(b.api.URL+"/projects/"+c+"/groups/"+d+g).then(function(a){return f.build(a.data)})},c.prototype.getAll=function(c,d){var e=this,f="";return d&&d.embedSymbols&&d.embedSymbols===!0&&(f="?embed=symbols"),a.get(b.api.URL+"/projects/"+c+"/groups"+f).then(function(a){return e.buildSome(a.data)})},c.prototype.getSymbols=function(c,d){var e=this;a.get(b.api.URL+"/projects/"+c+"/groups/"+d+"/symbols").then(function(a){return e.build(a.data)})},c.prototype.create=function(c,d){var e=this;return a.post(b.api.URL+"/projects/"+c+"/groups",d).then(function(a){return e.build(a.data)})},c.prototype.update=function(c,d){var e=this;return a.put(b.api.URL+"/projects/"+c+"/groups/"+d.id,d).then(function(a){return e.build(a.data)})},c.prototype["delete"]=function(c,d){var e=this;return a["delete"](b.api.URL+"/projects/"+c+"/groups/"+d.id).then(function(a){return e.build(a.data)})},c.prototype.build=function(a){return a},c.prototype.buildSome=function(a){return a},c}angular.module("weblearner.resources").factory("SymbolGroupResource",a),a.$inject=["$http","paths"]}(),function(){"use strict";function a(a,b,c){function d(){}return d.prototype.get=function(d,e){function f(a){return g.build(a.data)}var g=this;return a.get(b.api.URL+"/projects/"+d+"/symbols/"+e).then(f)["catch"](c.fail)},d.prototype.getAll=function(d,e){function f(a){return h.buildSome(a.data)}var g,h=this;return e&&e.deleted&&e.deleted===!0&&(g="?visbility=hidden"),a.get(b.api.URL+"/projects/"+d+"/symbols"+(g?g:"")).then(f)["catch"](c.fail)},d.prototype.getRevisions=function(d,e){function f(a){return g.buildSome(a.data)}var g=this;return a.get(b.api.URL+"/projects/"+d+"/symbols/"+e+"/complete").then(f)["catch"](c.fail)},d.prototype.create=function(d,e){function f(a){return g.build(a.data)}var g=this;return a.post(b.api.URL+"/projects/"+d+"/symbols",e).then(f)["catch"](c.fail)},d.prototype.createSome=function(d,e){function f(a){return g.buildSome(a.data)}var g=this;return a.post(b.api.URL+"/projects/"+d+"/symbols",e).then(f)["catch"](c.fail)},d.prototype.update=function(d,e){function f(a){return g.build(a.data)}var g=this;return a.put(b.api.URL+"/projects/"+d+"/symbols/"+e.id,e).then(f)["catch"](c.fail)},d.prototype["delete"]=function(d,e){function f(a){return g.build(a.data)}var g=this;return a.post(b.api.URL+"/projects/"+d+"/symbols/"+e+"/hide",{}).then(f)["catch"](c.fail)},d.prototype.deleteSome=function(d,e){function f(a){return g.buildSome(a.data)}var g=this;return e=e.join(","),a.post(b.api.URL+"/projects/"+d+"/symbols/"+symbolsIds+"/hide",{}).then(f)["catch"](c.fail)},d.prototype.recover=function(d,e){function f(a){return g.build(a.data)}var g=this;return a.post(b.api.URL+"/projects/"+d+"/symbols/"+e+"/show",{}).then(f)["catch"](c.fail)},d.prototype.build=function(a){return a},d.prototype.buildSome=function(a){return a},d}angular.module("weblearner.resources").factory("SymbolResource",a),a.$inject=["$http","paths","ResourceResponseService"]}(),function(){function a(a){function b(){a.$broadcast("counterExampleBuilder.open")}function c(){a.$broadcast("counterExampleBuilder.close")}function d(){a.$broadcast("counterExampleBuilder.ok")}var e={open:b,close:c,ok:d};return e}angular.module("weblearner.services").service("CounterExampleBuilderService",a),a.$inject=["$rootScope"]}(),function(){"use strict";function a(a){function b(b){switch(b){case a.COMPLETE:return angular.copy(c);case a.RANDOM:return angular.copy(d);case a.SAMPLE:return angular.copy(e);default:return angular.copy(d)}}var c={type:a.COMPLETE,minDepth:1,maxDepth:1},d={type:a.RANDOM,minLength:1,maxLength:1,maxNoOfTests:1},e={type:a.SAMPLE,counterExamples:[]},f={create:b};return f}angular.module("weblearner.services").factory("EqOracleService",["EqOraclesEnum",a])}(),function(){"use strict";function a(a){function b(){a.$broadcast("loadScreen.show")}function c(){a.$broadcast("loadScreen.hide")}var d={show:b,hide:c};return d}angular.module("weblearner.services").factory("LoadScreenService",["$rootScope",a])}(),function(){"use strict";function a(a,b){function c(c,d){var e=a.open({templateUrl:b.views.MODALS+"/modal-prompt-dialog.html",controller:"PromptDialogController",resolve:{modalData:function(){return{text:c,regexp:d.regexp,errorMsg:d.errorMsg}}}});return e.result}function d(c){var d=a.open({templateUrl:b.views.MODALS+"/modal-confirm-dialog.html",controller:"ConfirmDialogController",resolve:{modalData:function(){return{text:c}}}});return d.result}var e={prompt:c,confirm:d};return e}angular.module("weblearner.services").service("PromptService",a),a.$inject=["$modal","paths"]}(),function(){"use strict";function a(a,b){function c(a){return a.data}function d(a,c){return b.create({"class":"success",content:c}),a.data}function e(a){return console.error(a.data),f(a,a.data)}function f(c,d){return console.error(c.data),b.create({"class":"danger",content:d,dismissButton:!0}),a.reject()}function g(b){return console.error(b.data),a.reject()}var h={success:c,successWithToast:d,fail:e,failWithoutToast:g,failWithToast:f};return h}angular.module("weblearner.services").factory("ResourceResponseService",["$q","ngToast",a])}(),function(){"use strict";function a(){function a(a){return _.filter(a,function(a){return 1==a[i]})}function b(a){a[i]=!0}function c(a){a[i]=!1}function d(a){_.forEach(a,b)}function e(a){_.forEach(a,c)}function f(a){angular.isArray(a)||(a=[a]),_.forEach(a,function(a){delete a[i]})}function g(a){return angular.isUndefined(a._selected)?!1:a._selected}function h(){return i}var i="_selected",j={getSelected:a,select:b,deselect:c,selectAll:d,deselectAll:e,removeSelection:f,isSelected:g,getPropertyName:h()};return j}angular.module("weblearner.services").factory("SelectionService",a)}(),function(){"use strict";function a(a,b){function c(){var a=angular.fromJson(sessionStorage.getItem("project"));return null===a?null:b.build(a)}function d(b){sessionStorage.setItem("project",angular.toJson(b)),a.$broadcast("project.opened")}function e(){sessionStorage.removeItem("project"),a.$broadcast("project.closed")}var f={project:{get:c,save:d,remove:e}};return f}angular.module("weblearner.services").factory("SessionService",a),a.$inject=["$rootScope","Project"]}(),function(){"use strict";function a(){function a(a,b){var c={label:a,fillColor:"rgba(220,220,220,0.2)",strokeColor:"rgba(220,220,220,1)",pointColor:"rgba(220,220,220,1)",pointStrokeColor:"#fff",pointHighlightFill:"#fff",pointHighlightStroke:"rgba(220,220,220,1)",data:b};return c}function b(b){var c={labels:[],datasets:[a("Symbols",[]),a("Duration",[]),a("Resets",[])]};return _.forEach(b,function(a){c.labels.push("Test "+a.testNo),c.datasets[d.AMOUNT_OF_SYMBOLS].data.push(a.sigma.length),c.datasets[d.DURATION].data.push(a.duration),c.datasets[d.AMOUNT_OF_RESETS].data.push(a.amountOfResets)}),c}function c(b){var c={labels:[],datasets:[a("Symbols",[]),a("Duration",[]),a("Resets",[])]};return _.forEach(b,function(a){c.labels.push("Step "+a.stepNo),c.datasets[d.AMOUNT_OF_SYMBOLS].data.push(a.sigma.length),c.datasets[d.DURATION].data.push(a.duration),c.datasets[d.AMOUNT_OF_RESETS].data.push(a.amountOfResets)}),c}var d={AMOUNT_OF_SYMBOLS:0,DURATION:1,AMOUNT_OF_RESETS:2},e={createChartDataFromMultipleTestResults:b,createChartDataFromSingleCompleteTestResult:c,chartProperties:d};return e}angular.module("weblearner.services").service("TestResultsChartService",a)}(),function(){"use strict";function a(a){function b(){a.$broadcast("webElementPicker.open")}function c(){a.$broadcast("webElementPicker.close")}function d(b){a.$broadcast("webElementPicker.ok",b)}var e={open:b,close:c,ok:d};return e}angular.module("weblearner.services").factory("WebElementPickerService",["$rootScope",a])
}(),function(){"use strict";function a(){return function(a){return angular.isArray(a)&&a.length>0?_.first(a):void 0}}angular.module("weblearner.filters").filter("first",a)}(),function(){"use strict";function a(a){return function(b){switch(b){case a.COMPLETE:return"Complete";case a.RANDOM:return"Random";case a.SAMPLE:return"Manual";default:return""}}}function b(a){return function(b){switch(b){case a.DHC:return"DHC";case a.EXTENSIBLE_LSTAR:return"L*";case a.DISCRIMINATION_TREE:return"Discrimination Tree";default:return""}}}angular.module("weblearner.filters").filter("niceEqOracleName",["EqOraclesEnum",a]),angular.module("weblearner.filters").filter("niceLearnAlgorithmName",["LearnAlgorithmsEnum",b])}(),function(){"use strict";function a(a){return function(b){return _.filter(b,function(b){return a.isSelected(b)})}}angular.module("weblearner.filters").filter("selected",["SelectionService",a])}(),function(){"use strict";function a(){return function(a){return a.charAt(0).toUpperCase()+a.slice(1)}}angular.module("weblearner.filters").filter("capitalize",a)}(),function(){"use strict";function a(){return function(a){return _.filter(a,{type:"rest"})}}function b(){return function(a){return _.filter(a,{type:"web"})}}angular.module("weblearner.filters").filter("typeOfRest",a).filter("typeOfWeb",b)}();