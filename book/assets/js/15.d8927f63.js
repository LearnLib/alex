(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{426:function(e,t,o){e.exports=o.p+"assets/img/docker-debug.f0cf1eeb.png"},427:function(e,t,o){e.exports=o.p+"assets/img/live-reload.1305d5df.png"},502:function(e,t,o){"use strict";o.r(t);var r=o(65),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"development-docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#development-docker"}},[e._v("#")]),e._v(" Development (Docker)")]),e._v(" "),r("h2",{attrs:{id:"requirements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),r("p",[e._v("To run ALEX, install the following software on your machine:")]),e._v(" "),r("p",[r("strong",[e._v("Linux")])]),e._v(" "),r("ul",[r("li",[e._v("Docker (v20.10.*) and")]),e._v(" "),r("li",[e._v("Docker Compose (v1.28.*)")])]),e._v(" "),r("p",[r("strong",[e._v("Windows / Mac")])]),e._v(" "),r("ul",[r("li",[e._v("Docker for Windows")])]),e._v(" "),r("h2",{attrs:{id:"installation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),r("p",[r("strong",[e._v("Windows, Linux, Mac (Intel)")])]),e._v(" "),r("ol",[r("li",[e._v("Clone the repository.")]),e._v(" "),r("li",[e._v("Run "),r("code",[e._v("docker-compose -f docker-compose.develop.yml pull")]),e._v(".")]),e._v(" "),r("li",[e._v("Run "),r("code",[e._v("docker-compose -f docker-compose.develop.yml up")]),e._v(".")]),e._v(" "),r("li",[e._v("Open "),r("code",[e._v("http://127.0.0.1:4200")]),e._v(" in a web browser to access the frontend.")])]),e._v(" "),r("p",[r("strong",[e._v("Mac (ARM)")])]),e._v(" "),r("ol",[r("li",[e._v("Clone the repository.")]),e._v(" "),r("li",[e._v("Run "),r("code",[e._v("docker-compose -f docker-compose.develop.yml -f docker-compose.overrides.m1.yml pull")]),e._v(".")]),e._v(" "),r("li",[e._v("Run "),r("code",[e._v("docker-compose -f docker-compose.develop.yml -f docker-compose.overrides.m1.yml up")]),e._v(".")]),e._v(" "),r("li",[e._v("Open "),r("code",[e._v("http://127.0.0.1:4200")]),e._v(" in a web browser to access the frontend.")])]),e._v(" "),r("h2",{attrs:{id:"credentials"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#credentials"}},[e._v("#")]),e._v(" Credentials")]),e._v(" "),r("p",[e._v("After the first start, you can log in as an admin using the account below:")]),e._v(" "),r("p",[e._v("Email: "),r("em",[e._v("admin@alex.example")]),e._v(" "),r("br"),e._v("\nPassword: "),r("em",[e._v("admin")])]),e._v(" "),r("h2",{attrs:{id:"services"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#services"}},[e._v("#")]),e._v(" Services")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Port")]),e._v(" "),r("th",[e._v("Service")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("4200")]),e._v(" "),r("td",[e._v("Frontend (with live reload)")])]),e._v(" "),r("tr",[r("td",[e._v("8000")]),e._v(" "),r("td",[e._v("API")])]),e._v(" "),r("tr",[r("td",[e._v("5005")]),e._v(" "),r("td",[e._v("API Debug Port")])]),e._v(" "),r("tr",[r("td",[e._v("4444")]),e._v(" "),r("td",[e._v("Selenium Hub")])]),e._v(" "),r("tr",[r("td",[e._v("7901")]),e._v(" "),r("td",[e._v("Chrome VNC (open in browser)")])]),e._v(" "),r("tr",[r("td",[e._v("7901")]),e._v(" "),r("td",[e._v("Firefox VNC (open in browser)")])])])]),e._v(" "),r("p",[e._v("For both, the Chrome and the Firefox VNC server, you can use the password "),r("code",[e._v("secret")]),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"backend-debugging"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#backend-debugging"}},[e._v("#")]),e._v(" Backend debugging")]),e._v(" "),r("p",[e._v("You can debug the backend of ALEX from within Docker.\nIn this case, we use IntelliJ to connect to the remote debugger.\nTherefore, create a new run configuration.\nGo to "),r("code",[e._v("Run")]),e._v(", "),r("code",[e._v("Edit Configurations...")]),e._v(", add a new configuration of type "),r("code",[e._v("Remote JVM Debug")]),e._v(" and configure it according the following image:")]),e._v(" "),r("p",[r("img",{attrs:{src:o(426),alt:"Docker debug"}})]),e._v(" "),r("p",[e._v("Then, start ALEX via the "),r("code",[e._v("docker-compose.develop.yml")]),e._v(", wait until the application is started and run the created configuration.")]),e._v(" "),r("h2",{attrs:{id:"backend-live-reload"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#backend-live-reload"}},[e._v("#")]),e._v(" Backend live reload")]),e._v(" "),r("p",[e._v("Thanks to Spring devtools, we can leverage the live reload capability to restart the application automatically as soon as the code changes.\nTherefore, create a new run configuration.\nGo to "),r("code",[e._v("Run")]),e._v(", "),r("code",[e._v("Edit Configurations...")]),e._v(", add a new configuration of type "),r("code",[e._v("Application")]),e._v(" and configure it according the following image:")]),e._v(" "),r("p",[r("img",{attrs:{src:o(427),alt:"Live reload"}})]),e._v(" "),r("p",[e._v("Then, start ALEX via the "),r("code",[e._v("docker-compose.develop.yml")]),e._v(", wait until the application is started and run the created configuration.\nNow you can make changes in the Java files, rebuild the module (e.g. via "),r("code",[e._v("STRG+Shift+F9")]),e._v(") and the application is rebuild inside the container.")])])}),[],!1,null,null,null);t.default=a.exports}}]);