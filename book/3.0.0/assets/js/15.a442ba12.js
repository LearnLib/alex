(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{426:function(e,t,n){e.exports=n.p+"assets/img/docker-debug.f0cf1eeb.png"},427:function(e,t,n){e.exports=n.p+"assets/img/live-reload.1305d5df.png"},501:function(e,t,n){"use strict";n.r(t);var a=n(65),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"development"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[e._v("#")]),e._v(" Development")]),e._v(" "),a("p",[e._v("On this page, we present some information for developers and maintainers of ALEX.")]),e._v(" "),a("ul",[a("li",[e._v("Git")]),e._v(" "),a("li",[e._v("Docker")]),e._v(" "),a("li",[e._v("Docker Compose")])]),e._v(" "),a("h2",{attrs:{id:"frontend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontend"}},[e._v("#")]),e._v(" Frontend")]),e._v(" "),a("p",[e._v("Make sure you have the following software installed on your development machine:")]),e._v(" "),a("ul",[a("li",[e._v("Node.js v16 and NPM v8")])]),e._v(" "),a("p",[e._v("The frontend is developed with "),a("a",{attrs:{href:"https://angular.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Angular"),a("OutboundLink")],1),e._v(", relies on the Angular CLI and is written in Typescript.\nStyling in ALEX is done with "),a("a",{attrs:{href:"https://getbootstrap.com/docs/4.3/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bootstrap v4"),a("OutboundLink")],1),e._v(" and SASS stylesheets.\nAll frontend files can be found in "),a("em",[e._v("frontend/src/main/javascript")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"backend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backend"}},[e._v("#")]),e._v(" Backend")]),e._v(" "),a("p",[e._v("Make sure you have the following software installed on your development machine:")]),e._v(" "),a("ul",[a("li",[e._v("Java JDK 17")]),e._v(" "),a("li",[e._v("Maven 3.8.*")])]),e._v(" "),a("h3",{attrs:{id:"maven-goals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven-goals"}},[e._v("#")]),e._v(" Maven goals")]),e._v(" "),a("p",[e._v("Make sure you "),a("code",[e._v("mvn install")]),e._v("ed ALEX once before executing any of the following commands.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Command")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("mvn test")])]),e._v(" "),a("td",[e._v("Execute all backend unit tests.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("mvn verify")])]),e._v(" "),a("td",[e._v("Execute all backend unit and integration tests.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("mvn checkstyle:check -Pcode-analysis")])]),e._v(" "),a("td",[e._v("Check if the code style is according to the specifications.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("mvn spotbugs:check -Pcode-analysis")])]),e._v(" "),a("td",[e._v("Execute static code analysis with Spotbugs.")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("mvn spring-boot:run")])]),e._v(" "),a("td",[e._v("Start the REST API of ALEX.")])])])]),e._v(" "),a("h3",{attrs:{id:"docker-debugging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-debugging"}},[e._v("#")]),e._v(" Docker debugging")]),e._v(" "),a("p",[e._v("You can debug the backend of ALEX from within Docker.\nIn this case, we use IntelliJ to connect to the remote debugger.\nTherefore, create a new run configuration.\nGo to "),a("code",[e._v("Run")]),e._v(", "),a("code",[e._v("Edit Configurations...")]),e._v(", add a new configuration of type "),a("code",[e._v("Remote JVM Debug")]),e._v(" and configure it according the following image:")]),e._v(" "),a("p",[a("img",{attrs:{src:n(426),alt:"Docker debug"}})]),e._v(" "),a("p",[e._v("Then, start ALEX via the "),a("code",[e._v("docker-compose.develop.yml")]),e._v(", wait until the application is started and run the created configuration.")]),e._v(" "),a("h3",{attrs:{id:"live-reload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#live-reload"}},[e._v("#")]),e._v(" Live reload")]),e._v(" "),a("p",[e._v("Thanks to Spring devtools, we can leverage the live reload capability to restart the application automatically as soon as the code changes.\nTherefore, create a new run configuration.\nGo to "),a("code",[e._v("Run")]),e._v(", "),a("code",[e._v("Edit Configurations...")]),e._v(", add a new configuration of type "),a("code",[e._v("Application")]),e._v(" and configure it according the following image:")]),e._v(" "),a("p",[a("img",{attrs:{src:n(427),alt:"Live reload"}})]),e._v(" "),a("p",[e._v("Then, start ALEX via the "),a("code",[e._v("docker-compose.develop.yml")]),e._v(", wait until the application is started and run the created configuration.\nNow you can make changes in the Java files, rebuild the module (e.g. via "),a("code",[e._v("STRG+Shift+F9")]),e._v(") and the application is rebuild inside the container.")]),e._v(" "),a("h2",{attrs:{id:"cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[e._v("#")]),e._v(" CLI")]),e._v(" "),a("p",[e._v("Make sure you have the following software installed on your development machine:")]),e._v(" "),a("ul",[a("li",[e._v('Node.js v16 and NPM v8When installed locally, and the target app is also locally, the base URL of a project should start with: "http://docker.host.internal" (for Linux) and "http://192.168.65.2" (for MacOS and Windows).')])]),e._v(" "),a("h2",{attrs:{id:"performing-a-release"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performing-a-release"}},[e._v("#")]),e._v(" Performing a release")]),e._v(" "),a("p",[e._v("In the "),a("code",[e._v("developer")]),e._v(" branch, perform the following steps:")]),e._v(" "),a("ol",[a("li",[e._v("Update the version, in the following files:\n"),a("ul",[a("li",[a("code",[e._v("backend/pom.xml")])]),e._v(" "),a("li",[a("code",[e._v("frontend/package.json")])]),e._v(" "),a("li",[a("code",[e._v("frontend/src/environments/environment.*.ts")])]),e._v(" "),a("li",[a("code",[e._v("cli/package.json")])]),e._v(" "),a("li",[a("code",[e._v("docs/package.json")])])])]),e._v(" "),a("li",[e._v("Commit and push the changes to the "),a("code",[e._v("developer")]),e._v(" branch.\n"),a("ul",[a("li",[e._v("Ensure that the "),a("a",{attrs:{href:"https://github.com/LearnLib/alex/actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("CI pipeline"),a("OutboundLink")],1),e._v(" passes.")])])]),e._v(" "),a("li",[e._v("Merge the "),a("code",[e._v("developer")]),e._v(" branch in the "),a("code",[e._v("master")]),e._v(" branch.\n"),a("ul",[a("li",[e._v("Ensure that the "),a("a",{attrs:{href:"https://github.com/LearnLib/alex/actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("CI pipeline"),a("OutboundLink")],1),e._v(" passes.")])])]),e._v(" "),a("li",[e._v("In the "),a("code",[e._v("master")]),e._v(" branch, create a new tag with the new version and perform a GitHub release.\n"),a("ul",[a("li",[e._v("Append the current "),a("code",[e._v("docker-compose.production.yml")]),e._v(" file.\nFor this purpose, rename the file according to the current release version, e.g. "),a("code",[e._v("docker-compose.alex-3.0.0.yml")])])])]),e._v(" "),a("li",[e._v("In the "),a("code",[e._v("developer")]),e._v(" branch, increment the version in all files from step 1 to the next minor version and append the "),a("em",[e._v("-SNAPSHOT")]),e._v(" suffix.")])])])}),[],!1,null,null,null);t.default=o.exports}}]);