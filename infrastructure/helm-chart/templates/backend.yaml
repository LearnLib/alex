apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
spec:
  ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app: backend
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  GRID_HOST: "selenium-hub"
  GRID_PORT: "4444"
  DATABASE_HOST: "postgres"
  DATABASE_PORT: "5432"
  DATABASE_NAME: {{ .Values.database.name }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: backend-pv-volume
  labels:
    app: backend
spec:
  storageClassName: {{ .Values.storageClassName }}
  capacity:
    storage: {{ .Values.backend.storage }}
  claimRef:
    namespace: {{ .Release.Namespace }}
    name: backend-pv-claim
  accessModes:
    - ReadWriteMany
  hostPath:
    path: {{ .Values.backend.hostPath }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-pv-claim
  labels:
    app: backend
spec:
  storageClassName: {{ .Values.storageClassName }}
  volumeName: backend-pv-volume
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.backend.storage }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: backend
  labels:
    app: backend
spec:
  serviceName: backend
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      serviceAccountName: alex-sa
      containers:
        - name: backend
          image: {{ .Values.backendImage }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          envFrom:
            - configMapRef:
                name: backend-config
          env:
            - name: RUNTIME
              value: kubernetes
            - name: KUBERNETES_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: alex-secrets
                  key: databaseUser
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: alex-secrets
                  key: databasePassword
          volumeMounts:
            - name: backend-data
              mountPath: /var/lib/alex/data
      restartPolicy: Always
      volumes:
        - name: backend-data
          persistentVolumeClaim:
            claimName: backend-pv-claim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: alex-role-{{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log", "deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
  - apiGroups: [ "extensions" ]
    resources: [ "deployments" ]
    verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: alex-{{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    namespace: {{ .Release.Namespace }}
    name: alex-sa
roleRef:
  kind: ClusterRole
  name: alex-role-{{ .Release.Namespace }}
  apiGroup: "rbac.authorization.k8s.io"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alex-sa
---
