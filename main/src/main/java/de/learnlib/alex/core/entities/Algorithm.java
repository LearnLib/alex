/*
 * Copyright 2016 TU Dortmund
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package de.learnlib.alex.core.entities;

import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Transient;
import java.io.Serializable;
import java.util.Objects;

/**
 * An entity representation of the {@link LearnAlgorithm} annotation.
 */
@Embeddable
public class Algorithm implements Serializable {

    private static final long serialVersionUID = 6543691743731519994L;

    /** The internal name of the Algorithm. */
    private String name;

    /** The pretty, more user friendly name of the Algorithm. */
    private String prettyName;

    /**
     * Default constructor.
     */
    public Algorithm() {
        this("", "");
    }

    /**
     * Constructor which initializes the fields.
     *
     * @param name
     *         The internal name of the Algorithm.
     * @param prettyName
     *         The pretty, user friendly name of the Algorithm.
     */
    public Algorithm(String name, String prettyName) {
        this.name = name;
        this.prettyName = prettyName;
    }

    /**
     * @return The internal name of the Algoirhtm.
     */
    @Column(name = "ALGORITHM")
    public String getName() {
        return name;
    }

    /**
     * Set the internal name of the Algorithm.
     * For Hibernate only.
     *
     * @param name
     *         The new internal name of the algorithm.
     */
    private void setName(String name) {
        this.name = name;
    }

    /**
     * @return The pretty and more user friendly name of the Algorithm.
     */
    @Transient
    public String getPrettyName() {
        return prettyName;
    }

    @Override
    @SuppressWarnings({"checkstyle:needbraces", "checkstyle:operatorwrap"}) // Auto generated by IntelliJ
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Algorithm algorithm = (Algorithm) o;
        return Objects.equals(name, algorithm.name);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name);
    }

}
